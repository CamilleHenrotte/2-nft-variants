{"id":"7aba95b2508868e073d9327192a4f06e","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/CounterPrimeNumberTokenId.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport {IERC721Enumerable} from \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\n\ncontract CounterPrimeNumberTokenId {\n    function countPrimeNumberTokenId(address tokenOwner, address nftAddress) external view returns (uint256 counter) {\n        uint256 balance = IERC721Enumerable(nftAddress).balanceOf(tokenOwner);\n        counter = 0;\n\n        for (uint256 index = 0; index < balance; index++) {\n            uint256 tokenId = IERC721Enumerable(nftAddress).tokenOfOwnerByIndex(tokenOwner, index);\n            if (isPrimeNumber(tokenId)) {\n                counter++;\n            }\n        }\n    }\n    function isPrimeNumber(uint256 integer) internal pure returns (bool) {\n        if (integer < 2) return false;\n        if (integer == 2) return true;\n        if (integer % 2 == 0) return false;\n        for (uint256 i = 3; i * i <= integer; i += 2) {\n            if (integer % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[158],"IERC721":[115]},"id":116,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":116,"sourceUnit":159,"src":"133:47:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"IERC165","nameLocations":["271:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":158,"src":"271:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"271:7:0"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"182:67:0","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":115,"linearizedBaseContracts":[115,158],"name":"IERC721","nameLocation":"260:7:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"285:88:0","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":14,"name":"Transfer","nameLocation":"384:8:0","nodeType":"EventDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:0","nodeType":"VariableDeclaration","scope":14,"src":"393:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:0","nodeType":"VariableDeclaration","scope":14,"src":"415:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:0","nodeType":"VariableDeclaration","scope":14,"src":"435:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:0"},"src":"378:82:0"},{"anonymous":false,"documentation":{"id":15,"nodeType":"StructuredDocumentation","src":"466:94:0","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":23,"name":"Approval","nameLocation":"571:8:0","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:0","nodeType":"VariableDeclaration","scope":23,"src":"580:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:0","nodeType":"VariableDeclaration","scope":23,"src":"603:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:0","nodeType":"VariableDeclaration","scope":23,"src":"629:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:0"},"src":"565:89:0"},{"anonymous":false,"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"660:117:0","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":32,"name":"ApprovalForAll","nameLocation":"788:14:0","nodeType":"EventDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":26,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:0","nodeType":"VariableDeclaration","scope":32,"src":"803:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:0","nodeType":"VariableDeclaration","scope":32,"src":"826:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":30,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":32,"src":"852:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":29,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:0"},"src":"782:85:0"},{"documentation":{"id":33,"nodeType":"StructuredDocumentation","src":"873:76:0","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":40,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"owner","nameLocation":"981:5:0","nodeType":"VariableDeclaration","scope":40,"src":"973:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:0"},"returnParameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"balance","nameLocation":"1019:7:0","nodeType":"VariableDeclaration","scope":40,"src":"1011:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:0"},"scope":115,"src":"954:74:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1034:131:0","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:0","nodeType":"FunctionDefinition","parameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:0","nodeType":"VariableDeclaration","scope":48,"src":"1187:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":42,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:0"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"owner","nameLocation":"1235:5:0","nodeType":"VariableDeclaration","scope":48,"src":"1227:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:0"},"scope":115,"src":"1170:72:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1248:556:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":60,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:0","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"from","nameLocation":"1852:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1844:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"to","nameLocation":"1874:2:0","nodeType":"VariableDeclaration","scope":60,"src":"1866:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":52,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:0","nodeType":"VariableDeclaration","scope":60,"src":"1886:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"data","nameLocation":"1926:4:0","nodeType":"VariableDeclaration","scope":60,"src":"1911:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":56,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1945:0:0"},"scope":115,"src":"1809:137:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"1952:687:0","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:0","nodeType":"FunctionDefinition","parameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"from","nameLocation":"2687:4:0","nodeType":"VariableDeclaration","scope":70,"src":"2679:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"to","nameLocation":"2709:2:0","nodeType":"VariableDeclaration","scope":70,"src":"2701:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":67,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:0","nodeType":"VariableDeclaration","scope":70,"src":"2721:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:0"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"2751:0:0"},"scope":115,"src":"2644:108:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"2758:732:0","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:0","nodeType":"FunctionDefinition","parameters":{"id":78,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"from","nameLocation":"3534:4:0","nodeType":"VariableDeclaration","scope":80,"src":"3526:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":72,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"to","nameLocation":"3556:2:0","nodeType":"VariableDeclaration","scope":80,"src":"3548:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:0","nodeType":"VariableDeclaration","scope":80,"src":"3568:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:0"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[],"src":"3598:0:0"},"scope":115,"src":"3495:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3605:452:0","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"to","nameLocation":"4087:2:0","nodeType":"VariableDeclaration","scope":88,"src":"4079:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:0","nodeType":"VariableDeclaration","scope":88,"src":"4091:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"4116:0:0"},"scope":115,"src":"4062:55:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":89,"nodeType":"StructuredDocumentation","src":"4123:309:0","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":96,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:0","nodeType":"FunctionDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":91,"mutability":"mutable","name":"operator","nameLocation":"4472:8:0","nodeType":"VariableDeclaration","scope":96,"src":"4464:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:0","nodeType":"VariableDeclaration","scope":96,"src":"4482:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":92,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:0"},"returnParameters":{"id":95,"nodeType":"ParameterList","parameters":[],"src":"4506:0:0"},"scope":115,"src":"4437:70:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":97,"nodeType":"StructuredDocumentation","src":"4513:139:0","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":104,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":99,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:0","nodeType":"VariableDeclaration","scope":104,"src":"4678:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":98,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:0"},"returnParameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"operator","nameLocation":"4726:8:0","nodeType":"VariableDeclaration","scope":104,"src":"4718:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:0"},"scope":115,"src":"4657:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":105,"nodeType":"StructuredDocumentation","src":"4742:138:0","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:0","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"4919:5:0","nodeType":"VariableDeclaration","scope":114,"src":"4911:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"operator","nameLocation":"4934:8:0","nodeType":"VariableDeclaration","scope":114,"src":"4926:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":114,"src":"4967:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":111,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:0"},"scope":115,"src":"4885:88:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":116,"src":"250:4725:0","usedErrors":[],"usedEvents":[14,23,32]}],"src":"108:4868:0"},"id":0},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[158],"IERC721":[115],"IERC721Enumerable":[146]},"id":147,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":117,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"129:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":118,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":147,"sourceUnit":116,"src":"154:24:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":120,"name":"IERC721","nameLocations":["348:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":115,"src":"348:7:1"},"id":121,"nodeType":"InheritanceSpecifier","src":"348:7:1"}],"canonicalName":"IERC721Enumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"180:136:1","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":146,"linearizedBaseContracts":[146,115,158],"name":"IERC721Enumerable","nameLocation":"327:17:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"362:82:1","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":127,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"458:11:1","nodeType":"FunctionDefinition","parameters":{"id":123,"nodeType":"ParameterList","parameters":[],"src":"469:2:1"},"returnParameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":127,"src":"495:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"495:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"494:9:1"},"scope":146,"src":"449:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":128,"nodeType":"StructuredDocumentation","src":"510:171:1","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nameLocation":"695:19:1","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"owner","nameLocation":"723:5:1","nodeType":"VariableDeclaration","scope":137,"src":"715:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"715:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":132,"mutability":"mutable","name":"index","nameLocation":"738:5:1","nodeType":"VariableDeclaration","scope":137,"src":"730:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":131,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"714:30:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":137,"src":"768:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":134,"name":"uint256","nodeType":"ElementaryTypeName","src":"768:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"767:9:1"},"scope":146,"src":"686:91:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"783:164:1","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nameLocation":"961:12:1","nodeType":"FunctionDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"index","nameLocation":"982:5:1","nodeType":"VariableDeclaration","scope":145,"src":"974:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":139,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:15:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":143,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":145,"src":"1012:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":142,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1011:9:1"},"scope":146,"src":"952:69:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":147,"src":"317:706:1","usedErrors":[],"usedEvents":[14,23,32]}],"src":"129:895:1"},"id":1},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[158]},"id":159,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":148,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"125:279:2","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":158,"linearizedBaseContracts":[158],"name":"IERC165","nameLocation":"415:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"429:340:2","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":157,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:2","nodeType":"FunctionDefinition","parameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:2","nodeType":"VariableDeclaration","scope":157,"src":"801:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":151,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:2"},"returnParameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":157,"src":"844:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":154,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:2"},"scope":158,"src":"774:76:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":159,"src":"405:447:2","usedErrors":[],"usedEvents":[]}],"src":"100:753:2"},"id":2},"contracts/CounterPrimeNumberTokenId.sol":{"ast":{"absolutePath":"contracts/CounterPrimeNumberTokenId.sol","exportedSymbols":{"CounterPrimeNumberTokenId":[270],"IERC721Enumerable":[146]},"id":271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":160,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol","id":162,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":271,"sourceUnit":147,"src":"58:104:3","symbolAliases":[{"foreign":{"id":161,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"66:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CounterPrimeNumberTokenId","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":270,"linearizedBaseContracts":[270],"name":"CounterPrimeNumberTokenId","nameLocation":"173:25:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":214,"nodeType":"Block","src":"318:361:3","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"balance","nameLocation":"336:7:3","nodeType":"VariableDeclaration","scope":214,"src":"328:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"328:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":179,"initialValue":{"arguments":[{"id":177,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"386:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":174,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"364:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":173,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"346:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$146_$","typeString":"type(contract IERC721Enumerable)"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"346:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Enumerable_$146","typeString":"contract IERC721Enumerable"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"376:9:3","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":40,"src":"346:39:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"346:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"328:69:3"},{"expression":{"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":180,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"407:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"417:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"407:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":183,"nodeType":"ExpressionStatement","src":"407:11:3"},{"body":{"id":212,"nodeType":"Block","src":"479:194:3","statements":[{"assignments":[195],"declarations":[{"constant":false,"id":195,"mutability":"mutable","name":"tokenId","nameLocation":"501:7:3","nodeType":"VariableDeclaration","scope":212,"src":"493:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":194,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":200,"name":"tokenOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"561:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":201,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"573:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":197,"name":"nftAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":166,"src":"529:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":196,"name":"IERC721Enumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"511:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Enumerable_$146_$","typeString":"type(contract IERC721Enumerable)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"511:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Enumerable_$146","typeString":"contract IERC721Enumerable"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"541:19:3","memberName":"tokenOfOwnerByIndex","nodeType":"MemberAccess","referencedDeclaration":137,"src":"511:49:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"511:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"493:86:3"},{"condition":{"arguments":[{"id":205,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"611:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":204,"name":"isPrimeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":269,"src":"597:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"597:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":211,"nodeType":"IfStatement","src":"593:70:3","trueBody":{"id":210,"nodeType":"Block","src":"621:42:3","statements":[{"expression":{"id":208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"639:9:3","subExpression":{"id":207,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"639:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":209,"nodeType":"ExpressionStatement","src":"639:9:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":188,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"453:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":189,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"461:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"453:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":213,"initializationExpression":{"assignments":[185],"declarations":[{"constant":false,"id":185,"mutability":"mutable","name":"index","nameLocation":"442:5:3","nodeType":"VariableDeclaration","scope":213,"src":"434:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":187,"initialValue":{"hexValue":"30","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"450:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"434:17:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"470:7:3","subExpression":{"id":191,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"470:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":193,"nodeType":"ExpressionStatement","src":"470:7:3"},"nodeType":"ForStatement","src":"429:244:3"}]},"functionSelector":"ab3bbe92","id":215,"implemented":true,"kind":"function","modifiers":[],"name":"countPrimeNumberTokenId","nameLocation":"214:23:3","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"tokenOwner","nameLocation":"246:10:3","nodeType":"VariableDeclaration","scope":215,"src":"238:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":163,"name":"address","nodeType":"ElementaryTypeName","src":"238:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":166,"mutability":"mutable","name":"nftAddress","nameLocation":"266:10:3","nodeType":"VariableDeclaration","scope":215,"src":"258:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":165,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"237:40:3"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"counter","nameLocation":"309:7:3","nodeType":"VariableDeclaration","scope":215,"src":"301:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":168,"name":"uint256","nodeType":"ElementaryTypeName","src":"301:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"300:17:3"},"scope":270,"src":"205:474:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":268,"nodeType":"Block","src":"753:296:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":222,"name":"integer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"32","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"777:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"767:11:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":227,"nodeType":"IfStatement","src":"763:29:3","trueBody":{"expression":{"hexValue":"66616c7365","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"787:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":221,"id":226,"nodeType":"Return","src":"780:12:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":228,"name":"integer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"806:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"817:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"806:12:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":233,"nodeType":"IfStatement","src":"802:29:3","trueBody":{"expression":{"hexValue":"74727565","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":232,"nodeType":"Return","src":"820:11:3"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":234,"name":"integer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"845:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"855:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"845:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"845:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"IfStatement","src":"841:34:3","trueBody":{"expression":{"hexValue":"66616c7365","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"870:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":221,"id":240,"nodeType":"Return","src":"863:12:3"}},{"body":{"id":264,"nodeType":"Block","src":"931:91:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":255,"name":"integer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"949:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"959:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"949:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"949:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":263,"nodeType":"IfStatement","src":"945:67:3","trueBody":{"id":262,"nodeType":"Block","src":"967:45:3","statements":[{"expression":{"hexValue":"66616c7365","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"992:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":221,"id":261,"nodeType":"Return","src":"985:12:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":246,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"905:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"909:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"905:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":249,"name":"integer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":217,"src":"914:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"905:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":265,"initializationExpression":{"assignments":[243],"declarations":[{"constant":false,"id":243,"mutability":"mutable","name":"i","nameLocation":"898:1:3","nodeType":"VariableDeclaration","scope":265,"src":"890:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"890:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":245,"initialValue":{"hexValue":"33","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"902:1:3","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"VariableDeclarationStatement","src":"890:13:3"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":243,"src":"923:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"923:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":254,"nodeType":"ExpressionStatement","src":"923:6:3"},"nodeType":"ForStatement","src":"885:137:3"},{"expression":{"hexValue":"74727565","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1038:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":221,"id":267,"nodeType":"Return","src":"1031:11:3"}]},"id":269,"implemented":true,"kind":"function","modifiers":[],"name":"isPrimeNumber","nameLocation":"693:13:3","nodeType":"FunctionDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"integer","nameLocation":"715:7:3","nodeType":"VariableDeclaration","scope":269,"src":"707:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"707:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"706:17:3"},"returnParameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":269,"src":"747:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":219,"name":"bool","nodeType":"ElementaryTypeName","src":"747:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"746:6:3"},"scope":270,"src":"684:365:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":271,"src":"164:887:3","usedErrors":[],"usedEvents":[]}],"src":"32:1020:3"},"id":3}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/CounterPrimeNumberTokenId.sol":{"CounterPrimeNumberTokenId":{"abi":[{"inputs":[{"internalType":"address","name":"tokenOwner","type":"address"},{"internalType":"address","name":"nftAddress","type":"address"}],"name":"countPrimeNumberTokenId","outputs":[{"internalType":"uint256","name":"counter","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b5061053e8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ab3bbe9214610030575b600080fd5b61004a6004803603810190610045919061029b565b610060565b60405161005791906102f4565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161009c919061031e565b602060405180830381865afa1580156100b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dd9190610365565b90506000915060005b818110156101995760008473ffffffffffffffffffffffffffffffffffffffff16632f745c5987846040518363ffffffff1660e01b815260040161012b929190610392565b602060405180830381865afa158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c9190610365565b9050610177816101a1565b1561018b578380610187906103ea565b9450505b5080806001019150506100e6565b505092915050565b600060028210156101b55760009050610233565b600282036101c65760019050610233565b60006002836101d59190610461565b036101e35760009050610233565b6000600390505b8281826101f79190610492565b1161022d576000818461020a9190610461565b03610219576000915050610233565b60028161022691906104d4565b90506101ea565b50600190505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102688261023d565b9050919050565b6102788161025d565b811461028357600080fd5b50565b6000813590506102958161026f565b92915050565b600080604083850312156102b2576102b1610238565b5b60006102c085828601610286565b92505060206102d185828601610286565b9150509250929050565b6000819050919050565b6102ee816102db565b82525050565b600060208201905061030960008301846102e5565b92915050565b6103188161025d565b82525050565b6000602082019050610333600083018461030f565b92915050565b610342816102db565b811461034d57600080fd5b50565b60008151905061035f81610339565b92915050565b60006020828403121561037b5761037a610238565b5b600061038984828501610350565b91505092915050565b60006040820190506103a7600083018561030f565b6103b460208301846102e5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103f5826102db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610427576104266103bb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061046c826102db565b9150610477836102db565b92508261048757610486610432565b5b828206905092915050565b600061049d826102db565b91506104a8836102db565b92508282026104b6816102db565b915082820484148315176104cd576104cc6103bb565b5b5092915050565b60006104df826102db565b91506104ea836102db565b9250828201905080821115610502576105016103bb565b5b9291505056fea2646970667358221220cfcb39e79685988957ccfb40d608a208cd2c6729ceff4225fe5a1f79c6781e2464736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x53E DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB3BBE92 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B SWAP3 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH2 0x177 DUP2 PUSH2 0x1A1 JUMP JUMPDEST ISZERO PUSH2 0x18B JUMPI DUP4 DUP1 PUSH2 0x187 SWAP1 PUSH2 0x3EA JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE6 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1C6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x461 JUMP JUMPDEST SUB PUSH2 0x1E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP JUMPDEST DUP3 DUP2 DUP3 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST GT PUSH2 0x22D JUMPI PUSH1 0x0 DUP2 DUP5 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x461 JUMP JUMPDEST SUB PUSH2 0x219 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP3 PUSH2 0x23D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x295 DUP2 PUSH2 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x238 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x333 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x342 DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP2 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35F DUP2 PUSH2 0x339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x238 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP5 DUP3 DUP6 ADD PUSH2 0x350 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46C DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x432 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4A8 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B6 DUP2 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4EA DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x501 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xCB CODECOPY 0xE7 SWAP7 DUP6 SWAP9 DUP10 JUMPI 0xCC 0xFB BLOCKHASH 0xD6 ADDMOD LOG2 ADDMOD 0xCD 0x2C PUSH8 0x29CEFF4225FE5A1F PUSH26 0xC6781E2464736F6C634300081B00330000000000000000000000 ","sourceMap":"164:887:3:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@countPrimeNumberTokenId_215":{"entryPoint":96,"id":215,"parameterSlots":2,"returnSlots":1},"@isPrimeNumber_269":{"entryPoint":417,"id":269,"parameterSlots":1,"returnSlots":1},"abi_decode_t_address":{"entryPoint":646,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":848,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":667,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":741,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":798,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":914,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":756,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1236,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1170,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":573,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":731,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1002,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":1121,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":955,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":1074,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":568,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":623,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":825,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4483:4","nodeType":"YulBlock","src":"0:4483:4","statements":[{"body":{"nativeSrc":"47:35:4","nodeType":"YulBlock","src":"47:35:4","statements":[{"nativeSrc":"57:19:4","nodeType":"YulAssignment","src":"57:19:4","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:4","nodeType":"YulLiteral","src":"73:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:4","nodeType":"YulIdentifier","src":"67:5:4"},"nativeSrc":"67:9:4","nodeType":"YulFunctionCall","src":"67:9:4"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:4","nodeType":"YulIdentifier","src":"57:6:4"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:4","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:4","nodeType":"YulTypedName","src":"40:6:4","type":""}],"src":"7:75:4"},{"body":{"nativeSrc":"177:28:4","nodeType":"YulBlock","src":"177:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:4","nodeType":"YulLiteral","src":"194:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:4","nodeType":"YulLiteral","src":"197:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:4","nodeType":"YulIdentifier","src":"187:6:4"},"nativeSrc":"187:12:4","nodeType":"YulFunctionCall","src":"187:12:4"},"nativeSrc":"187:12:4","nodeType":"YulExpressionStatement","src":"187:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:4","nodeType":"YulFunctionDefinition","src":"88:117:4"},{"body":{"nativeSrc":"300:28:4","nodeType":"YulBlock","src":"300:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:4","nodeType":"YulLiteral","src":"317:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:4","nodeType":"YulLiteral","src":"320:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:4","nodeType":"YulIdentifier","src":"310:6:4"},"nativeSrc":"310:12:4","nodeType":"YulFunctionCall","src":"310:12:4"},"nativeSrc":"310:12:4","nodeType":"YulExpressionStatement","src":"310:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:4","nodeType":"YulFunctionDefinition","src":"211:117:4"},{"body":{"nativeSrc":"379:81:4","nodeType":"YulBlock","src":"379:81:4","statements":[{"nativeSrc":"389:65:4","nodeType":"YulAssignment","src":"389:65:4","value":{"arguments":[{"name":"value","nativeSrc":"404:5:4","nodeType":"YulIdentifier","src":"404:5:4"},{"kind":"number","nativeSrc":"411:42:4","nodeType":"YulLiteral","src":"411:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:4","nodeType":"YulIdentifier","src":"400:3:4"},"nativeSrc":"400:54:4","nodeType":"YulFunctionCall","src":"400:54:4"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:4","nodeType":"YulIdentifier","src":"389:7:4"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:4","nodeType":"YulTypedName","src":"361:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:4","nodeType":"YulTypedName","src":"371:7:4","type":""}],"src":"334:126:4"},{"body":{"nativeSrc":"511:51:4","nodeType":"YulBlock","src":"511:51:4","statements":[{"nativeSrc":"521:35:4","nodeType":"YulAssignment","src":"521:35:4","value":{"arguments":[{"name":"value","nativeSrc":"550:5:4","nodeType":"YulIdentifier","src":"550:5:4"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:4","nodeType":"YulIdentifier","src":"532:17:4"},"nativeSrc":"532:24:4","nodeType":"YulFunctionCall","src":"532:24:4"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:4","nodeType":"YulIdentifier","src":"521:7:4"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:4","nodeType":"YulTypedName","src":"493:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:4","nodeType":"YulTypedName","src":"503:7:4","type":""}],"src":"466:96:4"},{"body":{"nativeSrc":"611:79:4","nodeType":"YulBlock","src":"611:79:4","statements":[{"body":{"nativeSrc":"668:16:4","nodeType":"YulBlock","src":"668:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:4","nodeType":"YulLiteral","src":"677:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:4","nodeType":"YulLiteral","src":"680:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:4","nodeType":"YulIdentifier","src":"670:6:4"},"nativeSrc":"670:12:4","nodeType":"YulFunctionCall","src":"670:12:4"},"nativeSrc":"670:12:4","nodeType":"YulExpressionStatement","src":"670:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:4","nodeType":"YulIdentifier","src":"634:5:4"},{"arguments":[{"name":"value","nativeSrc":"659:5:4","nodeType":"YulIdentifier","src":"659:5:4"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:4","nodeType":"YulIdentifier","src":"641:17:4"},"nativeSrc":"641:24:4","nodeType":"YulFunctionCall","src":"641:24:4"}],"functionName":{"name":"eq","nativeSrc":"631:2:4","nodeType":"YulIdentifier","src":"631:2:4"},"nativeSrc":"631:35:4","nodeType":"YulFunctionCall","src":"631:35:4"}],"functionName":{"name":"iszero","nativeSrc":"624:6:4","nodeType":"YulIdentifier","src":"624:6:4"},"nativeSrc":"624:43:4","nodeType":"YulFunctionCall","src":"624:43:4"},"nativeSrc":"621:63:4","nodeType":"YulIf","src":"621:63:4"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:4","nodeType":"YulTypedName","src":"604:5:4","type":""}],"src":"568:122:4"},{"body":{"nativeSrc":"748:87:4","nodeType":"YulBlock","src":"748:87:4","statements":[{"nativeSrc":"758:29:4","nodeType":"YulAssignment","src":"758:29:4","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:4","nodeType":"YulIdentifier","src":"780:6:4"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:4","nodeType":"YulIdentifier","src":"767:12:4"},"nativeSrc":"767:20:4","nodeType":"YulFunctionCall","src":"767:20:4"},"variableNames":[{"name":"value","nativeSrc":"758:5:4","nodeType":"YulIdentifier","src":"758:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:4","nodeType":"YulIdentifier","src":"823:5:4"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:4","nodeType":"YulIdentifier","src":"796:26:4"},"nativeSrc":"796:33:4","nodeType":"YulFunctionCall","src":"796:33:4"},"nativeSrc":"796:33:4","nodeType":"YulExpressionStatement","src":"796:33:4"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:4","nodeType":"YulTypedName","src":"726:6:4","type":""},{"name":"end","nativeSrc":"734:3:4","nodeType":"YulTypedName","src":"734:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:4","nodeType":"YulTypedName","src":"742:5:4","type":""}],"src":"696:139:4"},{"body":{"nativeSrc":"924:391:4","nodeType":"YulBlock","src":"924:391:4","statements":[{"body":{"nativeSrc":"970:83:4","nodeType":"YulBlock","src":"970:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"972:77:4","nodeType":"YulIdentifier","src":"972:77:4"},"nativeSrc":"972:79:4","nodeType":"YulFunctionCall","src":"972:79:4"},"nativeSrc":"972:79:4","nodeType":"YulExpressionStatement","src":"972:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"945:7:4","nodeType":"YulIdentifier","src":"945:7:4"},{"name":"headStart","nativeSrc":"954:9:4","nodeType":"YulIdentifier","src":"954:9:4"}],"functionName":{"name":"sub","nativeSrc":"941:3:4","nodeType":"YulIdentifier","src":"941:3:4"},"nativeSrc":"941:23:4","nodeType":"YulFunctionCall","src":"941:23:4"},{"kind":"number","nativeSrc":"966:2:4","nodeType":"YulLiteral","src":"966:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"937:3:4","nodeType":"YulIdentifier","src":"937:3:4"},"nativeSrc":"937:32:4","nodeType":"YulFunctionCall","src":"937:32:4"},"nativeSrc":"934:119:4","nodeType":"YulIf","src":"934:119:4"},{"nativeSrc":"1063:117:4","nodeType":"YulBlock","src":"1063:117:4","statements":[{"nativeSrc":"1078:15:4","nodeType":"YulVariableDeclaration","src":"1078:15:4","value":{"kind":"number","nativeSrc":"1092:1:4","nodeType":"YulLiteral","src":"1092:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1082:6:4","nodeType":"YulTypedName","src":"1082:6:4","type":""}]},{"nativeSrc":"1107:63:4","nodeType":"YulAssignment","src":"1107:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1142:9:4","nodeType":"YulIdentifier","src":"1142:9:4"},{"name":"offset","nativeSrc":"1153:6:4","nodeType":"YulIdentifier","src":"1153:6:4"}],"functionName":{"name":"add","nativeSrc":"1138:3:4","nodeType":"YulIdentifier","src":"1138:3:4"},"nativeSrc":"1138:22:4","nodeType":"YulFunctionCall","src":"1138:22:4"},{"name":"dataEnd","nativeSrc":"1162:7:4","nodeType":"YulIdentifier","src":"1162:7:4"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1117:20:4","nodeType":"YulIdentifier","src":"1117:20:4"},"nativeSrc":"1117:53:4","nodeType":"YulFunctionCall","src":"1117:53:4"},"variableNames":[{"name":"value0","nativeSrc":"1107:6:4","nodeType":"YulIdentifier","src":"1107:6:4"}]}]},{"nativeSrc":"1190:118:4","nodeType":"YulBlock","src":"1190:118:4","statements":[{"nativeSrc":"1205:16:4","nodeType":"YulVariableDeclaration","src":"1205:16:4","value":{"kind":"number","nativeSrc":"1219:2:4","nodeType":"YulLiteral","src":"1219:2:4","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1209:6:4","nodeType":"YulTypedName","src":"1209:6:4","type":""}]},{"nativeSrc":"1235:63:4","nodeType":"YulAssignment","src":"1235:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1270:9:4","nodeType":"YulIdentifier","src":"1270:9:4"},{"name":"offset","nativeSrc":"1281:6:4","nodeType":"YulIdentifier","src":"1281:6:4"}],"functionName":{"name":"add","nativeSrc":"1266:3:4","nodeType":"YulIdentifier","src":"1266:3:4"},"nativeSrc":"1266:22:4","nodeType":"YulFunctionCall","src":"1266:22:4"},{"name":"dataEnd","nativeSrc":"1290:7:4","nodeType":"YulIdentifier","src":"1290:7:4"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1245:20:4","nodeType":"YulIdentifier","src":"1245:20:4"},"nativeSrc":"1245:53:4","nodeType":"YulFunctionCall","src":"1245:53:4"},"variableNames":[{"name":"value1","nativeSrc":"1235:6:4","nodeType":"YulIdentifier","src":"1235:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"841:474:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"886:9:4","nodeType":"YulTypedName","src":"886:9:4","type":""},{"name":"dataEnd","nativeSrc":"897:7:4","nodeType":"YulTypedName","src":"897:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"909:6:4","nodeType":"YulTypedName","src":"909:6:4","type":""},{"name":"value1","nativeSrc":"917:6:4","nodeType":"YulTypedName","src":"917:6:4","type":""}],"src":"841:474:4"},{"body":{"nativeSrc":"1366:32:4","nodeType":"YulBlock","src":"1366:32:4","statements":[{"nativeSrc":"1376:16:4","nodeType":"YulAssignment","src":"1376:16:4","value":{"name":"value","nativeSrc":"1387:5:4","nodeType":"YulIdentifier","src":"1387:5:4"},"variableNames":[{"name":"cleaned","nativeSrc":"1376:7:4","nodeType":"YulIdentifier","src":"1376:7:4"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1321:77:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1348:5:4","nodeType":"YulTypedName","src":"1348:5:4","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1358:7:4","nodeType":"YulTypedName","src":"1358:7:4","type":""}],"src":"1321:77:4"},{"body":{"nativeSrc":"1469:53:4","nodeType":"YulBlock","src":"1469:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1486:3:4","nodeType":"YulIdentifier","src":"1486:3:4"},{"arguments":[{"name":"value","nativeSrc":"1509:5:4","nodeType":"YulIdentifier","src":"1509:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1491:17:4","nodeType":"YulIdentifier","src":"1491:17:4"},"nativeSrc":"1491:24:4","nodeType":"YulFunctionCall","src":"1491:24:4"}],"functionName":{"name":"mstore","nativeSrc":"1479:6:4","nodeType":"YulIdentifier","src":"1479:6:4"},"nativeSrc":"1479:37:4","nodeType":"YulFunctionCall","src":"1479:37:4"},"nativeSrc":"1479:37:4","nodeType":"YulExpressionStatement","src":"1479:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1404:118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1457:5:4","nodeType":"YulTypedName","src":"1457:5:4","type":""},{"name":"pos","nativeSrc":"1464:3:4","nodeType":"YulTypedName","src":"1464:3:4","type":""}],"src":"1404:118:4"},{"body":{"nativeSrc":"1626:124:4","nodeType":"YulBlock","src":"1626:124:4","statements":[{"nativeSrc":"1636:26:4","nodeType":"YulAssignment","src":"1636:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"1648:9:4","nodeType":"YulIdentifier","src":"1648:9:4"},{"kind":"number","nativeSrc":"1659:2:4","nodeType":"YulLiteral","src":"1659:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1644:3:4","nodeType":"YulIdentifier","src":"1644:3:4"},"nativeSrc":"1644:18:4","nodeType":"YulFunctionCall","src":"1644:18:4"},"variableNames":[{"name":"tail","nativeSrc":"1636:4:4","nodeType":"YulIdentifier","src":"1636:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1716:6:4","nodeType":"YulIdentifier","src":"1716:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"1729:9:4","nodeType":"YulIdentifier","src":"1729:9:4"},{"kind":"number","nativeSrc":"1740:1:4","nodeType":"YulLiteral","src":"1740:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1725:3:4","nodeType":"YulIdentifier","src":"1725:3:4"},"nativeSrc":"1725:17:4","nodeType":"YulFunctionCall","src":"1725:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"1672:43:4","nodeType":"YulIdentifier","src":"1672:43:4"},"nativeSrc":"1672:71:4","nodeType":"YulFunctionCall","src":"1672:71:4"},"nativeSrc":"1672:71:4","nodeType":"YulExpressionStatement","src":"1672:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"1528:222:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1598:9:4","nodeType":"YulTypedName","src":"1598:9:4","type":""},{"name":"value0","nativeSrc":"1610:6:4","nodeType":"YulTypedName","src":"1610:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1621:4:4","nodeType":"YulTypedName","src":"1621:4:4","type":""}],"src":"1528:222:4"},{"body":{"nativeSrc":"1821:53:4","nodeType":"YulBlock","src":"1821:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1838:3:4","nodeType":"YulIdentifier","src":"1838:3:4"},{"arguments":[{"name":"value","nativeSrc":"1861:5:4","nodeType":"YulIdentifier","src":"1861:5:4"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"1843:17:4","nodeType":"YulIdentifier","src":"1843:17:4"},"nativeSrc":"1843:24:4","nodeType":"YulFunctionCall","src":"1843:24:4"}],"functionName":{"name":"mstore","nativeSrc":"1831:6:4","nodeType":"YulIdentifier","src":"1831:6:4"},"nativeSrc":"1831:37:4","nodeType":"YulFunctionCall","src":"1831:37:4"},"nativeSrc":"1831:37:4","nodeType":"YulExpressionStatement","src":"1831:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"1756:118:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1809:5:4","nodeType":"YulTypedName","src":"1809:5:4","type":""},{"name":"pos","nativeSrc":"1816:3:4","nodeType":"YulTypedName","src":"1816:3:4","type":""}],"src":"1756:118:4"},{"body":{"nativeSrc":"1978:124:4","nodeType":"YulBlock","src":"1978:124:4","statements":[{"nativeSrc":"1988:26:4","nodeType":"YulAssignment","src":"1988:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"2000:9:4","nodeType":"YulIdentifier","src":"2000:9:4"},{"kind":"number","nativeSrc":"2011:2:4","nodeType":"YulLiteral","src":"2011:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1996:3:4","nodeType":"YulIdentifier","src":"1996:3:4"},"nativeSrc":"1996:18:4","nodeType":"YulFunctionCall","src":"1996:18:4"},"variableNames":[{"name":"tail","nativeSrc":"1988:4:4","nodeType":"YulIdentifier","src":"1988:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2068:6:4","nodeType":"YulIdentifier","src":"2068:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"2081:9:4","nodeType":"YulIdentifier","src":"2081:9:4"},{"kind":"number","nativeSrc":"2092:1:4","nodeType":"YulLiteral","src":"2092:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2077:3:4","nodeType":"YulIdentifier","src":"2077:3:4"},"nativeSrc":"2077:17:4","nodeType":"YulFunctionCall","src":"2077:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2024:43:4","nodeType":"YulIdentifier","src":"2024:43:4"},"nativeSrc":"2024:71:4","nodeType":"YulFunctionCall","src":"2024:71:4"},"nativeSrc":"2024:71:4","nodeType":"YulExpressionStatement","src":"2024:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"1880:222:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1950:9:4","nodeType":"YulTypedName","src":"1950:9:4","type":""},{"name":"value0","nativeSrc":"1962:6:4","nodeType":"YulTypedName","src":"1962:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1973:4:4","nodeType":"YulTypedName","src":"1973:4:4","type":""}],"src":"1880:222:4"},{"body":{"nativeSrc":"2151:79:4","nodeType":"YulBlock","src":"2151:79:4","statements":[{"body":{"nativeSrc":"2208:16:4","nodeType":"YulBlock","src":"2208:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2217:1:4","nodeType":"YulLiteral","src":"2217:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"2220:1:4","nodeType":"YulLiteral","src":"2220:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2210:6:4","nodeType":"YulIdentifier","src":"2210:6:4"},"nativeSrc":"2210:12:4","nodeType":"YulFunctionCall","src":"2210:12:4"},"nativeSrc":"2210:12:4","nodeType":"YulExpressionStatement","src":"2210:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2174:5:4","nodeType":"YulIdentifier","src":"2174:5:4"},{"arguments":[{"name":"value","nativeSrc":"2199:5:4","nodeType":"YulIdentifier","src":"2199:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2181:17:4","nodeType":"YulIdentifier","src":"2181:17:4"},"nativeSrc":"2181:24:4","nodeType":"YulFunctionCall","src":"2181:24:4"}],"functionName":{"name":"eq","nativeSrc":"2171:2:4","nodeType":"YulIdentifier","src":"2171:2:4"},"nativeSrc":"2171:35:4","nodeType":"YulFunctionCall","src":"2171:35:4"}],"functionName":{"name":"iszero","nativeSrc":"2164:6:4","nodeType":"YulIdentifier","src":"2164:6:4"},"nativeSrc":"2164:43:4","nodeType":"YulFunctionCall","src":"2164:43:4"},"nativeSrc":"2161:63:4","nodeType":"YulIf","src":"2161:63:4"}]},"name":"validator_revert_t_uint256","nativeSrc":"2108:122:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2144:5:4","nodeType":"YulTypedName","src":"2144:5:4","type":""}],"src":"2108:122:4"},{"body":{"nativeSrc":"2299:80:4","nodeType":"YulBlock","src":"2299:80:4","statements":[{"nativeSrc":"2309:22:4","nodeType":"YulAssignment","src":"2309:22:4","value":{"arguments":[{"name":"offset","nativeSrc":"2324:6:4","nodeType":"YulIdentifier","src":"2324:6:4"}],"functionName":{"name":"mload","nativeSrc":"2318:5:4","nodeType":"YulIdentifier","src":"2318:5:4"},"nativeSrc":"2318:13:4","nodeType":"YulFunctionCall","src":"2318:13:4"},"variableNames":[{"name":"value","nativeSrc":"2309:5:4","nodeType":"YulIdentifier","src":"2309:5:4"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2367:5:4","nodeType":"YulIdentifier","src":"2367:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2340:26:4","nodeType":"YulIdentifier","src":"2340:26:4"},"nativeSrc":"2340:33:4","nodeType":"YulFunctionCall","src":"2340:33:4"},"nativeSrc":"2340:33:4","nodeType":"YulExpressionStatement","src":"2340:33:4"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2236:143:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"2277:6:4","nodeType":"YulTypedName","src":"2277:6:4","type":""},{"name":"end","nativeSrc":"2285:3:4","nodeType":"YulTypedName","src":"2285:3:4","type":""}],"returnVariables":[{"name":"value","nativeSrc":"2293:5:4","nodeType":"YulTypedName","src":"2293:5:4","type":""}],"src":"2236:143:4"},{"body":{"nativeSrc":"2462:274:4","nodeType":"YulBlock","src":"2462:274:4","statements":[{"body":{"nativeSrc":"2508:83:4","nodeType":"YulBlock","src":"2508:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2510:77:4","nodeType":"YulIdentifier","src":"2510:77:4"},"nativeSrc":"2510:79:4","nodeType":"YulFunctionCall","src":"2510:79:4"},"nativeSrc":"2510:79:4","nodeType":"YulExpressionStatement","src":"2510:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2483:7:4","nodeType":"YulIdentifier","src":"2483:7:4"},{"name":"headStart","nativeSrc":"2492:9:4","nodeType":"YulIdentifier","src":"2492:9:4"}],"functionName":{"name":"sub","nativeSrc":"2479:3:4","nodeType":"YulIdentifier","src":"2479:3:4"},"nativeSrc":"2479:23:4","nodeType":"YulFunctionCall","src":"2479:23:4"},{"kind":"number","nativeSrc":"2504:2:4","nodeType":"YulLiteral","src":"2504:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2475:3:4","nodeType":"YulIdentifier","src":"2475:3:4"},"nativeSrc":"2475:32:4","nodeType":"YulFunctionCall","src":"2475:32:4"},"nativeSrc":"2472:119:4","nodeType":"YulIf","src":"2472:119:4"},{"nativeSrc":"2601:128:4","nodeType":"YulBlock","src":"2601:128:4","statements":[{"nativeSrc":"2616:15:4","nodeType":"YulVariableDeclaration","src":"2616:15:4","value":{"kind":"number","nativeSrc":"2630:1:4","nodeType":"YulLiteral","src":"2630:1:4","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2620:6:4","nodeType":"YulTypedName","src":"2620:6:4","type":""}]},{"nativeSrc":"2645:74:4","nodeType":"YulAssignment","src":"2645:74:4","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2691:9:4","nodeType":"YulIdentifier","src":"2691:9:4"},{"name":"offset","nativeSrc":"2702:6:4","nodeType":"YulIdentifier","src":"2702:6:4"}],"functionName":{"name":"add","nativeSrc":"2687:3:4","nodeType":"YulIdentifier","src":"2687:3:4"},"nativeSrc":"2687:22:4","nodeType":"YulFunctionCall","src":"2687:22:4"},{"name":"dataEnd","nativeSrc":"2711:7:4","nodeType":"YulIdentifier","src":"2711:7:4"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2655:31:4","nodeType":"YulIdentifier","src":"2655:31:4"},"nativeSrc":"2655:64:4","nodeType":"YulFunctionCall","src":"2655:64:4"},"variableNames":[{"name":"value0","nativeSrc":"2645:6:4","nodeType":"YulIdentifier","src":"2645:6:4"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"2385:351:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2432:9:4","nodeType":"YulTypedName","src":"2432:9:4","type":""},{"name":"dataEnd","nativeSrc":"2443:7:4","nodeType":"YulTypedName","src":"2443:7:4","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2455:6:4","nodeType":"YulTypedName","src":"2455:6:4","type":""}],"src":"2385:351:4"},{"body":{"nativeSrc":"2868:206:4","nodeType":"YulBlock","src":"2868:206:4","statements":[{"nativeSrc":"2878:26:4","nodeType":"YulAssignment","src":"2878:26:4","value":{"arguments":[{"name":"headStart","nativeSrc":"2890:9:4","nodeType":"YulIdentifier","src":"2890:9:4"},{"kind":"number","nativeSrc":"2901:2:4","nodeType":"YulLiteral","src":"2901:2:4","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2886:3:4","nodeType":"YulIdentifier","src":"2886:3:4"},"nativeSrc":"2886:18:4","nodeType":"YulFunctionCall","src":"2886:18:4"},"variableNames":[{"name":"tail","nativeSrc":"2878:4:4","nodeType":"YulIdentifier","src":"2878:4:4"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2958:6:4","nodeType":"YulIdentifier","src":"2958:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"2971:9:4","nodeType":"YulIdentifier","src":"2971:9:4"},{"kind":"number","nativeSrc":"2982:1:4","nodeType":"YulLiteral","src":"2982:1:4","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2967:3:4","nodeType":"YulIdentifier","src":"2967:3:4"},"nativeSrc":"2967:17:4","nodeType":"YulFunctionCall","src":"2967:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2914:43:4","nodeType":"YulIdentifier","src":"2914:43:4"},"nativeSrc":"2914:71:4","nodeType":"YulFunctionCall","src":"2914:71:4"},"nativeSrc":"2914:71:4","nodeType":"YulExpressionStatement","src":"2914:71:4"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"3039:6:4","nodeType":"YulIdentifier","src":"3039:6:4"},{"arguments":[{"name":"headStart","nativeSrc":"3052:9:4","nodeType":"YulIdentifier","src":"3052:9:4"},{"kind":"number","nativeSrc":"3063:2:4","nodeType":"YulLiteral","src":"3063:2:4","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3048:3:4","nodeType":"YulIdentifier","src":"3048:3:4"},"nativeSrc":"3048:18:4","nodeType":"YulFunctionCall","src":"3048:18:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"2995:43:4","nodeType":"YulIdentifier","src":"2995:43:4"},"nativeSrc":"2995:72:4","nodeType":"YulFunctionCall","src":"2995:72:4"},"nativeSrc":"2995:72:4","nodeType":"YulExpressionStatement","src":"2995:72:4"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"2742:332:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2832:9:4","nodeType":"YulTypedName","src":"2832:9:4","type":""},{"name":"value1","nativeSrc":"2844:6:4","nodeType":"YulTypedName","src":"2844:6:4","type":""},{"name":"value0","nativeSrc":"2852:6:4","nodeType":"YulTypedName","src":"2852:6:4","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2863:4:4","nodeType":"YulTypedName","src":"2863:4:4","type":""}],"src":"2742:332:4"},{"body":{"nativeSrc":"3108:152:4","nodeType":"YulBlock","src":"3108:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3125:1:4","nodeType":"YulLiteral","src":"3125:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3128:77:4","nodeType":"YulLiteral","src":"3128:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3118:6:4","nodeType":"YulIdentifier","src":"3118:6:4"},"nativeSrc":"3118:88:4","nodeType":"YulFunctionCall","src":"3118:88:4"},"nativeSrc":"3118:88:4","nodeType":"YulExpressionStatement","src":"3118:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3222:1:4","nodeType":"YulLiteral","src":"3222:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"3225:4:4","nodeType":"YulLiteral","src":"3225:4:4","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"3215:6:4","nodeType":"YulIdentifier","src":"3215:6:4"},"nativeSrc":"3215:15:4","nodeType":"YulFunctionCall","src":"3215:15:4"},"nativeSrc":"3215:15:4","nodeType":"YulExpressionStatement","src":"3215:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3246:1:4","nodeType":"YulLiteral","src":"3246:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3249:4:4","nodeType":"YulLiteral","src":"3249:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3239:6:4","nodeType":"YulIdentifier","src":"3239:6:4"},"nativeSrc":"3239:15:4","nodeType":"YulFunctionCall","src":"3239:15:4"},"nativeSrc":"3239:15:4","nodeType":"YulExpressionStatement","src":"3239:15:4"}]},"name":"panic_error_0x11","nativeSrc":"3080:180:4","nodeType":"YulFunctionDefinition","src":"3080:180:4"},{"body":{"nativeSrc":"3309:190:4","nodeType":"YulBlock","src":"3309:190:4","statements":[{"nativeSrc":"3319:33:4","nodeType":"YulAssignment","src":"3319:33:4","value":{"arguments":[{"name":"value","nativeSrc":"3346:5:4","nodeType":"YulIdentifier","src":"3346:5:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3328:17:4","nodeType":"YulIdentifier","src":"3328:17:4"},"nativeSrc":"3328:24:4","nodeType":"YulFunctionCall","src":"3328:24:4"},"variableNames":[{"name":"value","nativeSrc":"3319:5:4","nodeType":"YulIdentifier","src":"3319:5:4"}]},{"body":{"nativeSrc":"3442:22:4","nodeType":"YulBlock","src":"3442:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"3444:16:4","nodeType":"YulIdentifier","src":"3444:16:4"},"nativeSrc":"3444:18:4","nodeType":"YulFunctionCall","src":"3444:18:4"},"nativeSrc":"3444:18:4","nodeType":"YulExpressionStatement","src":"3444:18:4"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"3367:5:4","nodeType":"YulIdentifier","src":"3367:5:4"},{"kind":"number","nativeSrc":"3374:66:4","nodeType":"YulLiteral","src":"3374:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"3364:2:4","nodeType":"YulIdentifier","src":"3364:2:4"},"nativeSrc":"3364:77:4","nodeType":"YulFunctionCall","src":"3364:77:4"},"nativeSrc":"3361:103:4","nodeType":"YulIf","src":"3361:103:4"},{"nativeSrc":"3473:20:4","nodeType":"YulAssignment","src":"3473:20:4","value":{"arguments":[{"name":"value","nativeSrc":"3484:5:4","nodeType":"YulIdentifier","src":"3484:5:4"},{"kind":"number","nativeSrc":"3491:1:4","nodeType":"YulLiteral","src":"3491:1:4","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"3480:3:4","nodeType":"YulIdentifier","src":"3480:3:4"},"nativeSrc":"3480:13:4","nodeType":"YulFunctionCall","src":"3480:13:4"},"variableNames":[{"name":"ret","nativeSrc":"3473:3:4","nodeType":"YulIdentifier","src":"3473:3:4"}]}]},"name":"increment_t_uint256","nativeSrc":"3266:233:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3295:5:4","nodeType":"YulTypedName","src":"3295:5:4","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"3305:3:4","nodeType":"YulTypedName","src":"3305:3:4","type":""}],"src":"3266:233:4"},{"body":{"nativeSrc":"3533:152:4","nodeType":"YulBlock","src":"3533:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3550:1:4","nodeType":"YulLiteral","src":"3550:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3553:77:4","nodeType":"YulLiteral","src":"3553:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3543:6:4","nodeType":"YulIdentifier","src":"3543:6:4"},"nativeSrc":"3543:88:4","nodeType":"YulFunctionCall","src":"3543:88:4"},"nativeSrc":"3543:88:4","nodeType":"YulExpressionStatement","src":"3543:88:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3647:1:4","nodeType":"YulLiteral","src":"3647:1:4","type":"","value":"4"},{"kind":"number","nativeSrc":"3650:4:4","nodeType":"YulLiteral","src":"3650:4:4","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"3640:6:4","nodeType":"YulIdentifier","src":"3640:6:4"},"nativeSrc":"3640:15:4","nodeType":"YulFunctionCall","src":"3640:15:4"},"nativeSrc":"3640:15:4","nodeType":"YulExpressionStatement","src":"3640:15:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3671:1:4","nodeType":"YulLiteral","src":"3671:1:4","type":"","value":"0"},{"kind":"number","nativeSrc":"3674:4:4","nodeType":"YulLiteral","src":"3674:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3664:6:4","nodeType":"YulIdentifier","src":"3664:6:4"},"nativeSrc":"3664:15:4","nodeType":"YulFunctionCall","src":"3664:15:4"},"nativeSrc":"3664:15:4","nodeType":"YulExpressionStatement","src":"3664:15:4"}]},"name":"panic_error_0x12","nativeSrc":"3505:180:4","nodeType":"YulFunctionDefinition","src":"3505:180:4"},{"body":{"nativeSrc":"3725:142:4","nodeType":"YulBlock","src":"3725:142:4","statements":[{"nativeSrc":"3735:25:4","nodeType":"YulAssignment","src":"3735:25:4","value":{"arguments":[{"name":"x","nativeSrc":"3758:1:4","nodeType":"YulIdentifier","src":"3758:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3740:17:4","nodeType":"YulIdentifier","src":"3740:17:4"},"nativeSrc":"3740:20:4","nodeType":"YulFunctionCall","src":"3740:20:4"},"variableNames":[{"name":"x","nativeSrc":"3735:1:4","nodeType":"YulIdentifier","src":"3735:1:4"}]},{"nativeSrc":"3769:25:4","nodeType":"YulAssignment","src":"3769:25:4","value":{"arguments":[{"name":"y","nativeSrc":"3792:1:4","nodeType":"YulIdentifier","src":"3792:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3774:17:4","nodeType":"YulIdentifier","src":"3774:17:4"},"nativeSrc":"3774:20:4","nodeType":"YulFunctionCall","src":"3774:20:4"},"variableNames":[{"name":"y","nativeSrc":"3769:1:4","nodeType":"YulIdentifier","src":"3769:1:4"}]},{"body":{"nativeSrc":"3816:22:4","nodeType":"YulBlock","src":"3816:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"3818:16:4","nodeType":"YulIdentifier","src":"3818:16:4"},"nativeSrc":"3818:18:4","nodeType":"YulFunctionCall","src":"3818:18:4"},"nativeSrc":"3818:18:4","nodeType":"YulExpressionStatement","src":"3818:18:4"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"3813:1:4","nodeType":"YulIdentifier","src":"3813:1:4"}],"functionName":{"name":"iszero","nativeSrc":"3806:6:4","nodeType":"YulIdentifier","src":"3806:6:4"},"nativeSrc":"3806:9:4","nodeType":"YulFunctionCall","src":"3806:9:4"},"nativeSrc":"3803:35:4","nodeType":"YulIf","src":"3803:35:4"},{"nativeSrc":"3847:14:4","nodeType":"YulAssignment","src":"3847:14:4","value":{"arguments":[{"name":"x","nativeSrc":"3856:1:4","nodeType":"YulIdentifier","src":"3856:1:4"},{"name":"y","nativeSrc":"3859:1:4","nodeType":"YulIdentifier","src":"3859:1:4"}],"functionName":{"name":"mod","nativeSrc":"3852:3:4","nodeType":"YulIdentifier","src":"3852:3:4"},"nativeSrc":"3852:9:4","nodeType":"YulFunctionCall","src":"3852:9:4"},"variableNames":[{"name":"r","nativeSrc":"3847:1:4","nodeType":"YulIdentifier","src":"3847:1:4"}]}]},"name":"mod_t_uint256","nativeSrc":"3691:176:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3714:1:4","nodeType":"YulTypedName","src":"3714:1:4","type":""},{"name":"y","nativeSrc":"3717:1:4","nodeType":"YulTypedName","src":"3717:1:4","type":""}],"returnVariables":[{"name":"r","nativeSrc":"3723:1:4","nodeType":"YulTypedName","src":"3723:1:4","type":""}],"src":"3691:176:4"},{"body":{"nativeSrc":"3921:362:4","nodeType":"YulBlock","src":"3921:362:4","statements":[{"nativeSrc":"3931:25:4","nodeType":"YulAssignment","src":"3931:25:4","value":{"arguments":[{"name":"x","nativeSrc":"3954:1:4","nodeType":"YulIdentifier","src":"3954:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3936:17:4","nodeType":"YulIdentifier","src":"3936:17:4"},"nativeSrc":"3936:20:4","nodeType":"YulFunctionCall","src":"3936:20:4"},"variableNames":[{"name":"x","nativeSrc":"3931:1:4","nodeType":"YulIdentifier","src":"3931:1:4"}]},{"nativeSrc":"3965:25:4","nodeType":"YulAssignment","src":"3965:25:4","value":{"arguments":[{"name":"y","nativeSrc":"3988:1:4","nodeType":"YulIdentifier","src":"3988:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3970:17:4","nodeType":"YulIdentifier","src":"3970:17:4"},"nativeSrc":"3970:20:4","nodeType":"YulFunctionCall","src":"3970:20:4"},"variableNames":[{"name":"y","nativeSrc":"3965:1:4","nodeType":"YulIdentifier","src":"3965:1:4"}]},{"nativeSrc":"3999:28:4","nodeType":"YulVariableDeclaration","src":"3999:28:4","value":{"arguments":[{"name":"x","nativeSrc":"4022:1:4","nodeType":"YulIdentifier","src":"4022:1:4"},{"name":"y","nativeSrc":"4025:1:4","nodeType":"YulIdentifier","src":"4025:1:4"}],"functionName":{"name":"mul","nativeSrc":"4018:3:4","nodeType":"YulIdentifier","src":"4018:3:4"},"nativeSrc":"4018:9:4","nodeType":"YulFunctionCall","src":"4018:9:4"},"variables":[{"name":"product_raw","nativeSrc":"4003:11:4","nodeType":"YulTypedName","src":"4003:11:4","type":""}]},{"nativeSrc":"4036:41:4","nodeType":"YulAssignment","src":"4036:41:4","value":{"arguments":[{"name":"product_raw","nativeSrc":"4065:11:4","nodeType":"YulIdentifier","src":"4065:11:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4047:17:4","nodeType":"YulIdentifier","src":"4047:17:4"},"nativeSrc":"4047:30:4","nodeType":"YulFunctionCall","src":"4047:30:4"},"variableNames":[{"name":"product","nativeSrc":"4036:7:4","nodeType":"YulIdentifier","src":"4036:7:4"}]},{"body":{"nativeSrc":"4254:22:4","nodeType":"YulBlock","src":"4254:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4256:16:4","nodeType":"YulIdentifier","src":"4256:16:4"},"nativeSrc":"4256:18:4","nodeType":"YulFunctionCall","src":"4256:18:4"},"nativeSrc":"4256:18:4","nodeType":"YulExpressionStatement","src":"4256:18:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"4187:1:4","nodeType":"YulIdentifier","src":"4187:1:4"}],"functionName":{"name":"iszero","nativeSrc":"4180:6:4","nodeType":"YulIdentifier","src":"4180:6:4"},"nativeSrc":"4180:9:4","nodeType":"YulFunctionCall","src":"4180:9:4"},{"arguments":[{"name":"y","nativeSrc":"4210:1:4","nodeType":"YulIdentifier","src":"4210:1:4"},{"arguments":[{"name":"product","nativeSrc":"4217:7:4","nodeType":"YulIdentifier","src":"4217:7:4"},{"name":"x","nativeSrc":"4226:1:4","nodeType":"YulIdentifier","src":"4226:1:4"}],"functionName":{"name":"div","nativeSrc":"4213:3:4","nodeType":"YulIdentifier","src":"4213:3:4"},"nativeSrc":"4213:15:4","nodeType":"YulFunctionCall","src":"4213:15:4"}],"functionName":{"name":"eq","nativeSrc":"4207:2:4","nodeType":"YulIdentifier","src":"4207:2:4"},"nativeSrc":"4207:22:4","nodeType":"YulFunctionCall","src":"4207:22:4"}],"functionName":{"name":"or","nativeSrc":"4160:2:4","nodeType":"YulIdentifier","src":"4160:2:4"},"nativeSrc":"4160:83:4","nodeType":"YulFunctionCall","src":"4160:83:4"}],"functionName":{"name":"iszero","nativeSrc":"4140:6:4","nodeType":"YulIdentifier","src":"4140:6:4"},"nativeSrc":"4140:113:4","nodeType":"YulFunctionCall","src":"4140:113:4"},"nativeSrc":"4137:139:4","nodeType":"YulIf","src":"4137:139:4"}]},"name":"checked_mul_t_uint256","nativeSrc":"3873:410:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"3904:1:4","nodeType":"YulTypedName","src":"3904:1:4","type":""},{"name":"y","nativeSrc":"3907:1:4","nodeType":"YulTypedName","src":"3907:1:4","type":""}],"returnVariables":[{"name":"product","nativeSrc":"3913:7:4","nodeType":"YulTypedName","src":"3913:7:4","type":""}],"src":"3873:410:4"},{"body":{"nativeSrc":"4333:147:4","nodeType":"YulBlock","src":"4333:147:4","statements":[{"nativeSrc":"4343:25:4","nodeType":"YulAssignment","src":"4343:25:4","value":{"arguments":[{"name":"x","nativeSrc":"4366:1:4","nodeType":"YulIdentifier","src":"4366:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4348:17:4","nodeType":"YulIdentifier","src":"4348:17:4"},"nativeSrc":"4348:20:4","nodeType":"YulFunctionCall","src":"4348:20:4"},"variableNames":[{"name":"x","nativeSrc":"4343:1:4","nodeType":"YulIdentifier","src":"4343:1:4"}]},{"nativeSrc":"4377:25:4","nodeType":"YulAssignment","src":"4377:25:4","value":{"arguments":[{"name":"y","nativeSrc":"4400:1:4","nodeType":"YulIdentifier","src":"4400:1:4"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4382:17:4","nodeType":"YulIdentifier","src":"4382:17:4"},"nativeSrc":"4382:20:4","nodeType":"YulFunctionCall","src":"4382:20:4"},"variableNames":[{"name":"y","nativeSrc":"4377:1:4","nodeType":"YulIdentifier","src":"4377:1:4"}]},{"nativeSrc":"4411:16:4","nodeType":"YulAssignment","src":"4411:16:4","value":{"arguments":[{"name":"x","nativeSrc":"4422:1:4","nodeType":"YulIdentifier","src":"4422:1:4"},{"name":"y","nativeSrc":"4425:1:4","nodeType":"YulIdentifier","src":"4425:1:4"}],"functionName":{"name":"add","nativeSrc":"4418:3:4","nodeType":"YulIdentifier","src":"4418:3:4"},"nativeSrc":"4418:9:4","nodeType":"YulFunctionCall","src":"4418:9:4"},"variableNames":[{"name":"sum","nativeSrc":"4411:3:4","nodeType":"YulIdentifier","src":"4411:3:4"}]},{"body":{"nativeSrc":"4451:22:4","nodeType":"YulBlock","src":"4451:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"4453:16:4","nodeType":"YulIdentifier","src":"4453:16:4"},"nativeSrc":"4453:18:4","nodeType":"YulFunctionCall","src":"4453:18:4"},"nativeSrc":"4453:18:4","nodeType":"YulExpressionStatement","src":"4453:18:4"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"4443:1:4","nodeType":"YulIdentifier","src":"4443:1:4"},{"name":"sum","nativeSrc":"4446:3:4","nodeType":"YulIdentifier","src":"4446:3:4"}],"functionName":{"name":"gt","nativeSrc":"4440:2:4","nodeType":"YulIdentifier","src":"4440:2:4"},"nativeSrc":"4440:10:4","nodeType":"YulFunctionCall","src":"4440:10:4"},"nativeSrc":"4437:36:4","nodeType":"YulIf","src":"4437:36:4"}]},"name":"checked_add_t_uint256","nativeSrc":"4289:191:4","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"4320:1:4","nodeType":"YulTypedName","src":"4320:1:4","type":""},{"name":"y","nativeSrc":"4323:1:4","nodeType":"YulTypedName","src":"4323:1:4","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"4329:3:4","nodeType":"YulTypedName","src":"4329:3:4","type":""}],"src":"4289:191:4"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ab3bbe9214610030575b600080fd5b61004a6004803603810190610045919061029b565b610060565b60405161005791906102f4565b60405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b815260040161009c919061031e565b602060405180830381865afa1580156100b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100dd9190610365565b90506000915060005b818110156101995760008473ffffffffffffffffffffffffffffffffffffffff16632f745c5987846040518363ffffffff1660e01b815260040161012b929190610392565b602060405180830381865afa158015610148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016c9190610365565b9050610177816101a1565b1561018b578380610187906103ea565b9450505b5080806001019150506100e6565b505092915050565b600060028210156101b55760009050610233565b600282036101c65760019050610233565b60006002836101d59190610461565b036101e35760009050610233565b6000600390505b8281826101f79190610492565b1161022d576000818461020a9190610461565b03610219576000915050610233565b60028161022691906104d4565b90506101ea565b50600190505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102688261023d565b9050919050565b6102788161025d565b811461028357600080fd5b50565b6000813590506102958161026f565b92915050565b600080604083850312156102b2576102b1610238565b5b60006102c085828601610286565b92505060206102d185828601610286565b9150509250929050565b6000819050919050565b6102ee816102db565b82525050565b600060208201905061030960008301846102e5565b92915050565b6103188161025d565b82525050565b6000602082019050610333600083018461030f565b92915050565b610342816102db565b811461034d57600080fd5b50565b60008151905061035f81610339565b92915050565b60006020828403121561037b5761037a610238565b5b600061038984828501610350565b91505092915050565b60006040820190506103a7600083018561030f565b6103b460208301846102e5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103f5826102db565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610427576104266103bb565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061046c826102db565b9150610477836102db565b92508261048757610486610432565b5b828206905092915050565b600061049d826102db565b91506104a8836102db565b92508282026104b6816102db565b915082820484148315176104cd576104cc6103bb565b5b5092915050565b60006104df826102db565b91506104ea836102db565b9250828201905080821115610502576105016103bb565b5b9291505056fea2646970667358221220cfcb39e79685988957ccfb40d608a208cd2c6729ceff4225fe5a1f79c6781e2464736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAB3BBE92 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x29B JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F745C59 DUP8 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B SWAP3 SWAP2 SWAP1 PUSH2 0x392 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x148 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH2 0x177 DUP2 PUSH2 0x1A1 JUMP JUMPDEST ISZERO PUSH2 0x18B JUMPI DUP4 DUP1 PUSH2 0x187 SWAP1 PUSH2 0x3EA JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xE6 JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 DUP3 SUB PUSH2 0x1C6 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x461 JUMP JUMPDEST SUB PUSH2 0x1E3 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP JUMPDEST DUP3 DUP2 DUP3 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST GT PUSH2 0x22D JUMPI PUSH1 0x0 DUP2 DUP5 PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x461 JUMP JUMPDEST SUB PUSH2 0x219 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x233 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x4D4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1EA JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x268 DUP3 PUSH2 0x23D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x278 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x295 DUP2 PUSH2 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B2 JUMPI PUSH2 0x2B1 PUSH2 0x238 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C0 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2D1 DUP6 DUP3 DUP7 ADD PUSH2 0x286 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2EE DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x309 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x318 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x333 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x30F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x342 DUP2 PUSH2 0x2DB JUMP JUMPDEST DUP2 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35F DUP2 PUSH2 0x339 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x238 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x389 DUP5 DUP3 DUP6 ADD PUSH2 0x350 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3A7 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x30F JUMP JUMPDEST PUSH2 0x3B4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3F5 DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x427 JUMPI PUSH2 0x426 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x46C DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x477 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x487 JUMPI PUSH2 0x486 PUSH2 0x432 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49D DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4A8 DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x4B6 DUP2 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x4CD JUMPI PUSH2 0x4CC PUSH2 0x3BB JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DF DUP3 PUSH2 0x2DB JUMP JUMPDEST SWAP2 POP PUSH2 0x4EA DUP4 PUSH2 0x2DB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x502 JUMPI PUSH2 0x501 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xCB CODECOPY 0xE7 SWAP7 DUP6 SWAP9 DUP10 JUMPI 0xCC 0xFB BLOCKHASH 0xD6 ADDMOD LOG2 ADDMOD 0xCD 0x2C PUSH8 0x29CEFF4225FE5A1F PUSH26 0xC6781E2464736F6C634300081B00330000000000000000000000 ","sourceMap":"164:887:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:474;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;301:15;328;364:10;346:39;;;386:10;346:51;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;328:69;;417:1;407:11;;434:13;429:244;461:7;453:5;:15;429:244;;;493:15;529:10;511:49;;;561:10;573:5;511:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;493:86;;597:22;611:7;597:13;:22::i;:::-;593:70;;;639:9;;;;;:::i;:::-;;;;593:70;479:194;470:7;;;;;;;429:244;;;;318:361;205:474;;;;:::o;684:365::-;747:4;777:1;767:7;:11;763:29;;;787:5;780:12;;;;763:29;817:1;806:7;:12;802:29;;827:4;820:11;;;;802:29;860:1;855;845:7;:11;;;;:::i;:::-;:16;841:34;;870:5;863:12;;;;841:34;890:9;902:1;890:13;;885:137;914:7;909:1;905;:5;;;;:::i;:::-;:16;885:137;;964:1;959;949:7;:11;;;;:::i;:::-;:16;945:67;;992:5;985:12;;;;;945:67;928:1;923:6;;;;;:::i;:::-;;;885:137;;;;1038:4;1031:11;;684:365;;;;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:77::-;1358:7;1387:5;1376:16;;1321:77;;;:::o;1404:118::-;1491:24;1509:5;1491:24;:::i;:::-;1486:3;1479:37;1404:118;;:::o;1528:222::-;1621:4;1659:2;1648:9;1644:18;1636:26;;1672:71;1740:1;1729:9;1725:17;1716:6;1672:71;:::i;:::-;1528:222;;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:222::-;1973:4;2011:2;2000:9;1996:18;1988:26;;2024:71;2092:1;2081:9;2077:17;2068:6;2024:71;:::i;:::-;1880:222;;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:143::-;2293:5;2324:6;2318:13;2309:22;;2340:33;2367:5;2340:33;:::i;:::-;2236:143;;;;:::o;2385:351::-;2455:6;2504:2;2492:9;2483:7;2479:23;2475:32;2472:119;;;2510:79;;:::i;:::-;2472:119;2630:1;2655:64;2711:7;2702:6;2691:9;2687:22;2655:64;:::i;:::-;2645:74;;2601:128;2385:351;;;;:::o;2742:332::-;2863:4;2901:2;2890:9;2886:18;2878:26;;2914:71;2982:1;2971:9;2967:17;2958:6;2914:71;:::i;:::-;2995:72;3063:2;3052:9;3048:18;3039:6;2995:72;:::i;:::-;2742:332;;;;;:::o;3080:180::-;3128:77;3125:1;3118:88;3225:4;3222:1;3215:15;3249:4;3246:1;3239:15;3266:233;3305:3;3328:24;3346:5;3328:24;:::i;:::-;3319:33;;3374:66;3367:5;3364:77;3361:103;;3444:18;;:::i;:::-;3361:103;3491:1;3484:5;3480:13;3473:20;;3266:233;;;:::o;3505:180::-;3553:77;3550:1;3543:88;3650:4;3647:1;3640:15;3674:4;3671:1;3664:15;3691:176;3723:1;3740:20;3758:1;3740:20;:::i;:::-;3735:25;;3774:20;3792:1;3774:20;:::i;:::-;3769:25;;3813:1;3803:35;;3818:18;;:::i;:::-;3803:35;3859:1;3856;3852:9;3847:14;;3691:176;;;;:::o;3873:410::-;3913:7;3936:20;3954:1;3936:20;:::i;:::-;3931:25;;3970:20;3988:1;3970:20;:::i;:::-;3965:25;;4025:1;4022;4018:9;4047:30;4065:11;4047:30;:::i;:::-;4036:41;;4226:1;4217:7;4213:15;4210:1;4207:22;4187:1;4180:9;4160:83;4137:139;;4256:18;;:::i;:::-;4137:139;3921:362;3873:410;;;;:::o;4289:191::-;4329:3;4348:20;4366:1;4348:20;:::i;:::-;4343:25;;4382:20;4400:1;4382:20;:::i;:::-;4377:25;;4425:1;4422;4418:9;4411:16;;4446:3;4443:1;4440:10;4437:36;;;4453:18;;:::i;:::-;4437:36;4289:191;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"268400","executionCost":"306","totalCost":"268706"},"external":{"countPrimeNumberTokenId(address,address)":"infinite"},"internal":{"isPrimeNumber(uint256)":"infinite"}},"methodIdentifiers":{"countPrimeNumberTokenId(address,address)":"ab3bbe92"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"}],\"name\":\"countPrimeNumberTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"counter\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CounterPrimeNumberTokenId.sol\":\"CounterPrimeNumberTokenId\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/CounterPrimeNumberTokenId.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.27;\\n\\nimport {IERC721Enumerable} from \\\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\\\";\\n\\ncontract CounterPrimeNumberTokenId {\\n    function countPrimeNumberTokenId(address tokenOwner, address nftAddress) external view returns (uint256 counter) {\\n        uint256 balance = IERC721Enumerable(nftAddress).balanceOf(tokenOwner);\\n        counter = 0;\\n\\n        for (uint256 index = 0; index < balance; index++) {\\n            uint256 tokenId = IERC721Enumerable(nftAddress).tokenOfOwnerByIndex(tokenOwner, index);\\n            if (isPrimeNumber(tokenId)) {\\n                counter++;\\n            }\\n        }\\n    }\\n    function isPrimeNumber(uint256 integer) internal pure returns (bool) {\\n        if (integer < 2) return false;\\n        if (integer == 2) return true;\\n        if (integer % 2 == 0) return false;\\n        for (uint256 i = 3; i * i <= integer; i += 2) {\\n            if (integer % i == 0) {\\n                return false;\\n            }\\n        }\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x5f789ae328c82188eed996d4a74a29884e1d4264eaa3d664298f5a96e2071c47\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}