{"id":"0f9afc6e9875f36c49b42dfca157c662","_format":"hh-sol-build-info-1","solcVersion":"0.8.27","solcLongVersion":"0.8.27+commit.40a35a09","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721Receiver.sol\";\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"contracts/IRewardToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\ninterface IRewardToken {\n    /**\n     * @notice Mints `amount` tokens to the `account`.\n     * @param amount The number of tokens to mint.\n     */\n    function mint(uint256 amount) external;\n}\n"},"contracts/Staking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.27;\n\nimport {IERC721Receiver} from \"@openzeppelin/contracts/interfaces/IERC721Receiver.sol\";\nimport {IERC721} from \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport {IRewardToken} from \"./IRewardToken.sol\";\n\n/**\n * @title Staking Contract for ERC721 Tokens\n * @dev Allows users to stake their NFTs and withdraw them later. Implements IERC721Receiver to receive NFTs.\n */\ncontract Staking is IERC721Receiver {\n    struct Stake {\n        uint256 timestamp;\n        address originalOwner;\n    }\n\n    address public immutable nft;\n    address public immutable rewardToken;\n\n    mapping(uint256 => Stake) public stakes;\n\n    event NFTStaked(address indexed owner, uint256 indexed tokenId, uint256 timestamp);\n    event NFTWithdrawn(address indexed owner, uint256 indexed tokenId);\n    event RewardsMinted(address indexed owner, uint256 amount, uint256 indexed tokenId);\n\n    /**\n     * @notice Constructor to set the NFT contract address.\n     * @param nft_ The address of the ERC721 NFT contract that will be used for staking.\n     */\n    constructor(address nft_, address rewardToken_) {\n        nft = nft_;\n        rewardToken = rewardToken_;\n    }\n\n    /**\n     * @notice Handles the receipt of an ERC721 token.\n     * @dev This function is called whenever an ERC721 token is transferred to this contract via `safeTransferFrom`.\n     * It will store the stake information in the `stakes` mapping.\n     * @param from The previous owner of the NFT (the address that staked the NFT).\n     * @param id The token ID of the NFT being staked.\n     * @return The selector to confirm that the NFT has been received.\n     */\n    function onERC721Received(address, address from, uint256 id, bytes calldata) external override returns (bytes4) {\n        require(msg.sender == nft, \"Staking: Incorrect NFT contract\");\n        stakes[id].originalOwner = from;\n        stakes[id].timestamp = block.timestamp;\n        emit NFTStaked(from, id, stakes[id].timestamp);\n\n        return this.onERC721Received.selector;\n    }\n\n    /**\n     * @notice Allows the original owner to withdraw their staked NFT.\n     * @dev Only the original owner of the NFT can withdraw it. The stake is deleted upon withdrawal.\n     * @param id The token ID of the staked NFT.\n     */\n    function withdrawNft(uint256 id) external {\n        Stake storage stake = stakes[id];\n        require(stake.originalOwner == msg.sender, \"Staking: Not the original owner\");\n\n        delete stakes[id];\n        IERC721(nft).transferFrom(address(this), msg.sender, id);\n        emit NFTWithdrawn(msg.sender, id);\n    }\n\n    /**\n     * @notice Allows the original owner to withdraw their staking rewards.\n     * @dev Rewards are minted based on the duration the NFT was staked.\n     * @param id The token ID of the staked NFT.\n     */\n    function withdrawRewards(uint256 id) external {\n        Stake storage stake = stakes[id];\n        require(stake.originalOwner == msg.sender, \"Staking: Not the original owner\");\n        require(stake.timestamp != 0, \"NFT is not staked\");\n\n        uint256 durationInSeconds = block.timestamp - stake.timestamp;\n        uint256 durationInDays = durationInSeconds / 60 / 60 / 24;\n\n        if (durationInDays >= 1) {\n            uint256 tokenAmount = durationInDays * 10 ether;\n            IRewardToken(rewardToken).mint(tokenAmount);\n            emit RewardsMinted(msg.sender, tokenAmount, id);\n            stake.timestamp = block.timestamp;\n        }\n    }\n\n    function getStakeTimestamp(uint256 id) public view returns (uint256) {\n        Stake memory stake = stakes[id];\n        return stake.timestamp;\n    }\n    function getStakeOwner(uint256 id) public view returns (address) {\n        Stake memory stake = stakes[id];\n        return stake.originalOwner;\n    }\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[136]},"id":3,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:0"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../token/ERC721/IERC721Receiver.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3,"sourceUnit":137,"src":"124:45:0","symbolAliases":[],"unitAlias":""}],"src":"99:71:0"},"id":0},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[148],"IERC721":[118]},"id":119,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":119,"sourceUnit":149,"src":"133:47:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7,"name":"IERC165","nameLocations":["271:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":148,"src":"271:7:1"},"id":8,"nodeType":"InheritanceSpecifier","src":"271:7:1"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"182:67:1","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":118,"linearizedBaseContracts":[118,148],"name":"IERC721","nameLocation":"260:7:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"285:88:1","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":17,"name":"Transfer","nameLocation":"384:8:1","nodeType":"EventDefinition","parameters":{"id":16,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:1","nodeType":"VariableDeclaration","scope":17,"src":"393:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:1","nodeType":"VariableDeclaration","scope":17,"src":"415:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:1","nodeType":"VariableDeclaration","scope":17,"src":"435:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:1"},"src":"378:82:1"},{"anonymous":false,"documentation":{"id":18,"nodeType":"StructuredDocumentation","src":"466:94:1","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":26,"name":"Approval","nameLocation":"571:8:1","nodeType":"EventDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:1","nodeType":"VariableDeclaration","scope":26,"src":"580:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:1","nodeType":"VariableDeclaration","scope":26,"src":"603:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:1","nodeType":"VariableDeclaration","scope":26,"src":"629:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:1"},"src":"565:89:1"},{"anonymous":false,"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"660:117:1","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":35,"name":"ApprovalForAll","nameLocation":"788:14:1","nodeType":"EventDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:1","nodeType":"VariableDeclaration","scope":35,"src":"803:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:1","nodeType":"VariableDeclaration","scope":35,"src":"826:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":33,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:1","nodeType":"VariableDeclaration","scope":35,"src":"852:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:1"},"src":"782:85:1"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"873:76:1","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":43,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:1","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"owner","nameLocation":"981:5:1","nodeType":"VariableDeclaration","scope":43,"src":"973:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:1"},"returnParameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"balance","nameLocation":"1019:7:1","nodeType":"VariableDeclaration","scope":43,"src":"1011:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:1"},"scope":118,"src":"954:74:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1034:131:1","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":51,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:1","nodeType":"FunctionDefinition","parameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:1","nodeType":"VariableDeclaration","scope":51,"src":"1187:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:1"},"returnParameters":{"id":50,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"owner","nameLocation":"1235:5:1","nodeType":"VariableDeclaration","scope":51,"src":"1227:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:1"},"scope":118,"src":"1170:72:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"1248:556:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":63,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[{"constant":false,"id":54,"mutability":"mutable","name":"from","nameLocation":"1852:4:1","nodeType":"VariableDeclaration","scope":63,"src":"1844:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":53,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":56,"mutability":"mutable","name":"to","nameLocation":"1874:2:1","nodeType":"VariableDeclaration","scope":63,"src":"1866:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"1866:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":58,"mutability":"mutable","name":"tokenId","nameLocation":"1894:7:1","nodeType":"VariableDeclaration","scope":63,"src":"1886:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"1886:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"data","nameLocation":"1926:4:1","nodeType":"VariableDeclaration","scope":63,"src":"1911:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":59,"name":"bytes","nodeType":"ElementaryTypeName","src":"1911:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:102:1"},"returnParameters":{"id":62,"nodeType":"ParameterList","parameters":[],"src":"1945:0:1"},"scope":118,"src":"1809:137:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"1952:687:1","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2653:16:1","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"from","nameLocation":"2687:4:1","nodeType":"VariableDeclaration","scope":73,"src":"2679:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":65,"name":"address","nodeType":"ElementaryTypeName","src":"2679:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"to","nameLocation":"2709:2:1","nodeType":"VariableDeclaration","scope":73,"src":"2701:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"mutability":"mutable","name":"tokenId","nameLocation":"2729:7:1","nodeType":"VariableDeclaration","scope":73,"src":"2721:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":69,"name":"uint256","nodeType":"ElementaryTypeName","src":"2721:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2669:73:1"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[],"src":"2751:0:1"},"scope":118,"src":"2644:108:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"2758:732:1","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":83,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3504:12:1","nodeType":"FunctionDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"from","nameLocation":"3534:4:1","nodeType":"VariableDeclaration","scope":83,"src":"3526:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"3526:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"to","nameLocation":"3556:2:1","nodeType":"VariableDeclaration","scope":83,"src":"3548:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"tokenId","nameLocation":"3576:7:1","nodeType":"VariableDeclaration","scope":83,"src":"3568:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"3568:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:73:1"},"returnParameters":{"id":82,"nodeType":"ParameterList","parameters":[],"src":"3598:0:1"},"scope":118,"src":"3495:104:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":84,"nodeType":"StructuredDocumentation","src":"3605:452:1","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":91,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4071:7:1","nodeType":"FunctionDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"mutability":"mutable","name":"to","nameLocation":"4087:2:1","nodeType":"VariableDeclaration","scope":91,"src":"4079:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":85,"name":"address","nodeType":"ElementaryTypeName","src":"4079:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":88,"mutability":"mutable","name":"tokenId","nameLocation":"4099:7:1","nodeType":"VariableDeclaration","scope":91,"src":"4091:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4078:29:1"},"returnParameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"4116:0:1"},"scope":118,"src":"4062:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"4123:309:1","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":99,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4446:17:1","nodeType":"FunctionDefinition","parameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"operator","nameLocation":"4472:8:1","nodeType":"VariableDeclaration","scope":99,"src":"4464:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"4464:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"_approved","nameLocation":"4487:9:1","nodeType":"VariableDeclaration","scope":99,"src":"4482:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":95,"name":"bool","nodeType":"ElementaryTypeName","src":"4482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4463:34:1"},"returnParameters":{"id":98,"nodeType":"ParameterList","parameters":[],"src":"4506:0:1"},"scope":118,"src":"4437:70:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":100,"nodeType":"StructuredDocumentation","src":"4513:139:1","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4666:11:1","nodeType":"FunctionDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"mutability":"mutable","name":"tokenId","nameLocation":"4686:7:1","nodeType":"VariableDeclaration","scope":107,"src":"4678:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"4678:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4677:17:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"mutability":"mutable","name":"operator","nameLocation":"4726:8:1","nodeType":"VariableDeclaration","scope":107,"src":"4718:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"4718:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4717:18:1"},"scope":118,"src":"4657:79:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"4742:138:1","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":117,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4894:16:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"owner","nameLocation":"4919:5:1","nodeType":"VariableDeclaration","scope":117,"src":"4911:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":109,"name":"address","nodeType":"ElementaryTypeName","src":"4911:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"operator","nameLocation":"4934:8:1","nodeType":"VariableDeclaration","scope":117,"src":"4926:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4926:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4910:33:1"},"returnParameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":117,"src":"4967:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":114,"name":"bool","nodeType":"ElementaryTypeName","src":"4967:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4966:6:1"},"scope":118,"src":"4885:88:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":119,"src":"250:4725:1","usedErrors":[],"usedEvents":[17,26,35]}],"src":"108:4868:1"},"id":1},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[136]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":120,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"141:152:2","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":136,"linearizedBaseContracts":[136],"name":"IERC721Receiver","nameLocation":"304:15:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"326:493:2","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":135,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:2","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"operator","nameLocation":"867:8:2","nodeType":"VariableDeclaration","scope":135,"src":"859:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"from","nameLocation":"893:4:2","nodeType":"VariableDeclaration","scope":135,"src":"885:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:2","nodeType":"VariableDeclaration","scope":135,"src":"907:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":130,"mutability":"mutable","name":"data","nameLocation":"947:4:2","nodeType":"VariableDeclaration","scope":135,"src":"932:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":129,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:2"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":135,"src":"976:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":132,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:2"},"scope":136,"src":"824:160:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":137,"src":"294:692:2","usedErrors":[],"usedEvents":[]}],"src":"116:871:2"},"id":2},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[148]},"id":149,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"125:279:3","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":148,"linearizedBaseContracts":[148],"name":"IERC165","nameLocation":"415:7:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"429:340:3","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:3","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:3","nodeType":"VariableDeclaration","scope":147,"src":"801:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":141,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:3"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":147,"src":"844:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":144,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:3"},"scope":148,"src":"774:76:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":149,"src":"405:447:3","usedErrors":[],"usedEvents":[]}],"src":"100:753:3"},"id":3},"contracts/IRewardToken.sol":{"ast":{"absolutePath":"contracts/IRewardToken.sol","exportedSymbols":{"IRewardToken":[157]},"id":158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":150,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IRewardToken","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":157,"linearizedBaseContracts":[157],"name":"IRewardToken","nameLocation":"68:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"87:117:4","text":" @notice Mints `amount` tokens to the `account`.\n @param amount The number of tokens to mint."},"functionSelector":"a0712d68","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"218:4:4","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"amount","nameLocation":"231:6:4","nodeType":"VariableDeclaration","scope":156,"src":"223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":152,"name":"uint256","nodeType":"ElementaryTypeName","src":"223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"222:16:4"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"247:0:4"},"scope":157,"src":"209:39:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":158,"src":"58:192:4","usedErrors":[],"usedEvents":[]}],"src":"32:219:4"},"id":4},"contracts/Staking.sol":{"ast":{"absolutePath":"contracts/Staking.sol","exportedSymbols":{"IERC721":[118],"IERC721Receiver":[136],"IRewardToken":[157],"Staking":[438]},"id":439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":159,"literals":["solidity","^","0.8",".27"],"nodeType":"PragmaDirective","src":"32:24:5"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721Receiver.sol","file":"@openzeppelin/contracts/interfaces/IERC721Receiver.sol","id":161,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":439,"sourceUnit":3,"src":"58:87:5","symbolAliases":[{"foreign":{"id":160,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"66:15:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":163,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":439,"sourceUnit":119,"src":"146:73:5","symbolAliases":[{"foreign":{"id":162,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"154:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/IRewardToken.sol","file":"./IRewardToken.sol","id":165,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":439,"sourceUnit":158,"src":"220:48:5","symbolAliases":[{"foreign":{"id":164,"name":"IRewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"228:12:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":167,"name":"IERC721Receiver","nameLocations":["453:15:5"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"453:15:5"},"id":168,"nodeType":"InheritanceSpecifier","src":"453:15:5"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"270:162:5","text":" @title Staking Contract for ERC721 Tokens\n @dev Allows users to stake their NFTs and withdraw them later. Implements IERC721Receiver to receive NFTs."},"fullyImplemented":true,"id":438,"linearizedBaseContracts":[438,136],"name":"Staking","nameLocation":"442:7:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Staking.Stake","id":173,"members":[{"constant":false,"id":170,"mutability":"mutable","name":"timestamp","nameLocation":"506:9:5","nodeType":"VariableDeclaration","scope":173,"src":"498:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"originalOwner","nameLocation":"533:13:5","nodeType":"VariableDeclaration","scope":173,"src":"525:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"525:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Stake","nameLocation":"482:5:5","nodeType":"StructDefinition","scope":438,"src":"475:78:5","visibility":"public"},{"constant":false,"functionSelector":"47ccca02","id":175,"mutability":"immutable","name":"nft","nameLocation":"584:3:5","nodeType":"VariableDeclaration","scope":438,"src":"559:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"559:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"f7c618c1","id":177,"mutability":"immutable","name":"rewardToken","nameLocation":"618:11:5","nodeType":"VariableDeclaration","scope":438,"src":"593:36:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"593:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d5a44f86","id":182,"mutability":"mutable","name":"stakes","nameLocation":"669:6:5","nodeType":"VariableDeclaration","scope":438,"src":"636:39:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake)"},"typeName":{"id":181,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"644:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"636:25:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":180,"nodeType":"UserDefinedTypeName","pathNode":{"id":179,"name":"Stake","nameLocations":["655:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":173,"src":"655:5:5"},"referencedDeclaration":173,"src":"655:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d39","id":190,"name":"NFTStaked","nameLocation":"688:9:5","nodeType":"EventDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"714:5:5","nodeType":"VariableDeclaration","scope":190,"src":"698:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":183,"name":"address","nodeType":"ElementaryTypeName","src":"698:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":186,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"737:7:5","nodeType":"VariableDeclaration","scope":190,"src":"721:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":185,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":188,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"754:9:5","nodeType":"VariableDeclaration","scope":190,"src":"746:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":187,"name":"uint256","nodeType":"ElementaryTypeName","src":"746:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"697:67:5"},"src":"682:83:5"},{"anonymous":false,"eventSelector":"2aa1b4c95f3b2da9c955947fca584743ea0d457708fadf209c093061e98c4ccb","id":196,"name":"NFTWithdrawn","nameLocation":"776:12:5","nodeType":"EventDefinition","parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"805:5:5","nodeType":"VariableDeclaration","scope":196,"src":"789:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"789:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":194,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"828:7:5","nodeType":"VariableDeclaration","scope":196,"src":"812:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"788:48:5"},"src":"770:67:5"},{"anonymous":false,"eventSelector":"b981442338311d47912aead4f8d309ff0d9f814fca5087277f319a56741dd450","id":204,"name":"RewardsMinted","nameLocation":"848:13:5","nodeType":"EventDefinition","parameters":{"id":203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"878:5:5","nodeType":"VariableDeclaration","scope":204,"src":"862:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"862:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"893:6:5","nodeType":"VariableDeclaration","scope":204,"src":"885:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":199,"name":"uint256","nodeType":"ElementaryTypeName","src":"885:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":202,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"917:7:5","nodeType":"VariableDeclaration","scope":204,"src":"901:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint256","nodeType":"ElementaryTypeName","src":"901:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"861:64:5"},"src":"842:84:5"},{"body":{"id":220,"nodeType":"Block","src":"1145:63:5","statements":[{"expression":{"id":214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":212,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1155:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":213,"name":"nft_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":207,"src":"1161:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1155:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":215,"nodeType":"ExpressionStatement","src":"1155:10:5"},{"expression":{"id":218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":216,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"1175:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":217,"name":"rewardToken_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"1189:12:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1175:26:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":219,"nodeType":"ExpressionStatement","src":"1175:26:5"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"932:160:5","text":" @notice Constructor to set the NFT contract address.\n @param nft_ The address of the ERC721 NFT contract that will be used for staking."},"id":221,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":207,"mutability":"mutable","name":"nft_","nameLocation":"1117:4:5","nodeType":"VariableDeclaration","scope":221,"src":"1109:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"1109:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"rewardToken_","nameLocation":"1131:12:5","nodeType":"VariableDeclaration","scope":221,"src":"1123:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":208,"name":"address","nodeType":"ElementaryTypeName","src":"1123:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1108:36:5"},"returnParameters":{"id":211,"nodeType":"ParameterList","parameters":[],"src":"1145:0:5"},"scope":438,"src":"1097:111:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[135],"body":{"id":272,"nodeType":"Block","src":"1792:271:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1810:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1814:6:5","memberName":"sender","nodeType":"MemberAccess","src":"1810:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":239,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"1824:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1810:17:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a20496e636f7272656374204e465420636f6e7472616374","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1829:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af","typeString":"literal_string \"Staking: Incorrect NFT contract\""},"value":"Staking: Incorrect NFT contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af","typeString":"literal_string \"Staking: Incorrect NFT contract\""}],"id":236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1802:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1802:61:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":243,"nodeType":"ExpressionStatement","src":"1802:61:5"},{"expression":{"id":249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":244,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1873:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":246,"indexExpression":{"id":245,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1880:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1873:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"id":247,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1884:13:5","memberName":"originalOwner","nodeType":"MemberAccess","referencedDeclaration":172,"src":"1873:24:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":248,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1900:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1873:31:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":250,"nodeType":"ExpressionStatement","src":"1873:31:5"},{"expression":{"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":251,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1914:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":253,"indexExpression":{"id":252,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1921:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1914:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"id":254,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1925:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"1914:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":255,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1937:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1943:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"1937:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1914:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":258,"nodeType":"ExpressionStatement","src":"1914:38:5"},{"eventCall":{"arguments":[{"id":260,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1977:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":261,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1983:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"baseExpression":{"id":262,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"1987:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":264,"indexExpression":{"id":263,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"1994:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1987:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"id":265,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1998:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"1987:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":259,"name":"NFTStaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":190,"src":"1967:9:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1967:41:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":267,"nodeType":"EmitStatement","src":"1962:46:5"},{"expression":{"expression":{"expression":{"id":268,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2026:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$438","typeString":"contract Staking"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2031:16:5","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":273,"src":"2026:21:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2048:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2026:30:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":235,"id":271,"nodeType":"Return","src":"2019:37:5"}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1214:461:5","text":" @notice Handles the receipt of an ERC721 token.\n @dev This function is called whenever an ERC721 token is transferred to this contract via `safeTransferFrom`.\n It will store the stake information in the `stakes` mapping.\n @param from The previous owner of the NFT (the address that staked the NFT).\n @param id The token ID of the NFT being staked.\n @return The selector to confirm that the NFT has been received."},"functionSelector":"150b7a02","id":273,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"1689:16:5","nodeType":"FunctionDefinition","overrides":{"id":232,"nodeType":"OverrideSpecifier","overrides":[],"src":"1766:8:5"},"parameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"1706:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"from","nameLocation":"1723:4:5","nodeType":"VariableDeclaration","scope":273,"src":"1715:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":225,"name":"address","nodeType":"ElementaryTypeName","src":"1715:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"id","nameLocation":"1737:2:5","nodeType":"VariableDeclaration","scope":273,"src":"1729:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1729:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"1741:14:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":229,"name":"bytes","nodeType":"ElementaryTypeName","src":"1741:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1705:51:5"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":273,"src":"1784:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":233,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1784:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1783:8:5"},"scope":438,"src":"1680:383:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":319,"nodeType":"Block","src":"2349:273:5","statements":[{"assignments":[281],"declarations":[{"constant":false,"id":281,"mutability":"mutable","name":"stake","nameLocation":"2373:5:5","nodeType":"VariableDeclaration","scope":319,"src":"2359:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"},"typeName":{"id":280,"nodeType":"UserDefinedTypeName","pathNode":{"id":279,"name":"Stake","nameLocations":["2359:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":173,"src":"2359:5:5"},"referencedDeclaration":173,"src":"2359:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"}},"visibility":"internal"}],"id":285,"initialValue":{"baseExpression":{"id":282,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2381:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":284,"indexExpression":{"id":283,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2388:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2381:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2359:32:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":287,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":281,"src":"2409:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake storage pointer"}},"id":288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2415:13:5","memberName":"originalOwner","nodeType":"MemberAccess","referencedDeclaration":172,"src":"2409:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":289,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2432:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2436:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2432:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2409:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a204e6f7420746865206f726967696e616c206f776e6572","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2444:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","typeString":"literal_string \"Staking: Not the original owner\""},"value":"Staking: Not the original owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","typeString":"literal_string \"Staking: Not the original owner\""}],"id":286,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2401:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2401:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"ExpressionStatement","src":"2401:77:5"},{"expression":{"id":298,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2489:17:5","subExpression":{"baseExpression":{"id":295,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2496:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2503:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2496:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"2489:17:5"},{"expression":{"arguments":[{"arguments":[{"id":306,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2550:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$438","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$438","typeString":"contract Staking"}],"id":305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2542:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":304,"name":"address","nodeType":"ElementaryTypeName","src":"2542:7:5","typeDescriptions":{}}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":308,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2557:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2561:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2557:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":310,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2569:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":301,"name":"nft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"2524:3:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":300,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2516:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$118_$","typeString":"type(contract IERC721)"}},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$118","typeString":"contract IERC721"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2529:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":83,"src":"2516:25:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2516:56:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":312,"nodeType":"ExpressionStatement","src":"2516:56:5"},{"eventCall":{"arguments":[{"expression":{"id":314,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2600:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2604:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2600:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":316,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"2612:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":313,"name":"NFTWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":196,"src":"2587:12:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2587:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":318,"nodeType":"EmitStatement","src":"2582:33:5"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"2069:233:5","text":" @notice Allows the original owner to withdraw their staked NFT.\n @dev Only the original owner of the NFT can withdraw it. The stake is deleted upon withdrawal.\n @param id The token ID of the staked NFT."},"functionSelector":"910efae8","id":320,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawNft","nameLocation":"2316:11:5","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"id","nameLocation":"2336:2:5","nodeType":"VariableDeclaration","scope":320,"src":"2328:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"2328:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2327:12:5"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"2349:0:5"},"scope":438,"src":"2307:315:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":400,"nodeType":"Block","src":"2888:607:5","statements":[{"assignments":[328],"declarations":[{"constant":false,"id":328,"mutability":"mutable","name":"stake","nameLocation":"2912:5:5","nodeType":"VariableDeclaration","scope":400,"src":"2898:19:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"},"typeName":{"id":327,"nodeType":"UserDefinedTypeName","pathNode":{"id":326,"name":"Stake","nameLocations":["2898:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":173,"src":"2898:5:5"},"referencedDeclaration":173,"src":"2898:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"}},"visibility":"internal"}],"id":332,"initialValue":{"baseExpression":{"id":329,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"2920:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":331,"indexExpression":{"id":330,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"2927:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2920:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2898:32:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":334,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"2948:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake storage pointer"}},"id":335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2954:13:5","memberName":"originalOwner","nodeType":"MemberAccess","referencedDeclaration":172,"src":"2948:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":336,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2971:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:6:5","memberName":"sender","nodeType":"MemberAccess","src":"2971:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2948:33:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b696e673a204e6f7420746865206f726967696e616c206f776e6572","id":339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2983:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","typeString":"literal_string \"Staking: Not the original owner\""},"value":"Staking: Not the original owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","typeString":"literal_string \"Staking: Not the original owner\""}],"id":333,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2940:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2940:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":341,"nodeType":"ExpressionStatement","src":"2940:77:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":343,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3035:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake storage pointer"}},"id":344,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3041:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"3035:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3054:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3035:20:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e4654206973206e6f74207374616b6564","id":347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3057:19:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe","typeString":"literal_string \"NFT is not staked\""},"value":"NFT is not staked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe","typeString":"literal_string \"NFT is not staked\""}],"id":342,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3027:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3027:50:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":349,"nodeType":"ExpressionStatement","src":"3027:50:5"},{"assignments":[351],"declarations":[{"constant":false,"id":351,"mutability":"mutable","name":"durationInSeconds","nameLocation":"3096:17:5","nodeType":"VariableDeclaration","scope":400,"src":"3088:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":350,"name":"uint256","nodeType":"ElementaryTypeName","src":"3088:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":357,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":352,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3116:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3122:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3116:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":354,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3134:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake storage pointer"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3140:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"3134:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3116:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3088:61:5"},{"assignments":[359],"declarations":[{"constant":false,"id":359,"mutability":"mutable","name":"durationInDays","nameLocation":"3167:14:5","nodeType":"VariableDeclaration","scope":400,"src":"3159:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3159:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":367,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":360,"name":"durationInSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"3184:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3630","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3204:2:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"3184:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3630","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3209:2:5","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"},"src":"3184:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3234","id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:2:5","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"3184:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3159:57:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":368,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3231:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3249:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3231:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":399,"nodeType":"IfStatement","src":"3227:262:5","trueBody":{"id":398,"nodeType":"Block","src":"3252:237:5","statements":[{"assignments":[372],"declarations":[{"constant":false,"id":372,"mutability":"mutable","name":"tokenAmount","nameLocation":"3274:11:5","nodeType":"VariableDeclaration","scope":398,"src":"3266:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"3266:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":373,"name":"durationInDays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3288:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3130","id":374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3305:8:5","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000_by_1","typeString":"int_const 10000000000000000000"},"value":"10"},"src":"3288:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3266:47:5"},{"expression":{"arguments":[{"id":381,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"3358:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":378,"name":"rewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3340:11:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":377,"name":"IRewardToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"3327:12:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IRewardToken_$157_$","typeString":"type(contract IRewardToken)"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IRewardToken_$157","typeString":"contract IRewardToken"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3353:4:5","memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":156,"src":"3327:30:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3327:43:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"3327:43:5"},{"eventCall":{"arguments":[{"expression":{"id":385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3403:3:5","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3407:6:5","memberName":"sender","nodeType":"MemberAccess","src":"3403:10:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":387,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"3415:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":388,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"3428:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":384,"name":"RewardsMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":204,"src":"3389:13:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:42:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":390,"nodeType":"EmitStatement","src":"3384:47:5"},{"expression":{"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":391,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3445:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake storage pointer"}},"id":393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3451:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"3445:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":394,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3463:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3469:9:5","memberName":"timestamp","nodeType":"MemberAccess","src":"3463:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3445:33:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":397,"nodeType":"ExpressionStatement","src":"3445:33:5"}]}}]},"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"2628:209:5","text":" @notice Allows the original owner to withdraw their staking rewards.\n @dev Rewards are minted based on the duration the NFT was staked.\n @param id The token ID of the staked NFT."},"functionSelector":"9342c8f4","id":401,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawRewards","nameLocation":"2851:15:5","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"id","nameLocation":"2875:2:5","nodeType":"VariableDeclaration","scope":401,"src":"2867:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2866:12:5"},"returnParameters":{"id":325,"nodeType":"ParameterList","parameters":[],"src":"2888:0:5"},"scope":438,"src":"2842:653:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":418,"nodeType":"Block","src":"3570:80:5","statements":[{"assignments":[410],"declarations":[{"constant":false,"id":410,"mutability":"mutable","name":"stake","nameLocation":"3593:5:5","nodeType":"VariableDeclaration","scope":418,"src":"3580:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_memory_ptr","typeString":"struct Staking.Stake"},"typeName":{"id":409,"nodeType":"UserDefinedTypeName","pathNode":{"id":408,"name":"Stake","nameLocations":["3580:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":173,"src":"3580:5:5"},"referencedDeclaration":173,"src":"3580:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"}},"visibility":"internal"}],"id":414,"initialValue":{"baseExpression":{"id":411,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3601:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":413,"indexExpression":{"id":412,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"3608:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3601:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3580:31:5"},{"expression":{"expression":{"id":415,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"3628:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_memory_ptr","typeString":"struct Staking.Stake memory"}},"id":416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3634:9:5","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":170,"src":"3628:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":407,"id":417,"nodeType":"Return","src":"3621:22:5"}]},"functionSelector":"9ee0bcbc","id":419,"implemented":true,"kind":"function","modifiers":[],"name":"getStakeTimestamp","nameLocation":"3510:17:5","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":403,"mutability":"mutable","name":"id","nameLocation":"3536:2:5","nodeType":"VariableDeclaration","scope":419,"src":"3528:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":402,"name":"uint256","nodeType":"ElementaryTypeName","src":"3528:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3527:12:5"},"returnParameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":419,"src":"3561:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"3561:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3560:9:5"},"scope":438,"src":"3501:149:5","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":436,"nodeType":"Block","src":"3720:84:5","statements":[{"assignments":[428],"declarations":[{"constant":false,"id":428,"mutability":"mutable","name":"stake","nameLocation":"3743:5:5","nodeType":"VariableDeclaration","scope":436,"src":"3730:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_memory_ptr","typeString":"struct Staking.Stake"},"typeName":{"id":427,"nodeType":"UserDefinedTypeName","pathNode":{"id":426,"name":"Stake","nameLocations":["3730:5:5"],"nodeType":"IdentifierPath","referencedDeclaration":173,"src":"3730:5:5"},"referencedDeclaration":173,"src":"3730:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage_ptr","typeString":"struct Staking.Stake"}},"visibility":"internal"}],"id":432,"initialValue":{"baseExpression":{"id":429,"name":"stakes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":182,"src":"3751:6:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Stake_$173_storage_$","typeString":"mapping(uint256 => struct Staking.Stake storage ref)"}},"id":431,"indexExpression":{"id":430,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"3758:2:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3751:10:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_storage","typeString":"struct Staking.Stake storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3730:31:5"},{"expression":{"expression":{"id":433,"name":"stake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":428,"src":"3778:5:5","typeDescriptions":{"typeIdentifier":"t_struct$_Stake_$173_memory_ptr","typeString":"struct Staking.Stake memory"}},"id":434,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3784:13:5","memberName":"originalOwner","nodeType":"MemberAccess","referencedDeclaration":172,"src":"3778:19:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":435,"nodeType":"Return","src":"3771:26:5"}]},"functionSelector":"5108f256","id":437,"implemented":true,"kind":"function","modifiers":[],"name":"getStakeOwner","nameLocation":"3664:13:5","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"id","nameLocation":"3686:2:5","nodeType":"VariableDeclaration","scope":437,"src":"3678:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":420,"name":"uint256","nodeType":"ElementaryTypeName","src":"3678:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3677:12:5"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":437,"src":"3711:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"3711:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3710:9:5"},"scope":438,"src":"3655:149:5","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":439,"src":"433:3373:5","usedErrors":[],"usedEvents":[190,196,204]}],"src":"32:3775:5"},"id":5}},"contracts":{"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IRewardToken.sol":{"IRewardToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"mint(uint256)":{"params":{"amount":"The number of tokens to mint."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"mint(uint256)":"a0712d68"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(uint256)\":{\"params\":{\"amount\":\"The number of tokens to mint.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(uint256)\":{\"notice\":\"Mints `amount` tokens to the `account`.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IRewardToken.sol\":\"IRewardToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IRewardToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.27;\\n\\ninterface IRewardToken {\\n    /**\\n     * @notice Mints `amount` tokens to the `account`.\\n     * @param amount The number of tokens to mint.\\n     */\\n    function mint(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x2539a8aa7b80cb229a9587af7540530e95269af4032131b9183453572be433d0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"mint(uint256)":{"notice":"Mints `amount` tokens to the `account`."}},"version":1}}},"contracts/Staking.sol":{"Staking":{"abi":[{"inputs":[{"internalType":"address","name":"nft_","type":"address"},{"internalType":"address","name":"rewardToken_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"NFTStaked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"NFTWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"RewardsMinted","type":"event"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getStakeOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"getStakeTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nft","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardToken","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"address","name":"originalOwner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"withdrawNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"withdrawRewards","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Allows users to stake their NFTs and withdraw them later. Implements IERC721Receiver to receive NFTs.","kind":"dev","methods":{"constructor":{"params":{"nft_":"The address of the ERC721 NFT contract that will be used for staking."}},"onERC721Received(address,address,uint256,bytes)":{"details":"This function is called whenever an ERC721 token is transferred to this contract via `safeTransferFrom`. It will store the stake information in the `stakes` mapping.","params":{"from":"The previous owner of the NFT (the address that staked the NFT).","id":"The token ID of the NFT being staked."},"returns":{"_0":"The selector to confirm that the NFT has been received."}},"withdrawNft(uint256)":{"details":"Only the original owner of the NFT can withdraw it. The stake is deleted upon withdrawal.","params":{"id":"The token ID of the staked NFT."}},"withdrawRewards(uint256)":{"details":"Rewards are minted based on the duration the NFT was staked.","params":{"id":"The token ID of the staked NFT."}}},"title":"Staking Contract for ERC721 Tokens","version":1},"evm":{"bytecode":{"functionDebugData":{"@_221":{"entryPoint":null,"id":221,"parameterSlots":2,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":239,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":260,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":198,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":166,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":161,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":216,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:1355:6","nodeType":"YulBlock","src":"0:1355:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:81:6","nodeType":"YulBlock","src":"379:81:6","statements":[{"nativeSrc":"389:65:6","nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nativeSrc":"404:5:6","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nativeSrc":"411:42:6","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:6","nodeType":"YulIdentifier","src":"400:3:6"},"nativeSrc":"400:54:6","nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nativeSrc":"511:51:6","nodeType":"YulBlock","src":"511:51:6","statements":[{"nativeSrc":"521:35:6","nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nativeSrc":"550:5:6","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:6","nodeType":"YulIdentifier","src":"532:17:6"},"nativeSrc":"532:24:6","nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:6","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:6","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:6","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nativeSrc":"611:79:6","nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nativeSrc":"668:16:6","nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:6","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:6","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:6","nodeType":"YulIdentifier","src":"670:6:6"},"nativeSrc":"670:12:6","nodeType":"YulFunctionCall","src":"670:12:6"},"nativeSrc":"670:12:6","nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:6","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nativeSrc":"659:5:6","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:6","nodeType":"YulIdentifier","src":"641:17:6"},"nativeSrc":"641:24:6","nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nativeSrc":"631:2:6","nodeType":"YulIdentifier","src":"631:2:6"},"nativeSrc":"631:35:6","nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nativeSrc":"624:6:6","nodeType":"YulIdentifier","src":"624:6:6"},"nativeSrc":"624:43:6","nodeType":"YulFunctionCall","src":"624:43:6"},"nativeSrc":"621:63:6","nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:6","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nativeSrc":"759:80:6","nodeType":"YulBlock","src":"759:80:6","statements":[{"nativeSrc":"769:22:6","nodeType":"YulAssignment","src":"769:22:6","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:6","nodeType":"YulIdentifier","src":"784:6:6"}],"functionName":{"name":"mload","nativeSrc":"778:5:6","nodeType":"YulIdentifier","src":"778:5:6"},"nativeSrc":"778:13:6","nodeType":"YulFunctionCall","src":"778:13:6"},"variableNames":[{"name":"value","nativeSrc":"769:5:6","nodeType":"YulIdentifier","src":"769:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:6","nodeType":"YulIdentifier","src":"827:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:6","nodeType":"YulIdentifier","src":"800:26:6"},"nativeSrc":"800:33:6","nodeType":"YulFunctionCall","src":"800:33:6"},"nativeSrc":"800:33:6","nodeType":"YulExpressionStatement","src":"800:33:6"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:6","nodeType":"YulTypedName","src":"737:6:6","type":""},{"name":"end","nativeSrc":"745:3:6","nodeType":"YulTypedName","src":"745:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:6","nodeType":"YulTypedName","src":"753:5:6","type":""}],"src":"696:143:6"},{"body":{"nativeSrc":"939:413:6","nodeType":"YulBlock","src":"939:413:6","statements":[{"body":{"nativeSrc":"985:83:6","nodeType":"YulBlock","src":"985:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:6","nodeType":"YulIdentifier","src":"987:77:6"},"nativeSrc":"987:79:6","nodeType":"YulFunctionCall","src":"987:79:6"},"nativeSrc":"987:79:6","nodeType":"YulExpressionStatement","src":"987:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:6","nodeType":"YulIdentifier","src":"960:7:6"},{"name":"headStart","nativeSrc":"969:9:6","nodeType":"YulIdentifier","src":"969:9:6"}],"functionName":{"name":"sub","nativeSrc":"956:3:6","nodeType":"YulIdentifier","src":"956:3:6"},"nativeSrc":"956:23:6","nodeType":"YulFunctionCall","src":"956:23:6"},{"kind":"number","nativeSrc":"981:2:6","nodeType":"YulLiteral","src":"981:2:6","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:6","nodeType":"YulIdentifier","src":"952:3:6"},"nativeSrc":"952:32:6","nodeType":"YulFunctionCall","src":"952:32:6"},"nativeSrc":"949:119:6","nodeType":"YulIf","src":"949:119:6"},{"nativeSrc":"1078:128:6","nodeType":"YulBlock","src":"1078:128:6","statements":[{"nativeSrc":"1093:15:6","nodeType":"YulVariableDeclaration","src":"1093:15:6","value":{"kind":"number","nativeSrc":"1107:1:6","nodeType":"YulLiteral","src":"1107:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:6","nodeType":"YulTypedName","src":"1097:6:6","type":""}]},{"nativeSrc":"1122:74:6","nodeType":"YulAssignment","src":"1122:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:6","nodeType":"YulIdentifier","src":"1168:9:6"},{"name":"offset","nativeSrc":"1179:6:6","nodeType":"YulIdentifier","src":"1179:6:6"}],"functionName":{"name":"add","nativeSrc":"1164:3:6","nodeType":"YulIdentifier","src":"1164:3:6"},"nativeSrc":"1164:22:6","nodeType":"YulFunctionCall","src":"1164:22:6"},{"name":"dataEnd","nativeSrc":"1188:7:6","nodeType":"YulIdentifier","src":"1188:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:6","nodeType":"YulIdentifier","src":"1132:31:6"},"nativeSrc":"1132:64:6","nodeType":"YulFunctionCall","src":"1132:64:6"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:6","nodeType":"YulIdentifier","src":"1122:6:6"}]}]},{"nativeSrc":"1216:129:6","nodeType":"YulBlock","src":"1216:129:6","statements":[{"nativeSrc":"1231:16:6","nodeType":"YulVariableDeclaration","src":"1231:16:6","value":{"kind":"number","nativeSrc":"1245:2:6","nodeType":"YulLiteral","src":"1245:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:6","nodeType":"YulTypedName","src":"1235:6:6","type":""}]},{"nativeSrc":"1261:74:6","nodeType":"YulAssignment","src":"1261:74:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:6","nodeType":"YulIdentifier","src":"1307:9:6"},{"name":"offset","nativeSrc":"1318:6:6","nodeType":"YulIdentifier","src":"1318:6:6"}],"functionName":{"name":"add","nativeSrc":"1303:3:6","nodeType":"YulIdentifier","src":"1303:3:6"},"nativeSrc":"1303:22:6","nodeType":"YulFunctionCall","src":"1303:22:6"},{"name":"dataEnd","nativeSrc":"1327:7:6","nodeType":"YulIdentifier","src":"1327:7:6"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:6","nodeType":"YulIdentifier","src":"1271:31:6"},"nativeSrc":"1271:64:6","nodeType":"YulFunctionCall","src":"1271:64:6"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:6","nodeType":"YulIdentifier","src":"1261:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:6","nodeType":"YulTypedName","src":"901:9:6","type":""},{"name":"dataEnd","nativeSrc":"912:7:6","nodeType":"YulTypedName","src":"912:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:6","nodeType":"YulTypedName","src":"924:6:6","type":""},{"name":"value1","nativeSrc":"932:6:6","nodeType":"YulTypedName","src":"932:6:6","type":""}],"src":"845:507:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60c060405234801561001057600080fd5b50604051610faa380380610faa83398181016040528101906100329190610104565b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250505050610144565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d1826100a6565b9050919050565b6100e1816100c6565b81146100ec57600080fd5b50565b6000815190506100fe816100d8565b92915050565b6000806040838503121561011b5761011a6100a1565b5b6000610129858286016100ef565b925050602061013a858286016100ef565b9150509250929050565b60805160a051610e2c61017e600039600081816106fa01526108b80152600081816101c60152818161033901526104d80152610e2c6000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639342c8f41161005b5780639342c8f4146101275780639ee0bcbc14610143578063d5a44f8614610173578063f7c618c1146101a457610088565b8063150b7a021461008d57806347ccca02146100bd5780635108f256146100db578063910efae81461010b575b600080fd5b6100a760048036038101906100a291906109dd565b6101c2565b6040516100b49190610aa0565b60405180910390f35b6100c5610337565b6040516100d29190610aca565b60405180910390f35b6100f560048036038101906100f09190610ae5565b61035b565b6040516101029190610aca565b60405180910390f35b61012560048036038101906101209190610ae5565b6103ea565b005b610141600480360381019061013c9190610ae5565b6105ad565b005b61015d60048036038101906101589190610ae5565b6107e3565b60405161016a9190610b21565b60405180910390f35b61018d60048036038101906101889190610ae5565b610872565b60405161019b929190610b3c565b60405180910390f35b6101ac6108b6565b6040516101b99190610aca565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610bc2565b60405180910390fd5b8460008086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260008086815260200190815260200160002060000181905550838573ffffffffffffffffffffffffffffffffffffffff167f36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d396000808881526020019081526020016000206000015460405161031c9190610b21565b60405180910390a363150b7a0260e01b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151915050919050565b600080600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610c2e565b60405180910390fd5b6000808381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b815260040161053393929190610c4e565b600060405180830381600087803b15801561054d57600080fd5b505af1158015610561573d6000803e3d6000fd5b50505050813373ffffffffffffffffffffffffffffffffffffffff167f2aa1b4c95f3b2da9c955947fca584743ea0d457708fadf209c093061e98c4ccb60405160405180910390a35050565b600080600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610c2e565b60405180910390fd5b600081600001540361069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390610cd1565b60405180910390fd5b60008160000154426106ae9190610d20565b905060006018603c80846106c29190610d83565b6106cc9190610d83565b6106d69190610d83565b9050600181106107dd576000678ac7230489e80000826106f69190610db4565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b81526004016107519190610b21565b600060405180830381600087803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b50505050843373ffffffffffffffffffffffffffffffffffffffff167fb981442338311d47912aead4f8d309ff0d9f814fca5087277f319a56741dd450836040516107ca9190610b21565b60405180910390a3428460000181905550505b50505050565b600080600080848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060000151915050919050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061090f826108e4565b9050919050565b61091f81610904565b811461092a57600080fd5b50565b60008135905061093c81610916565b92915050565b6000819050919050565b61095581610942565b811461096057600080fd5b50565b6000813590506109728161094c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261099d5761099c610978565b5b8235905067ffffffffffffffff8111156109ba576109b961097d565b5b6020830191508360018202830111156109d6576109d5610982565b5b9250929050565b6000806000806000608086880312156109f9576109f86108da565b5b6000610a078882890161092d565b9550506020610a188882890161092d565b9450506040610a2988828901610963565b935050606086013567ffffffffffffffff811115610a4a57610a496108df565b5b610a5688828901610987565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a9a81610a65565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b610ac481610904565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600060208284031215610afb57610afa6108da565b5b6000610b0984828501610963565b91505092915050565b610b1b81610942565b82525050565b6000602082019050610b366000830184610b12565b92915050565b6000604082019050610b516000830185610b12565b610b5e6020830184610abb565b9392505050565b600082825260208201905092915050565b7f5374616b696e673a20496e636f7272656374204e465420636f6e747261637400600082015250565b6000610bac601f83610b65565b9150610bb782610b76565b602082019050919050565b60006020820190508181036000830152610bdb81610b9f565b9050919050565b7f5374616b696e673a204e6f7420746865206f726967696e616c206f776e657200600082015250565b6000610c18601f83610b65565b9150610c2382610be2565b602082019050919050565b60006020820190508181036000830152610c4781610c0b565b9050919050565b6000606082019050610c636000830186610abb565b610c706020830185610abb565b610c7d6040830184610b12565b949350505050565b7f4e4654206973206e6f74207374616b6564000000000000000000000000000000600082015250565b6000610cbb601183610b65565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2b82610942565b9150610d3683610942565b9250828203905081811115610d4e57610d4d610cf1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d8e82610942565b9150610d9983610942565b925082610da957610da8610d54565b5b828204905092915050565b6000610dbf82610942565b9150610dca83610942565b9250828202610dd881610942565b91508282048414831517610def57610dee610cf1565b5b509291505056fea26469706673582212200d5c92b3116d5a2a766742583b0f67a6b97d2009a9ad843788d291435bba815664736f6c634300081b0033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xFAA CODESIZE SUB DUP1 PUSH2 0xFAA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x104 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP PUSH2 0x144 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1 DUP3 PUSH2 0xA6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0xC6 JUMP JUMPDEST DUP2 EQ PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xFE DUP2 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH2 0x11A PUSH2 0xA1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x129 DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13A DUP6 DUP3 DUP7 ADD PUSH2 0xEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xE2C PUSH2 0x17E PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x6FA ADD MSTORE PUSH2 0x8B8 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1C6 ADD MSTORE DUP2 DUP2 PUSH2 0x339 ADD MSTORE PUSH2 0x4D8 ADD MSTORE PUSH2 0xE2C PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9342C8F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9342C8F4 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x9EE0BCBC EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1A4 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x5108F256 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x910EFAE8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP3 SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36B3725F1783BAD4FF05B7F4C077C3AA68EEB23A4D054BA189DB4D01AC278D39 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA1B4C95F3B2DA9C955947FCA584743EA0D457708FADF209C093061E98C4CCB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x3C DUP1 DUP5 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x7DD JUMPI PUSH1 0x0 PUSH8 0x8AC7230489E80000 DUP3 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0712D68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB981442338311D47912AEAD4F8D309FF0D9F814FCA5087277F319A56741DD450 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91F DUP2 PUSH2 0x904 JUMP JUMPDEST DUP2 EQ PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x916 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x942 JUMP JUMPDEST DUP2 EQ PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x972 DUP2 PUSH2 0x94C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x99D JUMPI PUSH2 0x99C PUSH2 0x978 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x97D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x982 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA07 DUP9 DUP3 DUP10 ADD PUSH2 0x92D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA18 DUP9 DUP3 DUP10 ADD PUSH2 0x92D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xA29 DUP9 DUP3 DUP10 ADD PUSH2 0x963 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH2 0xA56 DUP9 DUP3 DUP10 ADD PUSH2 0x987 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAC4 DUP2 PUSH2 0x904 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB09 DUP5 DUP3 DUP6 ADD PUSH2 0x963 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0x942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0xB5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20496E636F7272656374204E465420636F6E747261637400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAC PUSH1 0x1F DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB7 DUP3 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBDB DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A204E6F7420746865206F726967696E616C206F776E657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC18 PUSH1 0x1F DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 DUP3 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC47 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC63 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xC70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xC7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F74207374616B6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB PUSH1 0x11 DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC6 DUP3 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEA DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xD36 DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4D PUSH2 0xCF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xD54 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBF DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCA DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDD8 DUP2 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xCF1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD TLOAD SWAP3 0xB3 GT PUSH14 0x5A2A766742583B0F67A6B97D2009 0xA9 0xAD DUP5 CALLDATACOPY DUP9 0xD2 SWAP2 NUMBER JUMPDEST 0xBA DUP2 JUMP PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"433:3373:5:-:0;;;1097:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1161:4;1155:10;;;;;;;;;;1189:12;1175:26;;;;;;;;;;1097:111;;433:3373;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;433:3373:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@getStakeOwner_437":{"entryPoint":859,"id":437,"parameterSlots":1,"returnSlots":1},"@getStakeTimestamp_419":{"entryPoint":2019,"id":419,"parameterSlots":1,"returnSlots":1},"@nft_175":{"entryPoint":823,"id":175,"parameterSlots":0,"returnSlots":0},"@onERC721Received_273":{"entryPoint":450,"id":273,"parameterSlots":5,"returnSlots":1},"@rewardToken_177":{"entryPoint":2230,"id":177,"parameterSlots":0,"returnSlots":0},"@stakes_182":{"entryPoint":2162,"id":182,"parameterSlots":0,"returnSlots":0},"@withdrawNft_320":{"entryPoint":1002,"id":320,"parameterSlots":1,"returnSlots":0},"@withdrawRewards_401":{"entryPoint":1453,"id":401,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":2349,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":2439,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_uint256":{"entryPoint":2403,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":2525,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256":{"entryPoint":2789,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":2747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes4_to_t_bytes4_fromStack":{"entryPoint":2705,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe_to_t_string_memory_ptr_fromStack":{"entryPoint":3246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308_to_t_string_memory_ptr_fromStack":{"entryPoint":3083,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af_to_t_string_memory_ptr_fromStack":{"entryPoint":2975,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2834,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":2762,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":3150,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed":{"entryPoint":2720,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3281,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3118,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3010,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":2849,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed":{"entryPoint":2876,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2917,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":3459,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":3508,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3360,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":2661,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2370,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3313,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":3412,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":2429,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":2424,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":2434,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":2271,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2266,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe":{"entryPoint":3205,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308":{"entryPoint":3042,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af":{"entryPoint":2934,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2326,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2380,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:9720:6","nodeType":"YulBlock","src":"0:9720:6","statements":[{"body":{"nativeSrc":"47:35:6","nodeType":"YulBlock","src":"47:35:6","statements":[{"nativeSrc":"57:19:6","nodeType":"YulAssignment","src":"57:19:6","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:6","nodeType":"YulLiteral","src":"73:2:6","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:6","nodeType":"YulIdentifier","src":"67:5:6"},"nativeSrc":"67:9:6","nodeType":"YulFunctionCall","src":"67:9:6"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:6","nodeType":"YulIdentifier","src":"57:6:6"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:6","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:6","nodeType":"YulTypedName","src":"40:6:6","type":""}],"src":"7:75:6"},{"body":{"nativeSrc":"177:28:6","nodeType":"YulBlock","src":"177:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:6","nodeType":"YulLiteral","src":"194:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:6","nodeType":"YulLiteral","src":"197:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:6","nodeType":"YulIdentifier","src":"187:6:6"},"nativeSrc":"187:12:6","nodeType":"YulFunctionCall","src":"187:12:6"},"nativeSrc":"187:12:6","nodeType":"YulExpressionStatement","src":"187:12:6"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:6","nodeType":"YulFunctionDefinition","src":"88:117:6"},{"body":{"nativeSrc":"300:28:6","nodeType":"YulBlock","src":"300:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:6","nodeType":"YulLiteral","src":"317:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:6","nodeType":"YulLiteral","src":"320:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:6","nodeType":"YulIdentifier","src":"310:6:6"},"nativeSrc":"310:12:6","nodeType":"YulFunctionCall","src":"310:12:6"},"nativeSrc":"310:12:6","nodeType":"YulExpressionStatement","src":"310:12:6"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:6","nodeType":"YulFunctionDefinition","src":"211:117:6"},{"body":{"nativeSrc":"379:81:6","nodeType":"YulBlock","src":"379:81:6","statements":[{"nativeSrc":"389:65:6","nodeType":"YulAssignment","src":"389:65:6","value":{"arguments":[{"name":"value","nativeSrc":"404:5:6","nodeType":"YulIdentifier","src":"404:5:6"},{"kind":"number","nativeSrc":"411:42:6","nodeType":"YulLiteral","src":"411:42:6","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:6","nodeType":"YulIdentifier","src":"400:3:6"},"nativeSrc":"400:54:6","nodeType":"YulFunctionCall","src":"400:54:6"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:6","nodeType":"YulIdentifier","src":"389:7:6"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:6","nodeType":"YulTypedName","src":"361:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:6","nodeType":"YulTypedName","src":"371:7:6","type":""}],"src":"334:126:6"},{"body":{"nativeSrc":"511:51:6","nodeType":"YulBlock","src":"511:51:6","statements":[{"nativeSrc":"521:35:6","nodeType":"YulAssignment","src":"521:35:6","value":{"arguments":[{"name":"value","nativeSrc":"550:5:6","nodeType":"YulIdentifier","src":"550:5:6"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:6","nodeType":"YulIdentifier","src":"532:17:6"},"nativeSrc":"532:24:6","nodeType":"YulFunctionCall","src":"532:24:6"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:6","nodeType":"YulIdentifier","src":"521:7:6"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:6","nodeType":"YulTypedName","src":"493:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:6","nodeType":"YulTypedName","src":"503:7:6","type":""}],"src":"466:96:6"},{"body":{"nativeSrc":"611:79:6","nodeType":"YulBlock","src":"611:79:6","statements":[{"body":{"nativeSrc":"668:16:6","nodeType":"YulBlock","src":"668:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:6","nodeType":"YulLiteral","src":"677:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:6","nodeType":"YulLiteral","src":"680:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:6","nodeType":"YulIdentifier","src":"670:6:6"},"nativeSrc":"670:12:6","nodeType":"YulFunctionCall","src":"670:12:6"},"nativeSrc":"670:12:6","nodeType":"YulExpressionStatement","src":"670:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:6","nodeType":"YulIdentifier","src":"634:5:6"},{"arguments":[{"name":"value","nativeSrc":"659:5:6","nodeType":"YulIdentifier","src":"659:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:6","nodeType":"YulIdentifier","src":"641:17:6"},"nativeSrc":"641:24:6","nodeType":"YulFunctionCall","src":"641:24:6"}],"functionName":{"name":"eq","nativeSrc":"631:2:6","nodeType":"YulIdentifier","src":"631:2:6"},"nativeSrc":"631:35:6","nodeType":"YulFunctionCall","src":"631:35:6"}],"functionName":{"name":"iszero","nativeSrc":"624:6:6","nodeType":"YulIdentifier","src":"624:6:6"},"nativeSrc":"624:43:6","nodeType":"YulFunctionCall","src":"624:43:6"},"nativeSrc":"621:63:6","nodeType":"YulIf","src":"621:63:6"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:6","nodeType":"YulTypedName","src":"604:5:6","type":""}],"src":"568:122:6"},{"body":{"nativeSrc":"748:87:6","nodeType":"YulBlock","src":"748:87:6","statements":[{"nativeSrc":"758:29:6","nodeType":"YulAssignment","src":"758:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:6","nodeType":"YulIdentifier","src":"780:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:6","nodeType":"YulIdentifier","src":"767:12:6"},"nativeSrc":"767:20:6","nodeType":"YulFunctionCall","src":"767:20:6"},"variableNames":[{"name":"value","nativeSrc":"758:5:6","nodeType":"YulIdentifier","src":"758:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:6","nodeType":"YulIdentifier","src":"823:5:6"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:6","nodeType":"YulIdentifier","src":"796:26:6"},"nativeSrc":"796:33:6","nodeType":"YulFunctionCall","src":"796:33:6"},"nativeSrc":"796:33:6","nodeType":"YulExpressionStatement","src":"796:33:6"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:6","nodeType":"YulTypedName","src":"726:6:6","type":""},{"name":"end","nativeSrc":"734:3:6","nodeType":"YulTypedName","src":"734:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:6","nodeType":"YulTypedName","src":"742:5:6","type":""}],"src":"696:139:6"},{"body":{"nativeSrc":"886:32:6","nodeType":"YulBlock","src":"886:32:6","statements":[{"nativeSrc":"896:16:6","nodeType":"YulAssignment","src":"896:16:6","value":{"name":"value","nativeSrc":"907:5:6","nodeType":"YulIdentifier","src":"907:5:6"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:6","nodeType":"YulIdentifier","src":"896:7:6"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:6","nodeType":"YulTypedName","src":"868:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:6","nodeType":"YulTypedName","src":"878:7:6","type":""}],"src":"841:77:6"},{"body":{"nativeSrc":"967:79:6","nodeType":"YulBlock","src":"967:79:6","statements":[{"body":{"nativeSrc":"1024:16:6","nodeType":"YulBlock","src":"1024:16:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:6","nodeType":"YulLiteral","src":"1033:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:6","nodeType":"YulLiteral","src":"1036:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:6","nodeType":"YulIdentifier","src":"1026:6:6"},"nativeSrc":"1026:12:6","nodeType":"YulFunctionCall","src":"1026:12:6"},"nativeSrc":"1026:12:6","nodeType":"YulExpressionStatement","src":"1026:12:6"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:6","nodeType":"YulIdentifier","src":"990:5:6"},{"arguments":[{"name":"value","nativeSrc":"1015:5:6","nodeType":"YulIdentifier","src":"1015:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:6","nodeType":"YulIdentifier","src":"997:17:6"},"nativeSrc":"997:24:6","nodeType":"YulFunctionCall","src":"997:24:6"}],"functionName":{"name":"eq","nativeSrc":"987:2:6","nodeType":"YulIdentifier","src":"987:2:6"},"nativeSrc":"987:35:6","nodeType":"YulFunctionCall","src":"987:35:6"}],"functionName":{"name":"iszero","nativeSrc":"980:6:6","nodeType":"YulIdentifier","src":"980:6:6"},"nativeSrc":"980:43:6","nodeType":"YulFunctionCall","src":"980:43:6"},"nativeSrc":"977:63:6","nodeType":"YulIf","src":"977:63:6"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:6","nodeType":"YulTypedName","src":"960:5:6","type":""}],"src":"924:122:6"},{"body":{"nativeSrc":"1104:87:6","nodeType":"YulBlock","src":"1104:87:6","statements":[{"nativeSrc":"1114:29:6","nodeType":"YulAssignment","src":"1114:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:6","nodeType":"YulIdentifier","src":"1136:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:6","nodeType":"YulIdentifier","src":"1123:12:6"},"nativeSrc":"1123:20:6","nodeType":"YulFunctionCall","src":"1123:20:6"},"variableNames":[{"name":"value","nativeSrc":"1114:5:6","nodeType":"YulIdentifier","src":"1114:5:6"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:6","nodeType":"YulIdentifier","src":"1179:5:6"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:6","nodeType":"YulIdentifier","src":"1152:26:6"},"nativeSrc":"1152:33:6","nodeType":"YulFunctionCall","src":"1152:33:6"},"nativeSrc":"1152:33:6","nodeType":"YulExpressionStatement","src":"1152:33:6"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:6","nodeType":"YulTypedName","src":"1082:6:6","type":""},{"name":"end","nativeSrc":"1090:3:6","nodeType":"YulTypedName","src":"1090:3:6","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:6","nodeType":"YulTypedName","src":"1098:5:6","type":""}],"src":"1052:139:6"},{"body":{"nativeSrc":"1286:28:6","nodeType":"YulBlock","src":"1286:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1303:1:6","nodeType":"YulLiteral","src":"1303:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1306:1:6","nodeType":"YulLiteral","src":"1306:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1296:6:6","nodeType":"YulIdentifier","src":"1296:6:6"},"nativeSrc":"1296:12:6","nodeType":"YulFunctionCall","src":"1296:12:6"},"nativeSrc":"1296:12:6","nodeType":"YulExpressionStatement","src":"1296:12:6"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1197:117:6","nodeType":"YulFunctionDefinition","src":"1197:117:6"},{"body":{"nativeSrc":"1409:28:6","nodeType":"YulBlock","src":"1409:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1426:1:6","nodeType":"YulLiteral","src":"1426:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1429:1:6","nodeType":"YulLiteral","src":"1429:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1419:6:6","nodeType":"YulIdentifier","src":"1419:6:6"},"nativeSrc":"1419:12:6","nodeType":"YulFunctionCall","src":"1419:12:6"},"nativeSrc":"1419:12:6","nodeType":"YulExpressionStatement","src":"1419:12:6"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"1320:117:6","nodeType":"YulFunctionDefinition","src":"1320:117:6"},{"body":{"nativeSrc":"1532:28:6","nodeType":"YulBlock","src":"1532:28:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1549:1:6","nodeType":"YulLiteral","src":"1549:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"1552:1:6","nodeType":"YulLiteral","src":"1552:1:6","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1542:6:6","nodeType":"YulIdentifier","src":"1542:6:6"},"nativeSrc":"1542:12:6","nodeType":"YulFunctionCall","src":"1542:12:6"},"nativeSrc":"1542:12:6","nodeType":"YulExpressionStatement","src":"1542:12:6"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"1443:117:6","nodeType":"YulFunctionDefinition","src":"1443:117:6"},{"body":{"nativeSrc":"1653:478:6","nodeType":"YulBlock","src":"1653:478:6","statements":[{"body":{"nativeSrc":"1702:83:6","nodeType":"YulBlock","src":"1702:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"1704:77:6","nodeType":"YulIdentifier","src":"1704:77:6"},"nativeSrc":"1704:79:6","nodeType":"YulFunctionCall","src":"1704:79:6"},"nativeSrc":"1704:79:6","nodeType":"YulExpressionStatement","src":"1704:79:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"1681:6:6","nodeType":"YulIdentifier","src":"1681:6:6"},{"kind":"number","nativeSrc":"1689:4:6","nodeType":"YulLiteral","src":"1689:4:6","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"1677:3:6","nodeType":"YulIdentifier","src":"1677:3:6"},"nativeSrc":"1677:17:6","nodeType":"YulFunctionCall","src":"1677:17:6"},{"name":"end","nativeSrc":"1696:3:6","nodeType":"YulIdentifier","src":"1696:3:6"}],"functionName":{"name":"slt","nativeSrc":"1673:3:6","nodeType":"YulIdentifier","src":"1673:3:6"},"nativeSrc":"1673:27:6","nodeType":"YulFunctionCall","src":"1673:27:6"}],"functionName":{"name":"iszero","nativeSrc":"1666:6:6","nodeType":"YulIdentifier","src":"1666:6:6"},"nativeSrc":"1666:35:6","nodeType":"YulFunctionCall","src":"1666:35:6"},"nativeSrc":"1663:122:6","nodeType":"YulIf","src":"1663:122:6"},{"nativeSrc":"1794:30:6","nodeType":"YulAssignment","src":"1794:30:6","value":{"arguments":[{"name":"offset","nativeSrc":"1817:6:6","nodeType":"YulIdentifier","src":"1817:6:6"}],"functionName":{"name":"calldataload","nativeSrc":"1804:12:6","nodeType":"YulIdentifier","src":"1804:12:6"},"nativeSrc":"1804:20:6","nodeType":"YulFunctionCall","src":"1804:20:6"},"variableNames":[{"name":"length","nativeSrc":"1794:6:6","nodeType":"YulIdentifier","src":"1794:6:6"}]},{"body":{"nativeSrc":"1867:83:6","nodeType":"YulBlock","src":"1867:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"1869:77:6","nodeType":"YulIdentifier","src":"1869:77:6"},"nativeSrc":"1869:79:6","nodeType":"YulFunctionCall","src":"1869:79:6"},"nativeSrc":"1869:79:6","nodeType":"YulExpressionStatement","src":"1869:79:6"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"1839:6:6","nodeType":"YulIdentifier","src":"1839:6:6"},{"kind":"number","nativeSrc":"1847:18:6","nodeType":"YulLiteral","src":"1847:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"1836:2:6","nodeType":"YulIdentifier","src":"1836:2:6"},"nativeSrc":"1836:30:6","nodeType":"YulFunctionCall","src":"1836:30:6"},"nativeSrc":"1833:117:6","nodeType":"YulIf","src":"1833:117:6"},{"nativeSrc":"1959:29:6","nodeType":"YulAssignment","src":"1959:29:6","value":{"arguments":[{"name":"offset","nativeSrc":"1975:6:6","nodeType":"YulIdentifier","src":"1975:6:6"},{"kind":"number","nativeSrc":"1983:4:6","nodeType":"YulLiteral","src":"1983:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1971:3:6","nodeType":"YulIdentifier","src":"1971:3:6"},"nativeSrc":"1971:17:6","nodeType":"YulFunctionCall","src":"1971:17:6"},"variableNames":[{"name":"arrayPos","nativeSrc":"1959:8:6","nodeType":"YulIdentifier","src":"1959:8:6"}]},{"body":{"nativeSrc":"2042:83:6","nodeType":"YulBlock","src":"2042:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"2044:77:6","nodeType":"YulIdentifier","src":"2044:77:6"},"nativeSrc":"2044:79:6","nodeType":"YulFunctionCall","src":"2044:79:6"},"nativeSrc":"2044:79:6","nodeType":"YulExpressionStatement","src":"2044:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"2007:8:6","nodeType":"YulIdentifier","src":"2007:8:6"},{"arguments":[{"name":"length","nativeSrc":"2021:6:6","nodeType":"YulIdentifier","src":"2021:6:6"},{"kind":"number","nativeSrc":"2029:4:6","nodeType":"YulLiteral","src":"2029:4:6","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"2017:3:6","nodeType":"YulIdentifier","src":"2017:3:6"},"nativeSrc":"2017:17:6","nodeType":"YulFunctionCall","src":"2017:17:6"}],"functionName":{"name":"add","nativeSrc":"2003:3:6","nodeType":"YulIdentifier","src":"2003:3:6"},"nativeSrc":"2003:32:6","nodeType":"YulFunctionCall","src":"2003:32:6"},{"name":"end","nativeSrc":"2037:3:6","nodeType":"YulIdentifier","src":"2037:3:6"}],"functionName":{"name":"gt","nativeSrc":"2000:2:6","nodeType":"YulIdentifier","src":"2000:2:6"},"nativeSrc":"2000:41:6","nodeType":"YulFunctionCall","src":"2000:41:6"},"nativeSrc":"1997:128:6","nodeType":"YulIf","src":"1997:128:6"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"1579:552:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1620:6:6","nodeType":"YulTypedName","src":"1620:6:6","type":""},{"name":"end","nativeSrc":"1628:3:6","nodeType":"YulTypedName","src":"1628:3:6","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"1636:8:6","nodeType":"YulTypedName","src":"1636:8:6","type":""},{"name":"length","nativeSrc":"1646:6:6","nodeType":"YulTypedName","src":"1646:6:6","type":""}],"src":"1579:552:6"},{"body":{"nativeSrc":"2273:827:6","nodeType":"YulBlock","src":"2273:827:6","statements":[{"body":{"nativeSrc":"2320:83:6","nodeType":"YulBlock","src":"2320:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2322:77:6","nodeType":"YulIdentifier","src":"2322:77:6"},"nativeSrc":"2322:79:6","nodeType":"YulFunctionCall","src":"2322:79:6"},"nativeSrc":"2322:79:6","nodeType":"YulExpressionStatement","src":"2322:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2294:7:6","nodeType":"YulIdentifier","src":"2294:7:6"},{"name":"headStart","nativeSrc":"2303:9:6","nodeType":"YulIdentifier","src":"2303:9:6"}],"functionName":{"name":"sub","nativeSrc":"2290:3:6","nodeType":"YulIdentifier","src":"2290:3:6"},"nativeSrc":"2290:23:6","nodeType":"YulFunctionCall","src":"2290:23:6"},{"kind":"number","nativeSrc":"2315:3:6","nodeType":"YulLiteral","src":"2315:3:6","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"2286:3:6","nodeType":"YulIdentifier","src":"2286:3:6"},"nativeSrc":"2286:33:6","nodeType":"YulFunctionCall","src":"2286:33:6"},"nativeSrc":"2283:120:6","nodeType":"YulIf","src":"2283:120:6"},{"nativeSrc":"2413:117:6","nodeType":"YulBlock","src":"2413:117:6","statements":[{"nativeSrc":"2428:15:6","nodeType":"YulVariableDeclaration","src":"2428:15:6","value":{"kind":"number","nativeSrc":"2442:1:6","nodeType":"YulLiteral","src":"2442:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2432:6:6","nodeType":"YulTypedName","src":"2432:6:6","type":""}]},{"nativeSrc":"2457:63:6","nodeType":"YulAssignment","src":"2457:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2492:9:6","nodeType":"YulIdentifier","src":"2492:9:6"},{"name":"offset","nativeSrc":"2503:6:6","nodeType":"YulIdentifier","src":"2503:6:6"}],"functionName":{"name":"add","nativeSrc":"2488:3:6","nodeType":"YulIdentifier","src":"2488:3:6"},"nativeSrc":"2488:22:6","nodeType":"YulFunctionCall","src":"2488:22:6"},{"name":"dataEnd","nativeSrc":"2512:7:6","nodeType":"YulIdentifier","src":"2512:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2467:20:6","nodeType":"YulIdentifier","src":"2467:20:6"},"nativeSrc":"2467:53:6","nodeType":"YulFunctionCall","src":"2467:53:6"},"variableNames":[{"name":"value0","nativeSrc":"2457:6:6","nodeType":"YulIdentifier","src":"2457:6:6"}]}]},{"nativeSrc":"2540:118:6","nodeType":"YulBlock","src":"2540:118:6","statements":[{"nativeSrc":"2555:16:6","nodeType":"YulVariableDeclaration","src":"2555:16:6","value":{"kind":"number","nativeSrc":"2569:2:6","nodeType":"YulLiteral","src":"2569:2:6","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2559:6:6","nodeType":"YulTypedName","src":"2559:6:6","type":""}]},{"nativeSrc":"2585:63:6","nodeType":"YulAssignment","src":"2585:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2620:9:6","nodeType":"YulIdentifier","src":"2620:9:6"},{"name":"offset","nativeSrc":"2631:6:6","nodeType":"YulIdentifier","src":"2631:6:6"}],"functionName":{"name":"add","nativeSrc":"2616:3:6","nodeType":"YulIdentifier","src":"2616:3:6"},"nativeSrc":"2616:22:6","nodeType":"YulFunctionCall","src":"2616:22:6"},{"name":"dataEnd","nativeSrc":"2640:7:6","nodeType":"YulIdentifier","src":"2640:7:6"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2595:20:6","nodeType":"YulIdentifier","src":"2595:20:6"},"nativeSrc":"2595:53:6","nodeType":"YulFunctionCall","src":"2595:53:6"},"variableNames":[{"name":"value1","nativeSrc":"2585:6:6","nodeType":"YulIdentifier","src":"2585:6:6"}]}]},{"nativeSrc":"2668:118:6","nodeType":"YulBlock","src":"2668:118:6","statements":[{"nativeSrc":"2683:16:6","nodeType":"YulVariableDeclaration","src":"2683:16:6","value":{"kind":"number","nativeSrc":"2697:2:6","nodeType":"YulLiteral","src":"2697:2:6","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2687:6:6","nodeType":"YulTypedName","src":"2687:6:6","type":""}]},{"nativeSrc":"2713:63:6","nodeType":"YulAssignment","src":"2713:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2748:9:6","nodeType":"YulIdentifier","src":"2748:9:6"},{"name":"offset","nativeSrc":"2759:6:6","nodeType":"YulIdentifier","src":"2759:6:6"}],"functionName":{"name":"add","nativeSrc":"2744:3:6","nodeType":"YulIdentifier","src":"2744:3:6"},"nativeSrc":"2744:22:6","nodeType":"YulFunctionCall","src":"2744:22:6"},{"name":"dataEnd","nativeSrc":"2768:7:6","nodeType":"YulIdentifier","src":"2768:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2723:20:6","nodeType":"YulIdentifier","src":"2723:20:6"},"nativeSrc":"2723:53:6","nodeType":"YulFunctionCall","src":"2723:53:6"},"variableNames":[{"name":"value2","nativeSrc":"2713:6:6","nodeType":"YulIdentifier","src":"2713:6:6"}]}]},{"nativeSrc":"2796:297:6","nodeType":"YulBlock","src":"2796:297:6","statements":[{"nativeSrc":"2811:46:6","nodeType":"YulVariableDeclaration","src":"2811:46:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2842:9:6","nodeType":"YulIdentifier","src":"2842:9:6"},{"kind":"number","nativeSrc":"2853:2:6","nodeType":"YulLiteral","src":"2853:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2838:3:6","nodeType":"YulIdentifier","src":"2838:3:6"},"nativeSrc":"2838:18:6","nodeType":"YulFunctionCall","src":"2838:18:6"}],"functionName":{"name":"calldataload","nativeSrc":"2825:12:6","nodeType":"YulIdentifier","src":"2825:12:6"},"nativeSrc":"2825:32:6","nodeType":"YulFunctionCall","src":"2825:32:6"},"variables":[{"name":"offset","nativeSrc":"2815:6:6","nodeType":"YulTypedName","src":"2815:6:6","type":""}]},{"body":{"nativeSrc":"2904:83:6","nodeType":"YulBlock","src":"2904:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"2906:77:6","nodeType":"YulIdentifier","src":"2906:77:6"},"nativeSrc":"2906:79:6","nodeType":"YulFunctionCall","src":"2906:79:6"},"nativeSrc":"2906:79:6","nodeType":"YulExpressionStatement","src":"2906:79:6"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"2876:6:6","nodeType":"YulIdentifier","src":"2876:6:6"},{"kind":"number","nativeSrc":"2884:18:6","nodeType":"YulLiteral","src":"2884:18:6","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2873:2:6","nodeType":"YulIdentifier","src":"2873:2:6"},"nativeSrc":"2873:30:6","nodeType":"YulFunctionCall","src":"2873:30:6"},"nativeSrc":"2870:117:6","nodeType":"YulIf","src":"2870:117:6"},{"nativeSrc":"3001:82:6","nodeType":"YulAssignment","src":"3001:82:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3055:9:6","nodeType":"YulIdentifier","src":"3055:9:6"},{"name":"offset","nativeSrc":"3066:6:6","nodeType":"YulIdentifier","src":"3066:6:6"}],"functionName":{"name":"add","nativeSrc":"3051:3:6","nodeType":"YulIdentifier","src":"3051:3:6"},"nativeSrc":"3051:22:6","nodeType":"YulFunctionCall","src":"3051:22:6"},{"name":"dataEnd","nativeSrc":"3075:7:6","nodeType":"YulIdentifier","src":"3075:7:6"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"3019:31:6","nodeType":"YulIdentifier","src":"3019:31:6"},"nativeSrc":"3019:64:6","nodeType":"YulFunctionCall","src":"3019:64:6"},"variableNames":[{"name":"value3","nativeSrc":"3001:6:6","nodeType":"YulIdentifier","src":"3001:6:6"},{"name":"value4","nativeSrc":"3009:6:6","nodeType":"YulIdentifier","src":"3009:6:6"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"2137:963:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2211:9:6","nodeType":"YulTypedName","src":"2211:9:6","type":""},{"name":"dataEnd","nativeSrc":"2222:7:6","nodeType":"YulTypedName","src":"2222:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2234:6:6","nodeType":"YulTypedName","src":"2234:6:6","type":""},{"name":"value1","nativeSrc":"2242:6:6","nodeType":"YulTypedName","src":"2242:6:6","type":""},{"name":"value2","nativeSrc":"2250:6:6","nodeType":"YulTypedName","src":"2250:6:6","type":""},{"name":"value3","nativeSrc":"2258:6:6","nodeType":"YulTypedName","src":"2258:6:6","type":""},{"name":"value4","nativeSrc":"2266:6:6","nodeType":"YulTypedName","src":"2266:6:6","type":""}],"src":"2137:963:6"},{"body":{"nativeSrc":"3150:105:6","nodeType":"YulBlock","src":"3150:105:6","statements":[{"nativeSrc":"3160:89:6","nodeType":"YulAssignment","src":"3160:89:6","value":{"arguments":[{"name":"value","nativeSrc":"3175:5:6","nodeType":"YulIdentifier","src":"3175:5:6"},{"kind":"number","nativeSrc":"3182:66:6","nodeType":"YulLiteral","src":"3182:66:6","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"3171:3:6","nodeType":"YulIdentifier","src":"3171:3:6"},"nativeSrc":"3171:78:6","nodeType":"YulFunctionCall","src":"3171:78:6"},"variableNames":[{"name":"cleaned","nativeSrc":"3160:7:6","nodeType":"YulIdentifier","src":"3160:7:6"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"3106:149:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3132:5:6","nodeType":"YulTypedName","src":"3132:5:6","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3142:7:6","nodeType":"YulTypedName","src":"3142:7:6","type":""}],"src":"3106:149:6"},{"body":{"nativeSrc":"3324:52:6","nodeType":"YulBlock","src":"3324:52:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3341:3:6","nodeType":"YulIdentifier","src":"3341:3:6"},{"arguments":[{"name":"value","nativeSrc":"3363:5:6","nodeType":"YulIdentifier","src":"3363:5:6"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"3346:16:6","nodeType":"YulIdentifier","src":"3346:16:6"},"nativeSrc":"3346:23:6","nodeType":"YulFunctionCall","src":"3346:23:6"}],"functionName":{"name":"mstore","nativeSrc":"3334:6:6","nodeType":"YulIdentifier","src":"3334:6:6"},"nativeSrc":"3334:36:6","nodeType":"YulFunctionCall","src":"3334:36:6"},"nativeSrc":"3334:36:6","nodeType":"YulExpressionStatement","src":"3334:36:6"}]},"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"3261:115:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3312:5:6","nodeType":"YulTypedName","src":"3312:5:6","type":""},{"name":"pos","nativeSrc":"3319:3:6","nodeType":"YulTypedName","src":"3319:3:6","type":""}],"src":"3261:115:6"},{"body":{"nativeSrc":"3478:122:6","nodeType":"YulBlock","src":"3478:122:6","statements":[{"nativeSrc":"3488:26:6","nodeType":"YulAssignment","src":"3488:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"3500:9:6","nodeType":"YulIdentifier","src":"3500:9:6"},{"kind":"number","nativeSrc":"3511:2:6","nodeType":"YulLiteral","src":"3511:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3496:3:6","nodeType":"YulIdentifier","src":"3496:3:6"},"nativeSrc":"3496:18:6","nodeType":"YulFunctionCall","src":"3496:18:6"},"variableNames":[{"name":"tail","nativeSrc":"3488:4:6","nodeType":"YulIdentifier","src":"3488:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3566:6:6","nodeType":"YulIdentifier","src":"3566:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"3579:9:6","nodeType":"YulIdentifier","src":"3579:9:6"},{"kind":"number","nativeSrc":"3590:1:6","nodeType":"YulLiteral","src":"3590:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3575:3:6","nodeType":"YulIdentifier","src":"3575:3:6"},"nativeSrc":"3575:17:6","nodeType":"YulFunctionCall","src":"3575:17:6"}],"functionName":{"name":"abi_encode_t_bytes4_to_t_bytes4_fromStack","nativeSrc":"3524:41:6","nodeType":"YulIdentifier","src":"3524:41:6"},"nativeSrc":"3524:69:6","nodeType":"YulFunctionCall","src":"3524:69:6"},"nativeSrc":"3524:69:6","nodeType":"YulExpressionStatement","src":"3524:69:6"}]},"name":"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed","nativeSrc":"3382:218:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3450:9:6","nodeType":"YulTypedName","src":"3450:9:6","type":""},{"name":"value0","nativeSrc":"3462:6:6","nodeType":"YulTypedName","src":"3462:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3473:4:6","nodeType":"YulTypedName","src":"3473:4:6","type":""}],"src":"3382:218:6"},{"body":{"nativeSrc":"3671:53:6","nodeType":"YulBlock","src":"3671:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3688:3:6","nodeType":"YulIdentifier","src":"3688:3:6"},{"arguments":[{"name":"value","nativeSrc":"3711:5:6","nodeType":"YulIdentifier","src":"3711:5:6"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3693:17:6","nodeType":"YulIdentifier","src":"3693:17:6"},"nativeSrc":"3693:24:6","nodeType":"YulFunctionCall","src":"3693:24:6"}],"functionName":{"name":"mstore","nativeSrc":"3681:6:6","nodeType":"YulIdentifier","src":"3681:6:6"},"nativeSrc":"3681:37:6","nodeType":"YulFunctionCall","src":"3681:37:6"},"nativeSrc":"3681:37:6","nodeType":"YulExpressionStatement","src":"3681:37:6"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3606:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3659:5:6","nodeType":"YulTypedName","src":"3659:5:6","type":""},{"name":"pos","nativeSrc":"3666:3:6","nodeType":"YulTypedName","src":"3666:3:6","type":""}],"src":"3606:118:6"},{"body":{"nativeSrc":"3828:124:6","nodeType":"YulBlock","src":"3828:124:6","statements":[{"nativeSrc":"3838:26:6","nodeType":"YulAssignment","src":"3838:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"3850:9:6","nodeType":"YulIdentifier","src":"3850:9:6"},{"kind":"number","nativeSrc":"3861:2:6","nodeType":"YulLiteral","src":"3861:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3846:3:6","nodeType":"YulIdentifier","src":"3846:3:6"},"nativeSrc":"3846:18:6","nodeType":"YulFunctionCall","src":"3846:18:6"},"variableNames":[{"name":"tail","nativeSrc":"3838:4:6","nodeType":"YulIdentifier","src":"3838:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"3918:6:6","nodeType":"YulIdentifier","src":"3918:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"3931:9:6","nodeType":"YulIdentifier","src":"3931:9:6"},{"kind":"number","nativeSrc":"3942:1:6","nodeType":"YulLiteral","src":"3942:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3927:3:6","nodeType":"YulIdentifier","src":"3927:3:6"},"nativeSrc":"3927:17:6","nodeType":"YulFunctionCall","src":"3927:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3874:43:6","nodeType":"YulIdentifier","src":"3874:43:6"},"nativeSrc":"3874:71:6","nodeType":"YulFunctionCall","src":"3874:71:6"},"nativeSrc":"3874:71:6","nodeType":"YulExpressionStatement","src":"3874:71:6"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3730:222:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3800:9:6","nodeType":"YulTypedName","src":"3800:9:6","type":""},{"name":"value0","nativeSrc":"3812:6:6","nodeType":"YulTypedName","src":"3812:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3823:4:6","nodeType":"YulTypedName","src":"3823:4:6","type":""}],"src":"3730:222:6"},{"body":{"nativeSrc":"4024:263:6","nodeType":"YulBlock","src":"4024:263:6","statements":[{"body":{"nativeSrc":"4070:83:6","nodeType":"YulBlock","src":"4070:83:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4072:77:6","nodeType":"YulIdentifier","src":"4072:77:6"},"nativeSrc":"4072:79:6","nodeType":"YulFunctionCall","src":"4072:79:6"},"nativeSrc":"4072:79:6","nodeType":"YulExpressionStatement","src":"4072:79:6"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4045:7:6","nodeType":"YulIdentifier","src":"4045:7:6"},{"name":"headStart","nativeSrc":"4054:9:6","nodeType":"YulIdentifier","src":"4054:9:6"}],"functionName":{"name":"sub","nativeSrc":"4041:3:6","nodeType":"YulIdentifier","src":"4041:3:6"},"nativeSrc":"4041:23:6","nodeType":"YulFunctionCall","src":"4041:23:6"},{"kind":"number","nativeSrc":"4066:2:6","nodeType":"YulLiteral","src":"4066:2:6","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"4037:3:6","nodeType":"YulIdentifier","src":"4037:3:6"},"nativeSrc":"4037:32:6","nodeType":"YulFunctionCall","src":"4037:32:6"},"nativeSrc":"4034:119:6","nodeType":"YulIf","src":"4034:119:6"},{"nativeSrc":"4163:117:6","nodeType":"YulBlock","src":"4163:117:6","statements":[{"nativeSrc":"4178:15:6","nodeType":"YulVariableDeclaration","src":"4178:15:6","value":{"kind":"number","nativeSrc":"4192:1:6","nodeType":"YulLiteral","src":"4192:1:6","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4182:6:6","nodeType":"YulTypedName","src":"4182:6:6","type":""}]},{"nativeSrc":"4207:63:6","nodeType":"YulAssignment","src":"4207:63:6","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4242:9:6","nodeType":"YulIdentifier","src":"4242:9:6"},{"name":"offset","nativeSrc":"4253:6:6","nodeType":"YulIdentifier","src":"4253:6:6"}],"functionName":{"name":"add","nativeSrc":"4238:3:6","nodeType":"YulIdentifier","src":"4238:3:6"},"nativeSrc":"4238:22:6","nodeType":"YulFunctionCall","src":"4238:22:6"},{"name":"dataEnd","nativeSrc":"4262:7:6","nodeType":"YulIdentifier","src":"4262:7:6"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4217:20:6","nodeType":"YulIdentifier","src":"4217:20:6"},"nativeSrc":"4217:53:6","nodeType":"YulFunctionCall","src":"4217:53:6"},"variableNames":[{"name":"value0","nativeSrc":"4207:6:6","nodeType":"YulIdentifier","src":"4207:6:6"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3958:329:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3994:9:6","nodeType":"YulTypedName","src":"3994:9:6","type":""},{"name":"dataEnd","nativeSrc":"4005:7:6","nodeType":"YulTypedName","src":"4005:7:6","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4017:6:6","nodeType":"YulTypedName","src":"4017:6:6","type":""}],"src":"3958:329:6"},{"body":{"nativeSrc":"4358:53:6","nodeType":"YulBlock","src":"4358:53:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4375:3:6","nodeType":"YulIdentifier","src":"4375:3:6"},{"arguments":[{"name":"value","nativeSrc":"4398:5:6","nodeType":"YulIdentifier","src":"4398:5:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4380:17:6","nodeType":"YulIdentifier","src":"4380:17:6"},"nativeSrc":"4380:24:6","nodeType":"YulFunctionCall","src":"4380:24:6"}],"functionName":{"name":"mstore","nativeSrc":"4368:6:6","nodeType":"YulIdentifier","src":"4368:6:6"},"nativeSrc":"4368:37:6","nodeType":"YulFunctionCall","src":"4368:37:6"},"nativeSrc":"4368:37:6","nodeType":"YulExpressionStatement","src":"4368:37:6"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4293:118:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4346:5:6","nodeType":"YulTypedName","src":"4346:5:6","type":""},{"name":"pos","nativeSrc":"4353:3:6","nodeType":"YulTypedName","src":"4353:3:6","type":""}],"src":"4293:118:6"},{"body":{"nativeSrc":"4515:124:6","nodeType":"YulBlock","src":"4515:124:6","statements":[{"nativeSrc":"4525:26:6","nodeType":"YulAssignment","src":"4525:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"4537:9:6","nodeType":"YulIdentifier","src":"4537:9:6"},{"kind":"number","nativeSrc":"4548:2:6","nodeType":"YulLiteral","src":"4548:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4533:3:6","nodeType":"YulIdentifier","src":"4533:3:6"},"nativeSrc":"4533:18:6","nodeType":"YulFunctionCall","src":"4533:18:6"},"variableNames":[{"name":"tail","nativeSrc":"4525:4:6","nodeType":"YulIdentifier","src":"4525:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4605:6:6","nodeType":"YulIdentifier","src":"4605:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"4618:9:6","nodeType":"YulIdentifier","src":"4618:9:6"},{"kind":"number","nativeSrc":"4629:1:6","nodeType":"YulLiteral","src":"4629:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4614:3:6","nodeType":"YulIdentifier","src":"4614:3:6"},"nativeSrc":"4614:17:6","nodeType":"YulFunctionCall","src":"4614:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4561:43:6","nodeType":"YulIdentifier","src":"4561:43:6"},"nativeSrc":"4561:71:6","nodeType":"YulFunctionCall","src":"4561:71:6"},"nativeSrc":"4561:71:6","nodeType":"YulExpressionStatement","src":"4561:71:6"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"4417:222:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4487:9:6","nodeType":"YulTypedName","src":"4487:9:6","type":""},{"name":"value0","nativeSrc":"4499:6:6","nodeType":"YulTypedName","src":"4499:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4510:4:6","nodeType":"YulTypedName","src":"4510:4:6","type":""}],"src":"4417:222:6"},{"body":{"nativeSrc":"4771:206:6","nodeType":"YulBlock","src":"4771:206:6","statements":[{"nativeSrc":"4781:26:6","nodeType":"YulAssignment","src":"4781:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"4793:9:6","nodeType":"YulIdentifier","src":"4793:9:6"},{"kind":"number","nativeSrc":"4804:2:6","nodeType":"YulLiteral","src":"4804:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"4789:3:6","nodeType":"YulIdentifier","src":"4789:3:6"},"nativeSrc":"4789:18:6","nodeType":"YulFunctionCall","src":"4789:18:6"},"variableNames":[{"name":"tail","nativeSrc":"4781:4:6","nodeType":"YulIdentifier","src":"4781:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4861:6:6","nodeType":"YulIdentifier","src":"4861:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"4874:9:6","nodeType":"YulIdentifier","src":"4874:9:6"},{"kind":"number","nativeSrc":"4885:1:6","nodeType":"YulLiteral","src":"4885:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4870:3:6","nodeType":"YulIdentifier","src":"4870:3:6"},"nativeSrc":"4870:17:6","nodeType":"YulFunctionCall","src":"4870:17:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"4817:43:6","nodeType":"YulIdentifier","src":"4817:43:6"},"nativeSrc":"4817:71:6","nodeType":"YulFunctionCall","src":"4817:71:6"},"nativeSrc":"4817:71:6","nodeType":"YulExpressionStatement","src":"4817:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"4942:6:6","nodeType":"YulIdentifier","src":"4942:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"4955:9:6","nodeType":"YulIdentifier","src":"4955:9:6"},{"kind":"number","nativeSrc":"4966:2:6","nodeType":"YulLiteral","src":"4966:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4951:3:6","nodeType":"YulIdentifier","src":"4951:3:6"},"nativeSrc":"4951:18:6","nodeType":"YulFunctionCall","src":"4951:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4898:43:6","nodeType":"YulIdentifier","src":"4898:43:6"},"nativeSrc":"4898:72:6","nodeType":"YulFunctionCall","src":"4898:72:6"},"nativeSrc":"4898:72:6","nodeType":"YulExpressionStatement","src":"4898:72:6"}]},"name":"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed","nativeSrc":"4645:332:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4735:9:6","nodeType":"YulTypedName","src":"4735:9:6","type":""},{"name":"value1","nativeSrc":"4747:6:6","nodeType":"YulTypedName","src":"4747:6:6","type":""},{"name":"value0","nativeSrc":"4755:6:6","nodeType":"YulTypedName","src":"4755:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4766:4:6","nodeType":"YulTypedName","src":"4766:4:6","type":""}],"src":"4645:332:6"},{"body":{"nativeSrc":"5079:73:6","nodeType":"YulBlock","src":"5079:73:6","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"5096:3:6","nodeType":"YulIdentifier","src":"5096:3:6"},{"name":"length","nativeSrc":"5101:6:6","nodeType":"YulIdentifier","src":"5101:6:6"}],"functionName":{"name":"mstore","nativeSrc":"5089:6:6","nodeType":"YulIdentifier","src":"5089:6:6"},"nativeSrc":"5089:19:6","nodeType":"YulFunctionCall","src":"5089:19:6"},"nativeSrc":"5089:19:6","nodeType":"YulExpressionStatement","src":"5089:19:6"},{"nativeSrc":"5117:29:6","nodeType":"YulAssignment","src":"5117:29:6","value":{"arguments":[{"name":"pos","nativeSrc":"5136:3:6","nodeType":"YulIdentifier","src":"5136:3:6"},{"kind":"number","nativeSrc":"5141:4:6","nodeType":"YulLiteral","src":"5141:4:6","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5132:3:6","nodeType":"YulIdentifier","src":"5132:3:6"},"nativeSrc":"5132:14:6","nodeType":"YulFunctionCall","src":"5132:14:6"},"variableNames":[{"name":"updated_pos","nativeSrc":"5117:11:6","nodeType":"YulIdentifier","src":"5117:11:6"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"4983:169:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5051:3:6","nodeType":"YulTypedName","src":"5051:3:6","type":""},{"name":"length","nativeSrc":"5056:6:6","nodeType":"YulTypedName","src":"5056:6:6","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"5067:11:6","nodeType":"YulTypedName","src":"5067:11:6","type":""}],"src":"4983:169:6"},{"body":{"nativeSrc":"5264:75:6","nodeType":"YulBlock","src":"5264:75:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"5286:6:6","nodeType":"YulIdentifier","src":"5286:6:6"},{"kind":"number","nativeSrc":"5294:1:6","nodeType":"YulLiteral","src":"5294:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5282:3:6","nodeType":"YulIdentifier","src":"5282:3:6"},"nativeSrc":"5282:14:6","nodeType":"YulFunctionCall","src":"5282:14:6"},{"hexValue":"5374616b696e673a20496e636f7272656374204e465420636f6e7472616374","kind":"string","nativeSrc":"5298:33:6","nodeType":"YulLiteral","src":"5298:33:6","type":"","value":"Staking: Incorrect NFT contract"}],"functionName":{"name":"mstore","nativeSrc":"5275:6:6","nodeType":"YulIdentifier","src":"5275:6:6"},"nativeSrc":"5275:57:6","nodeType":"YulFunctionCall","src":"5275:57:6"},"nativeSrc":"5275:57:6","nodeType":"YulExpressionStatement","src":"5275:57:6"}]},"name":"store_literal_in_memory_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af","nativeSrc":"5158:181:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"5256:6:6","nodeType":"YulTypedName","src":"5256:6:6","type":""}],"src":"5158:181:6"},{"body":{"nativeSrc":"5491:220:6","nodeType":"YulBlock","src":"5491:220:6","statements":[{"nativeSrc":"5501:74:6","nodeType":"YulAssignment","src":"5501:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"5567:3:6","nodeType":"YulIdentifier","src":"5567:3:6"},{"kind":"number","nativeSrc":"5572:2:6","nodeType":"YulLiteral","src":"5572:2:6","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"5508:58:6","nodeType":"YulIdentifier","src":"5508:58:6"},"nativeSrc":"5508:67:6","nodeType":"YulFunctionCall","src":"5508:67:6"},"variableNames":[{"name":"pos","nativeSrc":"5501:3:6","nodeType":"YulIdentifier","src":"5501:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"5673:3:6","nodeType":"YulIdentifier","src":"5673:3:6"}],"functionName":{"name":"store_literal_in_memory_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af","nativeSrc":"5584:88:6","nodeType":"YulIdentifier","src":"5584:88:6"},"nativeSrc":"5584:93:6","nodeType":"YulFunctionCall","src":"5584:93:6"},"nativeSrc":"5584:93:6","nodeType":"YulExpressionStatement","src":"5584:93:6"},{"nativeSrc":"5686:19:6","nodeType":"YulAssignment","src":"5686:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"5697:3:6","nodeType":"YulIdentifier","src":"5697:3:6"},{"kind":"number","nativeSrc":"5702:2:6","nodeType":"YulLiteral","src":"5702:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5693:3:6","nodeType":"YulIdentifier","src":"5693:3:6"},"nativeSrc":"5693:12:6","nodeType":"YulFunctionCall","src":"5693:12:6"},"variableNames":[{"name":"end","nativeSrc":"5686:3:6","nodeType":"YulIdentifier","src":"5686:3:6"}]}]},"name":"abi_encode_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af_to_t_string_memory_ptr_fromStack","nativeSrc":"5345:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"5479:3:6","nodeType":"YulTypedName","src":"5479:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5487:3:6","nodeType":"YulTypedName","src":"5487:3:6","type":""}],"src":"5345:366:6"},{"body":{"nativeSrc":"5888:248:6","nodeType":"YulBlock","src":"5888:248:6","statements":[{"nativeSrc":"5898:26:6","nodeType":"YulAssignment","src":"5898:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"5910:9:6","nodeType":"YulIdentifier","src":"5910:9:6"},{"kind":"number","nativeSrc":"5921:2:6","nodeType":"YulLiteral","src":"5921:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5906:3:6","nodeType":"YulIdentifier","src":"5906:3:6"},"nativeSrc":"5906:18:6","nodeType":"YulFunctionCall","src":"5906:18:6"},"variableNames":[{"name":"tail","nativeSrc":"5898:4:6","nodeType":"YulIdentifier","src":"5898:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5945:9:6","nodeType":"YulIdentifier","src":"5945:9:6"},{"kind":"number","nativeSrc":"5956:1:6","nodeType":"YulLiteral","src":"5956:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5941:3:6","nodeType":"YulIdentifier","src":"5941:3:6"},"nativeSrc":"5941:17:6","nodeType":"YulFunctionCall","src":"5941:17:6"},{"arguments":[{"name":"tail","nativeSrc":"5964:4:6","nodeType":"YulIdentifier","src":"5964:4:6"},{"name":"headStart","nativeSrc":"5970:9:6","nodeType":"YulIdentifier","src":"5970:9:6"}],"functionName":{"name":"sub","nativeSrc":"5960:3:6","nodeType":"YulIdentifier","src":"5960:3:6"},"nativeSrc":"5960:20:6","nodeType":"YulFunctionCall","src":"5960:20:6"}],"functionName":{"name":"mstore","nativeSrc":"5934:6:6","nodeType":"YulIdentifier","src":"5934:6:6"},"nativeSrc":"5934:47:6","nodeType":"YulFunctionCall","src":"5934:47:6"},"nativeSrc":"5934:47:6","nodeType":"YulExpressionStatement","src":"5934:47:6"},{"nativeSrc":"5990:139:6","nodeType":"YulAssignment","src":"5990:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"6124:4:6","nodeType":"YulIdentifier","src":"6124:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af_to_t_string_memory_ptr_fromStack","nativeSrc":"5998:124:6","nodeType":"YulIdentifier","src":"5998:124:6"},"nativeSrc":"5998:131:6","nodeType":"YulFunctionCall","src":"5998:131:6"},"variableNames":[{"name":"tail","nativeSrc":"5990:4:6","nodeType":"YulIdentifier","src":"5990:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"5717:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5868:9:6","nodeType":"YulTypedName","src":"5868:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"5883:4:6","nodeType":"YulTypedName","src":"5883:4:6","type":""}],"src":"5717:419:6"},{"body":{"nativeSrc":"6248:75:6","nodeType":"YulBlock","src":"6248:75:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"6270:6:6","nodeType":"YulIdentifier","src":"6270:6:6"},{"kind":"number","nativeSrc":"6278:1:6","nodeType":"YulLiteral","src":"6278:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6266:3:6","nodeType":"YulIdentifier","src":"6266:3:6"},"nativeSrc":"6266:14:6","nodeType":"YulFunctionCall","src":"6266:14:6"},{"hexValue":"5374616b696e673a204e6f7420746865206f726967696e616c206f776e6572","kind":"string","nativeSrc":"6282:33:6","nodeType":"YulLiteral","src":"6282:33:6","type":"","value":"Staking: Not the original owner"}],"functionName":{"name":"mstore","nativeSrc":"6259:6:6","nodeType":"YulIdentifier","src":"6259:6:6"},"nativeSrc":"6259:57:6","nodeType":"YulFunctionCall","src":"6259:57:6"},"nativeSrc":"6259:57:6","nodeType":"YulExpressionStatement","src":"6259:57:6"}]},"name":"store_literal_in_memory_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","nativeSrc":"6142:181:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"6240:6:6","nodeType":"YulTypedName","src":"6240:6:6","type":""}],"src":"6142:181:6"},{"body":{"nativeSrc":"6475:220:6","nodeType":"YulBlock","src":"6475:220:6","statements":[{"nativeSrc":"6485:74:6","nodeType":"YulAssignment","src":"6485:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"6551:3:6","nodeType":"YulIdentifier","src":"6551:3:6"},{"kind":"number","nativeSrc":"6556:2:6","nodeType":"YulLiteral","src":"6556:2:6","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6492:58:6","nodeType":"YulIdentifier","src":"6492:58:6"},"nativeSrc":"6492:67:6","nodeType":"YulFunctionCall","src":"6492:67:6"},"variableNames":[{"name":"pos","nativeSrc":"6485:3:6","nodeType":"YulIdentifier","src":"6485:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"6657:3:6","nodeType":"YulIdentifier","src":"6657:3:6"}],"functionName":{"name":"store_literal_in_memory_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308","nativeSrc":"6568:88:6","nodeType":"YulIdentifier","src":"6568:88:6"},"nativeSrc":"6568:93:6","nodeType":"YulFunctionCall","src":"6568:93:6"},"nativeSrc":"6568:93:6","nodeType":"YulExpressionStatement","src":"6568:93:6"},{"nativeSrc":"6670:19:6","nodeType":"YulAssignment","src":"6670:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"6681:3:6","nodeType":"YulIdentifier","src":"6681:3:6"},{"kind":"number","nativeSrc":"6686:2:6","nodeType":"YulLiteral","src":"6686:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6677:3:6","nodeType":"YulIdentifier","src":"6677:3:6"},"nativeSrc":"6677:12:6","nodeType":"YulFunctionCall","src":"6677:12:6"},"variableNames":[{"name":"end","nativeSrc":"6670:3:6","nodeType":"YulIdentifier","src":"6670:3:6"}]}]},"name":"abi_encode_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308_to_t_string_memory_ptr_fromStack","nativeSrc":"6329:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6463:3:6","nodeType":"YulTypedName","src":"6463:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"6471:3:6","nodeType":"YulTypedName","src":"6471:3:6","type":""}],"src":"6329:366:6"},{"body":{"nativeSrc":"6872:248:6","nodeType":"YulBlock","src":"6872:248:6","statements":[{"nativeSrc":"6882:26:6","nodeType":"YulAssignment","src":"6882:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"6894:9:6","nodeType":"YulIdentifier","src":"6894:9:6"},{"kind":"number","nativeSrc":"6905:2:6","nodeType":"YulLiteral","src":"6905:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6890:3:6","nodeType":"YulIdentifier","src":"6890:3:6"},"nativeSrc":"6890:18:6","nodeType":"YulFunctionCall","src":"6890:18:6"},"variableNames":[{"name":"tail","nativeSrc":"6882:4:6","nodeType":"YulIdentifier","src":"6882:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6929:9:6","nodeType":"YulIdentifier","src":"6929:9:6"},{"kind":"number","nativeSrc":"6940:1:6","nodeType":"YulLiteral","src":"6940:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6925:3:6","nodeType":"YulIdentifier","src":"6925:3:6"},"nativeSrc":"6925:17:6","nodeType":"YulFunctionCall","src":"6925:17:6"},{"arguments":[{"name":"tail","nativeSrc":"6948:4:6","nodeType":"YulIdentifier","src":"6948:4:6"},{"name":"headStart","nativeSrc":"6954:9:6","nodeType":"YulIdentifier","src":"6954:9:6"}],"functionName":{"name":"sub","nativeSrc":"6944:3:6","nodeType":"YulIdentifier","src":"6944:3:6"},"nativeSrc":"6944:20:6","nodeType":"YulFunctionCall","src":"6944:20:6"}],"functionName":{"name":"mstore","nativeSrc":"6918:6:6","nodeType":"YulIdentifier","src":"6918:6:6"},"nativeSrc":"6918:47:6","nodeType":"YulFunctionCall","src":"6918:47:6"},"nativeSrc":"6918:47:6","nodeType":"YulExpressionStatement","src":"6918:47:6"},{"nativeSrc":"6974:139:6","nodeType":"YulAssignment","src":"6974:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"7108:4:6","nodeType":"YulIdentifier","src":"7108:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308_to_t_string_memory_ptr_fromStack","nativeSrc":"6982:124:6","nodeType":"YulIdentifier","src":"6982:124:6"},"nativeSrc":"6982:131:6","nodeType":"YulFunctionCall","src":"6982:131:6"},"variableNames":[{"name":"tail","nativeSrc":"6974:4:6","nodeType":"YulIdentifier","src":"6974:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"6701:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6852:9:6","nodeType":"YulTypedName","src":"6852:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6867:4:6","nodeType":"YulTypedName","src":"6867:4:6","type":""}],"src":"6701:419:6"},{"body":{"nativeSrc":"7280:288:6","nodeType":"YulBlock","src":"7280:288:6","statements":[{"nativeSrc":"7290:26:6","nodeType":"YulAssignment","src":"7290:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"7302:9:6","nodeType":"YulIdentifier","src":"7302:9:6"},{"kind":"number","nativeSrc":"7313:2:6","nodeType":"YulLiteral","src":"7313:2:6","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"7298:3:6","nodeType":"YulIdentifier","src":"7298:3:6"},"nativeSrc":"7298:18:6","nodeType":"YulFunctionCall","src":"7298:18:6"},"variableNames":[{"name":"tail","nativeSrc":"7290:4:6","nodeType":"YulIdentifier","src":"7290:4:6"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7370:6:6","nodeType":"YulIdentifier","src":"7370:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7383:9:6","nodeType":"YulIdentifier","src":"7383:9:6"},{"kind":"number","nativeSrc":"7394:1:6","nodeType":"YulLiteral","src":"7394:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7379:3:6","nodeType":"YulIdentifier","src":"7379:3:6"},"nativeSrc":"7379:17:6","nodeType":"YulFunctionCall","src":"7379:17:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7326:43:6","nodeType":"YulIdentifier","src":"7326:43:6"},"nativeSrc":"7326:71:6","nodeType":"YulFunctionCall","src":"7326:71:6"},"nativeSrc":"7326:71:6","nodeType":"YulExpressionStatement","src":"7326:71:6"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"7451:6:6","nodeType":"YulIdentifier","src":"7451:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7464:9:6","nodeType":"YulIdentifier","src":"7464:9:6"},{"kind":"number","nativeSrc":"7475:2:6","nodeType":"YulLiteral","src":"7475:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7460:3:6","nodeType":"YulIdentifier","src":"7460:3:6"},"nativeSrc":"7460:18:6","nodeType":"YulFunctionCall","src":"7460:18:6"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"7407:43:6","nodeType":"YulIdentifier","src":"7407:43:6"},"nativeSrc":"7407:72:6","nodeType":"YulFunctionCall","src":"7407:72:6"},"nativeSrc":"7407:72:6","nodeType":"YulExpressionStatement","src":"7407:72:6"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"7533:6:6","nodeType":"YulIdentifier","src":"7533:6:6"},{"arguments":[{"name":"headStart","nativeSrc":"7546:9:6","nodeType":"YulIdentifier","src":"7546:9:6"},{"kind":"number","nativeSrc":"7557:2:6","nodeType":"YulLiteral","src":"7557:2:6","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"7542:3:6","nodeType":"YulIdentifier","src":"7542:3:6"},"nativeSrc":"7542:18:6","nodeType":"YulFunctionCall","src":"7542:18:6"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7489:43:6","nodeType":"YulIdentifier","src":"7489:43:6"},"nativeSrc":"7489:72:6","nodeType":"YulFunctionCall","src":"7489:72:6"},"nativeSrc":"7489:72:6","nodeType":"YulExpressionStatement","src":"7489:72:6"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nativeSrc":"7126:442:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7236:9:6","nodeType":"YulTypedName","src":"7236:9:6","type":""},{"name":"value2","nativeSrc":"7248:6:6","nodeType":"YulTypedName","src":"7248:6:6","type":""},{"name":"value1","nativeSrc":"7256:6:6","nodeType":"YulTypedName","src":"7256:6:6","type":""},{"name":"value0","nativeSrc":"7264:6:6","nodeType":"YulTypedName","src":"7264:6:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7275:4:6","nodeType":"YulTypedName","src":"7275:4:6","type":""}],"src":"7126:442:6"},{"body":{"nativeSrc":"7680:61:6","nodeType":"YulBlock","src":"7680:61:6","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"7702:6:6","nodeType":"YulIdentifier","src":"7702:6:6"},{"kind":"number","nativeSrc":"7710:1:6","nodeType":"YulLiteral","src":"7710:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7698:3:6","nodeType":"YulIdentifier","src":"7698:3:6"},"nativeSrc":"7698:14:6","nodeType":"YulFunctionCall","src":"7698:14:6"},{"hexValue":"4e4654206973206e6f74207374616b6564","kind":"string","nativeSrc":"7714:19:6","nodeType":"YulLiteral","src":"7714:19:6","type":"","value":"NFT is not staked"}],"functionName":{"name":"mstore","nativeSrc":"7691:6:6","nodeType":"YulIdentifier","src":"7691:6:6"},"nativeSrc":"7691:43:6","nodeType":"YulFunctionCall","src":"7691:43:6"},"nativeSrc":"7691:43:6","nodeType":"YulExpressionStatement","src":"7691:43:6"}]},"name":"store_literal_in_memory_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe","nativeSrc":"7574:167:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7672:6:6","nodeType":"YulTypedName","src":"7672:6:6","type":""}],"src":"7574:167:6"},{"body":{"nativeSrc":"7893:220:6","nodeType":"YulBlock","src":"7893:220:6","statements":[{"nativeSrc":"7903:74:6","nodeType":"YulAssignment","src":"7903:74:6","value":{"arguments":[{"name":"pos","nativeSrc":"7969:3:6","nodeType":"YulIdentifier","src":"7969:3:6"},{"kind":"number","nativeSrc":"7974:2:6","nodeType":"YulLiteral","src":"7974:2:6","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7910:58:6","nodeType":"YulIdentifier","src":"7910:58:6"},"nativeSrc":"7910:67:6","nodeType":"YulFunctionCall","src":"7910:67:6"},"variableNames":[{"name":"pos","nativeSrc":"7903:3:6","nodeType":"YulIdentifier","src":"7903:3:6"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"8075:3:6","nodeType":"YulIdentifier","src":"8075:3:6"}],"functionName":{"name":"store_literal_in_memory_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe","nativeSrc":"7986:88:6","nodeType":"YulIdentifier","src":"7986:88:6"},"nativeSrc":"7986:93:6","nodeType":"YulFunctionCall","src":"7986:93:6"},"nativeSrc":"7986:93:6","nodeType":"YulExpressionStatement","src":"7986:93:6"},{"nativeSrc":"8088:19:6","nodeType":"YulAssignment","src":"8088:19:6","value":{"arguments":[{"name":"pos","nativeSrc":"8099:3:6","nodeType":"YulIdentifier","src":"8099:3:6"},{"kind":"number","nativeSrc":"8104:2:6","nodeType":"YulLiteral","src":"8104:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8095:3:6","nodeType":"YulIdentifier","src":"8095:3:6"},"nativeSrc":"8095:12:6","nodeType":"YulFunctionCall","src":"8095:12:6"},"variableNames":[{"name":"end","nativeSrc":"8088:3:6","nodeType":"YulIdentifier","src":"8088:3:6"}]}]},"name":"abi_encode_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe_to_t_string_memory_ptr_fromStack","nativeSrc":"7747:366:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"7881:3:6","nodeType":"YulTypedName","src":"7881:3:6","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7889:3:6","nodeType":"YulTypedName","src":"7889:3:6","type":""}],"src":"7747:366:6"},{"body":{"nativeSrc":"8290:248:6","nodeType":"YulBlock","src":"8290:248:6","statements":[{"nativeSrc":"8300:26:6","nodeType":"YulAssignment","src":"8300:26:6","value":{"arguments":[{"name":"headStart","nativeSrc":"8312:9:6","nodeType":"YulIdentifier","src":"8312:9:6"},{"kind":"number","nativeSrc":"8323:2:6","nodeType":"YulLiteral","src":"8323:2:6","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8308:3:6","nodeType":"YulIdentifier","src":"8308:3:6"},"nativeSrc":"8308:18:6","nodeType":"YulFunctionCall","src":"8308:18:6"},"variableNames":[{"name":"tail","nativeSrc":"8300:4:6","nodeType":"YulIdentifier","src":"8300:4:6"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8347:9:6","nodeType":"YulIdentifier","src":"8347:9:6"},{"kind":"number","nativeSrc":"8358:1:6","nodeType":"YulLiteral","src":"8358:1:6","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8343:3:6","nodeType":"YulIdentifier","src":"8343:3:6"},"nativeSrc":"8343:17:6","nodeType":"YulFunctionCall","src":"8343:17:6"},{"arguments":[{"name":"tail","nativeSrc":"8366:4:6","nodeType":"YulIdentifier","src":"8366:4:6"},{"name":"headStart","nativeSrc":"8372:9:6","nodeType":"YulIdentifier","src":"8372:9:6"}],"functionName":{"name":"sub","nativeSrc":"8362:3:6","nodeType":"YulIdentifier","src":"8362:3:6"},"nativeSrc":"8362:20:6","nodeType":"YulFunctionCall","src":"8362:20:6"}],"functionName":{"name":"mstore","nativeSrc":"8336:6:6","nodeType":"YulIdentifier","src":"8336:6:6"},"nativeSrc":"8336:47:6","nodeType":"YulFunctionCall","src":"8336:47:6"},"nativeSrc":"8336:47:6","nodeType":"YulExpressionStatement","src":"8336:47:6"},{"nativeSrc":"8392:139:6","nodeType":"YulAssignment","src":"8392:139:6","value":{"arguments":[{"name":"tail","nativeSrc":"8526:4:6","nodeType":"YulIdentifier","src":"8526:4:6"}],"functionName":{"name":"abi_encode_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe_to_t_string_memory_ptr_fromStack","nativeSrc":"8400:124:6","nodeType":"YulIdentifier","src":"8400:124:6"},"nativeSrc":"8400:131:6","nodeType":"YulFunctionCall","src":"8400:131:6"},"variableNames":[{"name":"tail","nativeSrc":"8392:4:6","nodeType":"YulIdentifier","src":"8392:4:6"}]}]},"name":"abi_encode_tuple_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"8119:419:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8270:9:6","nodeType":"YulTypedName","src":"8270:9:6","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8285:4:6","nodeType":"YulTypedName","src":"8285:4:6","type":""}],"src":"8119:419:6"},{"body":{"nativeSrc":"8572:152:6","nodeType":"YulBlock","src":"8572:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8589:1:6","nodeType":"YulLiteral","src":"8589:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"8592:77:6","nodeType":"YulLiteral","src":"8592:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8582:6:6","nodeType":"YulIdentifier","src":"8582:6:6"},"nativeSrc":"8582:88:6","nodeType":"YulFunctionCall","src":"8582:88:6"},"nativeSrc":"8582:88:6","nodeType":"YulExpressionStatement","src":"8582:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8686:1:6","nodeType":"YulLiteral","src":"8686:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"8689:4:6","nodeType":"YulLiteral","src":"8689:4:6","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"8679:6:6","nodeType":"YulIdentifier","src":"8679:6:6"},"nativeSrc":"8679:15:6","nodeType":"YulFunctionCall","src":"8679:15:6"},"nativeSrc":"8679:15:6","nodeType":"YulExpressionStatement","src":"8679:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8710:1:6","nodeType":"YulLiteral","src":"8710:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"8713:4:6","nodeType":"YulLiteral","src":"8713:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8703:6:6","nodeType":"YulIdentifier","src":"8703:6:6"},"nativeSrc":"8703:15:6","nodeType":"YulFunctionCall","src":"8703:15:6"},"nativeSrc":"8703:15:6","nodeType":"YulExpressionStatement","src":"8703:15:6"}]},"name":"panic_error_0x11","nativeSrc":"8544:180:6","nodeType":"YulFunctionDefinition","src":"8544:180:6"},{"body":{"nativeSrc":"8775:149:6","nodeType":"YulBlock","src":"8775:149:6","statements":[{"nativeSrc":"8785:25:6","nodeType":"YulAssignment","src":"8785:25:6","value":{"arguments":[{"name":"x","nativeSrc":"8808:1:6","nodeType":"YulIdentifier","src":"8808:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8790:17:6","nodeType":"YulIdentifier","src":"8790:17:6"},"nativeSrc":"8790:20:6","nodeType":"YulFunctionCall","src":"8790:20:6"},"variableNames":[{"name":"x","nativeSrc":"8785:1:6","nodeType":"YulIdentifier","src":"8785:1:6"}]},{"nativeSrc":"8819:25:6","nodeType":"YulAssignment","src":"8819:25:6","value":{"arguments":[{"name":"y","nativeSrc":"8842:1:6","nodeType":"YulIdentifier","src":"8842:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"8824:17:6","nodeType":"YulIdentifier","src":"8824:17:6"},"nativeSrc":"8824:20:6","nodeType":"YulFunctionCall","src":"8824:20:6"},"variableNames":[{"name":"y","nativeSrc":"8819:1:6","nodeType":"YulIdentifier","src":"8819:1:6"}]},{"nativeSrc":"8853:17:6","nodeType":"YulAssignment","src":"8853:17:6","value":{"arguments":[{"name":"x","nativeSrc":"8865:1:6","nodeType":"YulIdentifier","src":"8865:1:6"},{"name":"y","nativeSrc":"8868:1:6","nodeType":"YulIdentifier","src":"8868:1:6"}],"functionName":{"name":"sub","nativeSrc":"8861:3:6","nodeType":"YulIdentifier","src":"8861:3:6"},"nativeSrc":"8861:9:6","nodeType":"YulFunctionCall","src":"8861:9:6"},"variableNames":[{"name":"diff","nativeSrc":"8853:4:6","nodeType":"YulIdentifier","src":"8853:4:6"}]},{"body":{"nativeSrc":"8895:22:6","nodeType":"YulBlock","src":"8895:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"8897:16:6","nodeType":"YulIdentifier","src":"8897:16:6"},"nativeSrc":"8897:18:6","nodeType":"YulFunctionCall","src":"8897:18:6"},"nativeSrc":"8897:18:6","nodeType":"YulExpressionStatement","src":"8897:18:6"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"8886:4:6","nodeType":"YulIdentifier","src":"8886:4:6"},{"name":"x","nativeSrc":"8892:1:6","nodeType":"YulIdentifier","src":"8892:1:6"}],"functionName":{"name":"gt","nativeSrc":"8883:2:6","nodeType":"YulIdentifier","src":"8883:2:6"},"nativeSrc":"8883:11:6","nodeType":"YulFunctionCall","src":"8883:11:6"},"nativeSrc":"8880:37:6","nodeType":"YulIf","src":"8880:37:6"}]},"name":"checked_sub_t_uint256","nativeSrc":"8730:194:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"8761:1:6","nodeType":"YulTypedName","src":"8761:1:6","type":""},{"name":"y","nativeSrc":"8764:1:6","nodeType":"YulTypedName","src":"8764:1:6","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"8770:4:6","nodeType":"YulTypedName","src":"8770:4:6","type":""}],"src":"8730:194:6"},{"body":{"nativeSrc":"8958:152:6","nodeType":"YulBlock","src":"8958:152:6","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8975:1:6","nodeType":"YulLiteral","src":"8975:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"8978:77:6","nodeType":"YulLiteral","src":"8978:77:6","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8968:6:6","nodeType":"YulIdentifier","src":"8968:6:6"},"nativeSrc":"8968:88:6","nodeType":"YulFunctionCall","src":"8968:88:6"},"nativeSrc":"8968:88:6","nodeType":"YulExpressionStatement","src":"8968:88:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9072:1:6","nodeType":"YulLiteral","src":"9072:1:6","type":"","value":"4"},{"kind":"number","nativeSrc":"9075:4:6","nodeType":"YulLiteral","src":"9075:4:6","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"9065:6:6","nodeType":"YulIdentifier","src":"9065:6:6"},"nativeSrc":"9065:15:6","nodeType":"YulFunctionCall","src":"9065:15:6"},"nativeSrc":"9065:15:6","nodeType":"YulExpressionStatement","src":"9065:15:6"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9096:1:6","nodeType":"YulLiteral","src":"9096:1:6","type":"","value":"0"},{"kind":"number","nativeSrc":"9099:4:6","nodeType":"YulLiteral","src":"9099:4:6","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"9089:6:6","nodeType":"YulIdentifier","src":"9089:6:6"},"nativeSrc":"9089:15:6","nodeType":"YulFunctionCall","src":"9089:15:6"},"nativeSrc":"9089:15:6","nodeType":"YulExpressionStatement","src":"9089:15:6"}]},"name":"panic_error_0x12","nativeSrc":"8930:180:6","nodeType":"YulFunctionDefinition","src":"8930:180:6"},{"body":{"nativeSrc":"9158:143:6","nodeType":"YulBlock","src":"9158:143:6","statements":[{"nativeSrc":"9168:25:6","nodeType":"YulAssignment","src":"9168:25:6","value":{"arguments":[{"name":"x","nativeSrc":"9191:1:6","nodeType":"YulIdentifier","src":"9191:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9173:17:6","nodeType":"YulIdentifier","src":"9173:17:6"},"nativeSrc":"9173:20:6","nodeType":"YulFunctionCall","src":"9173:20:6"},"variableNames":[{"name":"x","nativeSrc":"9168:1:6","nodeType":"YulIdentifier","src":"9168:1:6"}]},{"nativeSrc":"9202:25:6","nodeType":"YulAssignment","src":"9202:25:6","value":{"arguments":[{"name":"y","nativeSrc":"9225:1:6","nodeType":"YulIdentifier","src":"9225:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9207:17:6","nodeType":"YulIdentifier","src":"9207:17:6"},"nativeSrc":"9207:20:6","nodeType":"YulFunctionCall","src":"9207:20:6"},"variableNames":[{"name":"y","nativeSrc":"9202:1:6","nodeType":"YulIdentifier","src":"9202:1:6"}]},{"body":{"nativeSrc":"9249:22:6","nodeType":"YulBlock","src":"9249:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"9251:16:6","nodeType":"YulIdentifier","src":"9251:16:6"},"nativeSrc":"9251:18:6","nodeType":"YulFunctionCall","src":"9251:18:6"},"nativeSrc":"9251:18:6","nodeType":"YulExpressionStatement","src":"9251:18:6"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"9246:1:6","nodeType":"YulIdentifier","src":"9246:1:6"}],"functionName":{"name":"iszero","nativeSrc":"9239:6:6","nodeType":"YulIdentifier","src":"9239:6:6"},"nativeSrc":"9239:9:6","nodeType":"YulFunctionCall","src":"9239:9:6"},"nativeSrc":"9236:35:6","nodeType":"YulIf","src":"9236:35:6"},{"nativeSrc":"9281:14:6","nodeType":"YulAssignment","src":"9281:14:6","value":{"arguments":[{"name":"x","nativeSrc":"9290:1:6","nodeType":"YulIdentifier","src":"9290:1:6"},{"name":"y","nativeSrc":"9293:1:6","nodeType":"YulIdentifier","src":"9293:1:6"}],"functionName":{"name":"div","nativeSrc":"9286:3:6","nodeType":"YulIdentifier","src":"9286:3:6"},"nativeSrc":"9286:9:6","nodeType":"YulFunctionCall","src":"9286:9:6"},"variableNames":[{"name":"r","nativeSrc":"9281:1:6","nodeType":"YulIdentifier","src":"9281:1:6"}]}]},"name":"checked_div_t_uint256","nativeSrc":"9116:185:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9147:1:6","nodeType":"YulTypedName","src":"9147:1:6","type":""},{"name":"y","nativeSrc":"9150:1:6","nodeType":"YulTypedName","src":"9150:1:6","type":""}],"returnVariables":[{"name":"r","nativeSrc":"9156:1:6","nodeType":"YulTypedName","src":"9156:1:6","type":""}],"src":"9116:185:6"},{"body":{"nativeSrc":"9355:362:6","nodeType":"YulBlock","src":"9355:362:6","statements":[{"nativeSrc":"9365:25:6","nodeType":"YulAssignment","src":"9365:25:6","value":{"arguments":[{"name":"x","nativeSrc":"9388:1:6","nodeType":"YulIdentifier","src":"9388:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9370:17:6","nodeType":"YulIdentifier","src":"9370:17:6"},"nativeSrc":"9370:20:6","nodeType":"YulFunctionCall","src":"9370:20:6"},"variableNames":[{"name":"x","nativeSrc":"9365:1:6","nodeType":"YulIdentifier","src":"9365:1:6"}]},{"nativeSrc":"9399:25:6","nodeType":"YulAssignment","src":"9399:25:6","value":{"arguments":[{"name":"y","nativeSrc":"9422:1:6","nodeType":"YulIdentifier","src":"9422:1:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9404:17:6","nodeType":"YulIdentifier","src":"9404:17:6"},"nativeSrc":"9404:20:6","nodeType":"YulFunctionCall","src":"9404:20:6"},"variableNames":[{"name":"y","nativeSrc":"9399:1:6","nodeType":"YulIdentifier","src":"9399:1:6"}]},{"nativeSrc":"9433:28:6","nodeType":"YulVariableDeclaration","src":"9433:28:6","value":{"arguments":[{"name":"x","nativeSrc":"9456:1:6","nodeType":"YulIdentifier","src":"9456:1:6"},{"name":"y","nativeSrc":"9459:1:6","nodeType":"YulIdentifier","src":"9459:1:6"}],"functionName":{"name":"mul","nativeSrc":"9452:3:6","nodeType":"YulIdentifier","src":"9452:3:6"},"nativeSrc":"9452:9:6","nodeType":"YulFunctionCall","src":"9452:9:6"},"variables":[{"name":"product_raw","nativeSrc":"9437:11:6","nodeType":"YulTypedName","src":"9437:11:6","type":""}]},{"nativeSrc":"9470:41:6","nodeType":"YulAssignment","src":"9470:41:6","value":{"arguments":[{"name":"product_raw","nativeSrc":"9499:11:6","nodeType":"YulIdentifier","src":"9499:11:6"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"9481:17:6","nodeType":"YulIdentifier","src":"9481:17:6"},"nativeSrc":"9481:30:6","nodeType":"YulFunctionCall","src":"9481:30:6"},"variableNames":[{"name":"product","nativeSrc":"9470:7:6","nodeType":"YulIdentifier","src":"9470:7:6"}]},{"body":{"nativeSrc":"9688:22:6","nodeType":"YulBlock","src":"9688:22:6","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"9690:16:6","nodeType":"YulIdentifier","src":"9690:16:6"},"nativeSrc":"9690:18:6","nodeType":"YulFunctionCall","src":"9690:18:6"},"nativeSrc":"9690:18:6","nodeType":"YulExpressionStatement","src":"9690:18:6"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"9621:1:6","nodeType":"YulIdentifier","src":"9621:1:6"}],"functionName":{"name":"iszero","nativeSrc":"9614:6:6","nodeType":"YulIdentifier","src":"9614:6:6"},"nativeSrc":"9614:9:6","nodeType":"YulFunctionCall","src":"9614:9:6"},{"arguments":[{"name":"y","nativeSrc":"9644:1:6","nodeType":"YulIdentifier","src":"9644:1:6"},{"arguments":[{"name":"product","nativeSrc":"9651:7:6","nodeType":"YulIdentifier","src":"9651:7:6"},{"name":"x","nativeSrc":"9660:1:6","nodeType":"YulIdentifier","src":"9660:1:6"}],"functionName":{"name":"div","nativeSrc":"9647:3:6","nodeType":"YulIdentifier","src":"9647:3:6"},"nativeSrc":"9647:15:6","nodeType":"YulFunctionCall","src":"9647:15:6"}],"functionName":{"name":"eq","nativeSrc":"9641:2:6","nodeType":"YulIdentifier","src":"9641:2:6"},"nativeSrc":"9641:22:6","nodeType":"YulFunctionCall","src":"9641:22:6"}],"functionName":{"name":"or","nativeSrc":"9594:2:6","nodeType":"YulIdentifier","src":"9594:2:6"},"nativeSrc":"9594:83:6","nodeType":"YulFunctionCall","src":"9594:83:6"}],"functionName":{"name":"iszero","nativeSrc":"9574:6:6","nodeType":"YulIdentifier","src":"9574:6:6"},"nativeSrc":"9574:113:6","nodeType":"YulFunctionCall","src":"9574:113:6"},"nativeSrc":"9571:139:6","nodeType":"YulIf","src":"9571:139:6"}]},"name":"checked_mul_t_uint256","nativeSrc":"9307:410:6","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"9338:1:6","nodeType":"YulTypedName","src":"9338:1:6","type":""},{"name":"y","nativeSrc":"9341:1:6","nodeType":"YulTypedName","src":"9341:1:6","type":""}],"returnVariables":[{"name":"product","nativeSrc":"9347:7:6","nodeType":"YulTypedName","src":"9347:7:6","type":""}],"src":"9307:410:6"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Incorrect NFT contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e72294097c1f4c8d185f3e2a1180182b9d6e200520f64165a00a722caaffc5af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308(memPtr) {\n\n        mstore(add(memPtr, 0), \"Staking: Not the original owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e6862326d1c2b0bc5c7b79fc0eaf0e94558bbfc7c043634d53f8e7988975d308_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT is not staked\")\n\n    }\n\n    function abi_encode_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4238f4f49b7256131eac40a16cd54e8f279be6a977ce9d472a195cce5f2a15fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n","id":6,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"175":[{"length":32,"start":454},{"length":32,"start":825},{"length":32,"start":1240}],"177":[{"length":32,"start":1786},{"length":32,"start":2232}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100885760003560e01c80639342c8f41161005b5780639342c8f4146101275780639ee0bcbc14610143578063d5a44f8614610173578063f7c618c1146101a457610088565b8063150b7a021461008d57806347ccca02146100bd5780635108f256146100db578063910efae81461010b575b600080fd5b6100a760048036038101906100a291906109dd565b6101c2565b6040516100b49190610aa0565b60405180910390f35b6100c5610337565b6040516100d29190610aca565b60405180910390f35b6100f560048036038101906100f09190610ae5565b61035b565b6040516101029190610aca565b60405180910390f35b61012560048036038101906101209190610ae5565b6103ea565b005b610141600480360381019061013c9190610ae5565b6105ad565b005b61015d60048036038101906101589190610ae5565b6107e3565b60405161016a9190610b21565b60405180910390f35b61018d60048036038101906101889190610ae5565b610872565b60405161019b929190610b3c565b60405180910390f35b6101ac6108b6565b6040516101b99190610aca565b60405180910390f35b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610252576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024990610bc2565b60405180910390fd5b8460008086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504260008086815260200190815260200160002060000181905550838573ffffffffffffffffffffffffffffffffffffffff167f36b3725f1783bad4ff05b7f4c077c3aa68eeb23a4d054ba189db4d01ac278d396000808881526020019081526020016000206000015460405161031c9190610b21565b60405180910390a363150b7a0260e01b905095945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080600080848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060200151915050919050565b600080600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048990610c2e565b60405180910390fd5b6000808381526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166323b872dd3033856040518463ffffffff1660e01b815260040161053393929190610c4e565b600060405180830381600087803b15801561054d57600080fd5b505af1158015610561573d6000803e3d6000fd5b50505050813373ffffffffffffffffffffffffffffffffffffffff167f2aa1b4c95f3b2da9c955947fca584743ea0d457708fadf209c093061e98c4ccb60405160405180910390a35050565b600080600083815260200190815260200160002090503373ffffffffffffffffffffffffffffffffffffffff168160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610c2e565b60405180910390fd5b600081600001540361069c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069390610cd1565b60405180910390fd5b60008160000154426106ae9190610d20565b905060006018603c80846106c29190610d83565b6106cc9190610d83565b6106d69190610d83565b9050600181106107dd576000678ac7230489e80000826106f69190610db4565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0712d68826040518263ffffffff1660e01b81526004016107519190610b21565b600060405180830381600087803b15801561076b57600080fd5b505af115801561077f573d6000803e3d6000fd5b50505050843373ffffffffffffffffffffffffffffffffffffffff167fb981442338311d47912aead4f8d309ff0d9f814fca5087277f319a56741dd450836040516107ca9190610b21565b60405180910390a3428460000181905550505b50505050565b600080600080848152602001908152602001600020604051806040016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060000151915050919050565b60006020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061090f826108e4565b9050919050565b61091f81610904565b811461092a57600080fd5b50565b60008135905061093c81610916565b92915050565b6000819050919050565b61095581610942565b811461096057600080fd5b50565b6000813590506109728161094c565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261099d5761099c610978565b5b8235905067ffffffffffffffff8111156109ba576109b961097d565b5b6020830191508360018202830111156109d6576109d5610982565b5b9250929050565b6000806000806000608086880312156109f9576109f86108da565b5b6000610a078882890161092d565b9550506020610a188882890161092d565b9450506040610a2988828901610963565b935050606086013567ffffffffffffffff811115610a4a57610a496108df565b5b610a5688828901610987565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610a9a81610a65565b82525050565b6000602082019050610ab56000830184610a91565b92915050565b610ac481610904565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600060208284031215610afb57610afa6108da565b5b6000610b0984828501610963565b91505092915050565b610b1b81610942565b82525050565b6000602082019050610b366000830184610b12565b92915050565b6000604082019050610b516000830185610b12565b610b5e6020830184610abb565b9392505050565b600082825260208201905092915050565b7f5374616b696e673a20496e636f7272656374204e465420636f6e747261637400600082015250565b6000610bac601f83610b65565b9150610bb782610b76565b602082019050919050565b60006020820190508181036000830152610bdb81610b9f565b9050919050565b7f5374616b696e673a204e6f7420746865206f726967696e616c206f776e657200600082015250565b6000610c18601f83610b65565b9150610c2382610be2565b602082019050919050565b60006020820190508181036000830152610c4781610c0b565b9050919050565b6000606082019050610c636000830186610abb565b610c706020830185610abb565b610c7d6040830184610b12565b949350505050565b7f4e4654206973206e6f74207374616b6564000000000000000000000000000000600082015250565b6000610cbb601183610b65565b9150610cc682610c85565b602082019050919050565b60006020820190508181036000830152610cea81610cae565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d2b82610942565b9150610d3683610942565b9250828203905081811115610d4e57610d4d610cf1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d8e82610942565b9150610d9983610942565b925082610da957610da8610d54565b5b828204905092915050565b6000610dbf82610942565b9150610dca83610942565b9250828202610dd881610942565b91508282048414831517610def57610dee610cf1565b5b509291505056fea26469706673582212200d5c92b3116d5a2a766742583b0f67a6b97d2009a9ad843788d291435bba815664736f6c634300081b0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9342C8F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x9342C8F4 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x9EE0BCBC EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xD5A44F86 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x1A4 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x5108F256 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x910EFAE8 EQ PUSH2 0x10B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x125 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x120 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13C SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x5AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x188 SWAP2 SWAP1 PUSH2 0xAE5 JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP3 SWAP2 SWAP1 PUSH2 0xB3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x8B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0xACA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x252 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x249 SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x0 DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x36B3725F1783BAD4FF05B7F4C077C3AA68EEB23A4D054BA189DB4D01AC278D39 PUSH1 0x0 DUP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x31C SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x489 SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x533 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x54D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x561 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2AA1B4C95F3B2DA9C955947FCA584743EA0D457708FADF209C093061E98C4CCB PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xC2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SUB PUSH2 0x69C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x693 SWAP1 PUSH2 0xCD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD TIMESTAMP PUSH2 0x6AE SWAP2 SWAP1 PUSH2 0xD20 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x18 PUSH1 0x3C DUP1 DUP5 PUSH2 0x6C2 SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x6CC SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP2 LT PUSH2 0x7DD JUMPI PUSH1 0x0 PUSH8 0x8AC7230489E80000 DUP3 PUSH2 0x6F6 SWAP2 SWAP1 PUSH2 0xDB4 JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0712D68 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x77F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xB981442338311D47912AEAD4F8D309FF0D9F814FCA5087277F319A56741DD450 DUP4 PUSH1 0x40 MLOAD PUSH2 0x7CA SWAP2 SWAP1 PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 TIMESTAMP DUP5 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x91F DUP2 PUSH2 0x904 JUMP JUMPDEST DUP2 EQ PUSH2 0x92A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x93C DUP2 PUSH2 0x916 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x955 DUP2 PUSH2 0x942 JUMP JUMPDEST DUP2 EQ PUSH2 0x960 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x972 DUP2 PUSH2 0x94C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x99D JUMPI PUSH2 0x99C PUSH2 0x978 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9BA JUMPI PUSH2 0x9B9 PUSH2 0x97D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x9D6 JUMPI PUSH2 0x9D5 PUSH2 0x982 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x9F9 JUMPI PUSH2 0x9F8 PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA07 DUP9 DUP3 DUP10 ADD PUSH2 0x92D JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xA18 DUP9 DUP3 DUP10 ADD PUSH2 0x92D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xA29 DUP9 DUP3 DUP10 ADD PUSH2 0x963 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA4A JUMPI PUSH2 0xA49 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH2 0xA56 DUP9 DUP3 DUP10 ADD PUSH2 0x987 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA9A DUP2 PUSH2 0xA65 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAB5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xA91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAC4 DUP2 PUSH2 0x904 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xADF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB09 DUP5 DUP3 DUP6 ADD PUSH2 0x963 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB1B DUP2 PUSH2 0x942 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB36 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB12 JUMP JUMPDEST PUSH2 0xB5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xABB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B696E673A20496E636F7272656374204E465420636F6E747261637400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBAC PUSH1 0x1F DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xBB7 DUP3 PUSH2 0xB76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xBDB DUP2 PUSH2 0xB9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374616B696E673A204E6F7420746865206F726967696E616C206F776E657200 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC18 PUSH1 0x1F DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xC23 DUP3 PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC47 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xC63 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xC70 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xABB JUMP JUMPDEST PUSH2 0xC7D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xB12 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E4654206973206E6F74207374616B6564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCBB PUSH1 0x11 DUP4 PUSH2 0xB65 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC6 DUP3 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xCEA DUP2 PUSH2 0xCAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD2B DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xD36 DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4D PUSH2 0xCF1 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xD99 DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xDA9 JUMPI PUSH2 0xDA8 PUSH2 0xD54 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDBF DUP3 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP PUSH2 0xDCA DUP4 PUSH2 0x942 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xDD8 DUP2 PUSH2 0x942 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xDEF JUMPI PUSH2 0xDEE PUSH2 0xCF1 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD TLOAD SWAP3 0xB3 GT PUSH14 0x5A2A766742583B0F67A6B97D2009 0xA9 0xAD DUP5 CALLDATACOPY DUP9 0xD2 SWAP2 NUMBER JUMPDEST 0xBA DUP2 JUMP PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ","sourceMap":"433:3373:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;559:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3655:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2307:315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2842:653;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3501:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:39;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;593:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1680:383;1784:6;1824:3;1810:17;;:10;:17;;;1802:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;1900:4;1873:6;:10;1880:2;1873:10;;;;;;;;;;;:24;;;:31;;;;;;;;;;;;;;;;;;1937:15;1914:6;:10;1921:2;1914:10;;;;;;;;;;;:20;;:38;;;;1983:2;1977:4;1967:41;;;1987:6;:10;1994:2;1987:10;;;;;;;;;;;:20;;;1967:41;;;;;;:::i;:::-;;;;;;;;2026:30;;;2019:37;;1680:383;;;;;;;:::o;559:28::-;;;:::o;3655:149::-;3711:7;3730:18;3751:6;:10;3758:2;3751:10;;;;;;;;;;;3730:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3778:5;:19;;;3771:26;;;3655:149;;;:::o;2307:315::-;2359:19;2381:6;:10;2388:2;2381:10;;;;;;;;;;;2359:32;;2432:10;2409:33;;:5;:19;;;;;;;;;;;;:33;;;2401:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2496:6;:10;2503:2;2496:10;;;;;;;;;;;;2489:17;;;;;;;;;;;;;;;;;;;;;;;2524:3;2516:25;;;2550:4;2557:10;2569:2;2516:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2612:2;2600:10;2587:28;;;;;;;;;;;;2349:273;2307:315;:::o;2842:653::-;2898:19;2920:6;:10;2927:2;2920:10;;;;;;;;;;;2898:32;;2971:10;2948:33;;:5;:19;;;;;;;;;;;;:33;;;2940:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;3054:1;3035:5;:15;;;:20;3027:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3088:25;3134:5;:15;;;3116;:33;;;;:::i;:::-;3088:61;;3159:22;3214:2;3209;3204;3184:17;:22;;;;:::i;:::-;:27;;;;:::i;:::-;:32;;;;:::i;:::-;3159:57;;3249:1;3231:14;:19;3227:262;;3266:19;3305:8;3288:14;:25;;;;:::i;:::-;3266:47;;3340:11;3327:30;;;3358:11;3327:43;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3428:2;3403:10;3389:42;;;3415:11;3389:42;;;;;;:::i;:::-;;;;;;;;3463:15;3445:5;:15;;:33;;;;3252:237;3227:262;2888:607;;;2842:653;:::o;3501:149::-;3561:7;3580:18;3601:6;:10;3608:2;3601:10;;;;;;;;;;;3580:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3628:5;:15;;;3621:22;;;3501:149;;;:::o;636:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;593:36::-;;;:::o;88:117:6:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:118::-;3693:24;3711:5;3693:24;:::i;:::-;3688:3;3681:37;3606:118;;:::o;3730:222::-;3823:4;3861:2;3850:9;3846:18;3838:26;;3874:71;3942:1;3931:9;3927:17;3918:6;3874:71;:::i;:::-;3730:222;;;;:::o;3958:329::-;4017:6;4066:2;4054:9;4045:7;4041:23;4037:32;4034:119;;;4072:79;;:::i;:::-;4034:119;4192:1;4217:53;4262:7;4253:6;4242:9;4238:22;4217:53;:::i;:::-;4207:63;;4163:117;3958:329;;;;:::o;4293:118::-;4380:24;4398:5;4380:24;:::i;:::-;4375:3;4368:37;4293:118;;:::o;4417:222::-;4510:4;4548:2;4537:9;4533:18;4525:26;;4561:71;4629:1;4618:9;4614:17;4605:6;4561:71;:::i;:::-;4417:222;;;;:::o;4645:332::-;4766:4;4804:2;4793:9;4789:18;4781:26;;4817:71;4885:1;4874:9;4870:17;4861:6;4817:71;:::i;:::-;4898:72;4966:2;4955:9;4951:18;4942:6;4898:72;:::i;:::-;4645:332;;;;;:::o;4983:169::-;5067:11;5101:6;5096:3;5089:19;5141:4;5136:3;5132:14;5117:29;;4983:169;;;;:::o;5158:181::-;5298:33;5294:1;5286:6;5282:14;5275:57;5158:181;:::o;5345:366::-;5487:3;5508:67;5572:2;5567:3;5508:67;:::i;:::-;5501:74;;5584:93;5673:3;5584:93;:::i;:::-;5702:2;5697:3;5693:12;5686:19;;5345:366;;;:::o;5717:419::-;5883:4;5921:2;5910:9;5906:18;5898:26;;5970:9;5964:4;5960:20;5956:1;5945:9;5941:17;5934:47;5998:131;6124:4;5998:131;:::i;:::-;5990:139;;5717:419;;;:::o;6142:181::-;6282:33;6278:1;6270:6;6266:14;6259:57;6142:181;:::o;6329:366::-;6471:3;6492:67;6556:2;6551:3;6492:67;:::i;:::-;6485:74;;6568:93;6657:3;6568:93;:::i;:::-;6686:2;6681:3;6677:12;6670:19;;6329:366;;;:::o;6701:419::-;6867:4;6905:2;6894:9;6890:18;6882:26;;6954:9;6948:4;6944:20;6940:1;6929:9;6925:17;6918:47;6982:131;7108:4;6982:131;:::i;:::-;6974:139;;6701:419;;;:::o;7126:442::-;7275:4;7313:2;7302:9;7298:18;7290:26;;7326:71;7394:1;7383:9;7379:17;7370:6;7326:71;:::i;:::-;7407:72;7475:2;7464:9;7460:18;7451:6;7407:72;:::i;:::-;7489;7557:2;7546:9;7542:18;7533:6;7489:72;:::i;:::-;7126:442;;;;;;:::o;7574:167::-;7714:19;7710:1;7702:6;7698:14;7691:43;7574:167;:::o;7747:366::-;7889:3;7910:67;7974:2;7969:3;7910:67;:::i;:::-;7903:74;;7986:93;8075:3;7986:93;:::i;:::-;8104:2;8099:3;8095:12;8088:19;;7747:366;;;:::o;8119:419::-;8285:4;8323:2;8312:9;8308:18;8300:26;;8372:9;8366:4;8362:20;8358:1;8347:9;8343:17;8336:47;8400:131;8526:4;8400:131;:::i;:::-;8392:139;;8119:419;;;:::o;8544:180::-;8592:77;8589:1;8582:88;8689:4;8686:1;8679:15;8713:4;8710:1;8703:15;8730:194;8770:4;8790:20;8808:1;8790:20;:::i;:::-;8785:25;;8824:20;8842:1;8824:20;:::i;:::-;8819:25;;8868:1;8865;8861:9;8853:17;;8892:1;8886:4;8883:11;8880:37;;;8897:18;;:::i;:::-;8880:37;8730:194;;;;:::o;8930:180::-;8978:77;8975:1;8968:88;9075:4;9072:1;9065:15;9099:4;9096:1;9089:15;9116:185;9156:1;9173:20;9191:1;9173:20;:::i;:::-;9168:25;;9207:20;9225:1;9207:20;:::i;:::-;9202:25;;9246:1;9236:35;;9251:18;;:::i;:::-;9236:35;9293:1;9290;9286:9;9281:14;;9116:185;;;;:::o;9307:410::-;9347:7;9370:20;9388:1;9370:20;:::i;:::-;9365:25;;9404:20;9422:1;9404:20;:::i;:::-;9399:25;;9459:1;9456;9452:9;9481:30;9499:11;9481:30;:::i;:::-;9470:41;;9660:1;9651:7;9647:15;9644:1;9641:22;9621:1;9614:9;9594:83;9571:139;;9690:18;;:::i;:::-;9571:139;9355:362;9307:410;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"725600","executionCost":"infinite","totalCost":"infinite"},"external":{"getStakeOwner(uint256)":"5117","getStakeTimestamp(uint256)":"infinite","nft()":"infinite","onERC721Received(address,address,uint256,bytes)":"infinite","rewardToken()":"infinite","stakes(uint256)":"infinite","withdrawNft(uint256)":"infinite","withdrawRewards(uint256)":"infinite"}},"methodIdentifiers":{"getStakeOwner(uint256)":"5108f256","getStakeTimestamp(uint256)":"9ee0bcbc","nft()":"47ccca02","onERC721Received(address,address,uint256,bytes)":"150b7a02","rewardToken()":"f7c618c1","stakes(uint256)":"d5a44f86","withdrawNft(uint256)":"910efae8","withdrawRewards(uint256)":"9342c8f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardToken_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NFTStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"RewardsMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStakeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStakeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"withdrawNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Allows users to stake their NFTs and withdraw them later. Implements IERC721Receiver to receive NFTs.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"nft_\":\"The address of the ERC721 NFT contract that will be used for staking.\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"This function is called whenever an ERC721 token is transferred to this contract via `safeTransferFrom`. It will store the stake information in the `stakes` mapping.\",\"params\":{\"from\":\"The previous owner of the NFT (the address that staked the NFT).\",\"id\":\"The token ID of the NFT being staked.\"},\"returns\":{\"_0\":\"The selector to confirm that the NFT has been received.\"}},\"withdrawNft(uint256)\":{\"details\":\"Only the original owner of the NFT can withdraw it. The stake is deleted upon withdrawal.\",\"params\":{\"id\":\"The token ID of the staked NFT.\"}},\"withdrawRewards(uint256)\":{\"details\":\"Rewards are minted based on the duration the NFT was staked.\",\"params\":{\"id\":\"The token ID of the staked NFT.\"}}},\"title\":\"Staking Contract for ERC721 Tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor to set the NFT contract address.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handles the receipt of an ERC721 token.\"},\"withdrawNft(uint256)\":{\"notice\":\"Allows the original owner to withdraw their staked NFT.\"},\"withdrawRewards(uint256)\":{\"notice\":\"Allows the original owner to withdraw their staking rewards.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721Receiver.sol\\\";\\n\",\"keccak256\":\"0x7bd5dc796c245d4c52836610455d172cdfcc1f8dcf0d9b1c4cbde212fde02965\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/IRewardToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.27;\\n\\ninterface IRewardToken {\\n    /**\\n     * @notice Mints `amount` tokens to the `account`.\\n     * @param amount The number of tokens to mint.\\n     */\\n    function mint(uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x2539a8aa7b80cb229a9587af7540530e95269af4032131b9183453572be433d0\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.27;\\n\\nimport {IERC721Receiver} from \\\"@openzeppelin/contracts/interfaces/IERC721Receiver.sol\\\";\\nimport {IERC721} from \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport {IRewardToken} from \\\"./IRewardToken.sol\\\";\\n\\n/**\\n * @title Staking Contract for ERC721 Tokens\\n * @dev Allows users to stake their NFTs and withdraw them later. Implements IERC721Receiver to receive NFTs.\\n */\\ncontract Staking is IERC721Receiver {\\n    struct Stake {\\n        uint256 timestamp;\\n        address originalOwner;\\n    }\\n\\n    address public immutable nft;\\n    address public immutable rewardToken;\\n\\n    mapping(uint256 => Stake) public stakes;\\n\\n    event NFTStaked(address indexed owner, uint256 indexed tokenId, uint256 timestamp);\\n    event NFTWithdrawn(address indexed owner, uint256 indexed tokenId);\\n    event RewardsMinted(address indexed owner, uint256 amount, uint256 indexed tokenId);\\n\\n    /**\\n     * @notice Constructor to set the NFT contract address.\\n     * @param nft_ The address of the ERC721 NFT contract that will be used for staking.\\n     */\\n    constructor(address nft_, address rewardToken_) {\\n        nft = nft_;\\n        rewardToken = rewardToken_;\\n    }\\n\\n    /**\\n     * @notice Handles the receipt of an ERC721 token.\\n     * @dev This function is called whenever an ERC721 token is transferred to this contract via `safeTransferFrom`.\\n     * It will store the stake information in the `stakes` mapping.\\n     * @param from The previous owner of the NFT (the address that staked the NFT).\\n     * @param id The token ID of the NFT being staked.\\n     * @return The selector to confirm that the NFT has been received.\\n     */\\n    function onERC721Received(address, address from, uint256 id, bytes calldata) external override returns (bytes4) {\\n        require(msg.sender == nft, \\\"Staking: Incorrect NFT contract\\\");\\n        stakes[id].originalOwner = from;\\n        stakes[id].timestamp = block.timestamp;\\n        emit NFTStaked(from, id, stakes[id].timestamp);\\n\\n        return this.onERC721Received.selector;\\n    }\\n\\n    /**\\n     * @notice Allows the original owner to withdraw their staked NFT.\\n     * @dev Only the original owner of the NFT can withdraw it. The stake is deleted upon withdrawal.\\n     * @param id The token ID of the staked NFT.\\n     */\\n    function withdrawNft(uint256 id) external {\\n        Stake storage stake = stakes[id];\\n        require(stake.originalOwner == msg.sender, \\\"Staking: Not the original owner\\\");\\n\\n        delete stakes[id];\\n        IERC721(nft).transferFrom(address(this), msg.sender, id);\\n        emit NFTWithdrawn(msg.sender, id);\\n    }\\n\\n    /**\\n     * @notice Allows the original owner to withdraw their staking rewards.\\n     * @dev Rewards are minted based on the duration the NFT was staked.\\n     * @param id The token ID of the staked NFT.\\n     */\\n    function withdrawRewards(uint256 id) external {\\n        Stake storage stake = stakes[id];\\n        require(stake.originalOwner == msg.sender, \\\"Staking: Not the original owner\\\");\\n        require(stake.timestamp != 0, \\\"NFT is not staked\\\");\\n\\n        uint256 durationInSeconds = block.timestamp - stake.timestamp;\\n        uint256 durationInDays = durationInSeconds / 60 / 60 / 24;\\n\\n        if (durationInDays >= 1) {\\n            uint256 tokenAmount = durationInDays * 10 ether;\\n            IRewardToken(rewardToken).mint(tokenAmount);\\n            emit RewardsMinted(msg.sender, tokenAmount, id);\\n            stake.timestamp = block.timestamp;\\n        }\\n    }\\n\\n    function getStakeTimestamp(uint256 id) public view returns (uint256) {\\n        Stake memory stake = stakes[id];\\n        return stake.timestamp;\\n    }\\n    function getStakeOwner(uint256 id) public view returns (address) {\\n        Stake memory stake = stakes[id];\\n        return stake.originalOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x8e563e3a777fdb36df154f3cd48cf76e74ad37805bff57c0e0719e6af2580895\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":182,"contract":"contracts/Staking.sol:Staking","label":"stakes","offset":0,"slot":"0","type":"t_mapping(t_uint256,t_struct(Stake)173_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_uint256,t_struct(Stake)173_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct Staking.Stake)","numberOfBytes":"32","value":"t_struct(Stake)173_storage"},"t_struct(Stake)173_storage":{"encoding":"inplace","label":"struct Staking.Stake","members":[{"astId":170,"contract":"contracts/Staking.sol:Staking","label":"timestamp","offset":0,"slot":"0","type":"t_uint256"},{"astId":172,"contract":"contracts/Staking.sol:Staking","label":"originalOwner","offset":0,"slot":"1","type":"t_address"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{"constructor":{"notice":"Constructor to set the NFT contract address."},"onERC721Received(address,address,uint256,bytes)":{"notice":"Handles the receipt of an ERC721 token."},"withdrawNft(uint256)":{"notice":"Allows the original owner to withdraw their staked NFT."},"withdrawRewards(uint256)":{"notice":"Allows the original owner to withdraw their staking rewards."}},"version":1}}}}}}